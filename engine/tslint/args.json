{
    "$schema": "https://repometric.github.io/linterhub/schema/args.json",
    "id": "tslint",
    "name": "tslint",
    "type": "object",
    "allOf": [
        {
            "$ref": "#/definitions/arguments"
        }
    ],
    "definitions": {
        "arguments": {
            "type": "object",
	    "description": "The engine command line arguments",
            "properties": {
                "--config":{
                    "id": "linterhub:--config",
                    "type": "string",
                    "description": "The location of the configuration file that tslint will use to determine which rules are activated and what options to provide to the rules. If no option is specified, the config file named tslint.json is used, so long as it exists in the path. The format of the file is { rules: { /* rules list */ } }, where /* rules list */ is a key: value comma-separated list of rulename: rule-options pairs. Rule-options can be either a boolean true/false value denoting whether the rule is used or not, or a list [boolean, ...] where the boolean provides the same role as in the non-list case, and the rest of the list are options passed to the rule that will determine what it checks for (such as number of characters for the max-line-length rule, or what functions to ban for the ban rule)."
                },
                "--exclude":{
                    "id":"args:--exclude",
                    "type":"string",
                    "description":"A filename or glob which indicates files to exclude from linting. This option can be supplied multiple times if you need multiple globs to indicate which files to exclude."
                },
                "--fix":{
                    "id":"args:--fix",
                    "type":"null",
                    "description":"Fixes linting errors for select rules. This may overwrite linted files."
                },
                "--force":{
                    "id":"args:--force",
                    "type":"null",
                    "description":"Return status code 0 even if there are any lint errors. Useful while running as npm script."
                },
                "--init":{
                    "id":"args:--init",
                    "type":"null",
                    "description":"Generates a tslint.json config file in the current working directory."
                },
                "--out":{
                    "id":"args:--out",
                    "type":"string",
                    "description":"A filename to output the results to. By default, tslint outputs to stdout, which is usually the console where you're running it from."
                },
                "--outputAbsolutePaths":{
                    "id":"args:--outputAbsolutePaths",
                    "type":"null",
                    "description":"If true, all paths in the output will be absolute."
                },
                "--rules-dir":{
                    "id":"args:--rules-dir",
                    "type":"string",
                    "description":"An additional rules directory, for user-created rules. tslint will always check its default rules directory, in node_modules/tslint/lib/rules, before checking the user-provided rules directory, so rules in the user-provided rules directory with the same name as the base rules will not be loaded."
                },
                "--formatters-dir":{
                    "id":"args:--formatters-dir",
                    "type":"string",
                    "description":"An additional formatters directory, for user-created formatters. Formatters are files that will format the tslint output, before writing it to stdout or the file passed in --out. The default directory, node_modules/tslint/build/formatters, will always be checked first, so user-created formatters with the same names as the base formatters will not be loaded."
                },
                "--format":{
                    "id":"args:--format",
                    "type":"string",
                    "description":"The formatter to use to format the results of the linter before outputting it to stdout or the file passed in --out. The core formatters are prose (human readable), json (machine readable) and verbose. prose is the default if this option is not used. Other built-in options include pmd, msbuild, checkstyle, and vso. Additional formatters can be added and used if the --formatters-dir option is set."
                },
                "--test":{
                    "id":"args:--test",
                    "type":"null",
                    "description":"Runs tslint on matched directories and checks if tslint outputs match the expected output in .lint files. Automatically loads the tslint.json files in the directories as the configuration file for the tests. See the full tslint documentation for more details on how this can be used to test custom rules."
                },
                "--project":{
                    "id":"args:--project",
                    "type":"string",
                    "description":"The path or directory containing a tsconfig.json file that will be used to determine which files will be linted. This flag also enables rules that require the type checker."
                },
                "--type-check":{
                    "id":"args:--type-check",
                    "type":"null",
                    "description":"(deprecated) Checks for type errors before linting a project. --project must be specified in order to enable type checking."
                },
                "": {
                    "id": "linterhub:path",
                    "type": "string",
                    "description": "Path for analysis"
                },
                "--version": {
                    "id:": "linterhub:version",
                    "type": "null",
                    "description": "Output the version number"
                },
                "--help": {
                    "type": "null",
                    "description": "Output usage information"
                }
            }
        },
        "section": {
            "type": "object",
            "description": "The engine configuration section",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The engine name",
                    "enum": [
                        "tslint"
                    ]
                },
                "arguments": {
                    "type": "object",
                    "description": "The engine configuration",
                    "$ref": "#/definitions/arguments"
                }
            }
        }
    }
}
