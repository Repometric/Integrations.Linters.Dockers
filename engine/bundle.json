{
    "$schema": "https://repometric.github.io/linterhub/schema/bundle.json",
    "alex": {
        "args": {
            "$schema": "https://repometric.github.io/linterhub/schema/args.json",
            "id": "alex",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/arguments"
                }
            ],
            "definitions": {
                "arguments": {
                    "type": "object",
                    "properties": {
                        "--quiet": {
                            "id": "args:--quiet",
                            "type": "null",
                            "description": "output only warnings and errors"
                        },
                        "--text": {
                            "id": "args:--text",
                            "type": "string",
                            "description": "treat input as plain-text (not markdown)"
                        },
                        "--diff": {
                            "type": "null",
                            "description": "ignore unchanged lines (affects Travis only)"
                        },
                        "--why": {
                            "type": "null",
                            "description": "output sources (when available)"
                        },
                        "": {
                            "id": "linterhub:path",
                            "type": "string",
                            "description": "Path for analysis"
                        }
                    }
                },
                "section": {
                    "type": "object",
                    "description": "The engine configuration section",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "The engine name",
                            "enum": [
                                "alex"
                            ]
                        },
                        "arguments": {
                            "type": "object",
                            "description": "The engine configuration",
                            "$ref": "#/definitions/arguments"
                        }
                    }
                }
            }
        },
        "deps": {
            "$schema": "https://repometric.github.io/linterhub/schema/deps.json",
            "name": "alex",
            "dependencies": [
                [
                    {
                        "manager": "platform",
                        "package": "npm"
                    },
                    {
                        "manager": "npm",
                        "package": "alex",
                        "version": "5.1.0",
                        "engine": true
                    }
                ]
            ]
        },
        "meta": {
            "$schema": "https://repometric.github.io/linterhub/schema/meta.json",
            "name": "alex",
            "description": "Catch insensitive, inconsiderate writing",
            "url": "http://alexjs.com",
            "languages": [
                "Text"
            ],
            "license": "MIT"
        }
    },
    "bandit": {
        "args": {
            "$schema": "https://repometric.github.io/linterhub/schema/args.json",
            "id": "bandit",
            "name": "bandit",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/arguments"
                }
            ],
            "definitions": {
                "arguments": {
                    "type": "object",
                    "description": "The engine command line arguments",
                    "properties": {
                        "--recursive": {
                            "id": "args:--recursive",
                            "type": "null",
                            "description": "find and process files in subdirectories"
                        },
                        "--aggregate": {
                            "id": "--aggregate",
                            "type": "string",
                            "description": "aggregate output by vulnerability (default) or by filename"
                        },
                        "--number": {
                            "id": "--number",
                            "type": "string",
                            "description": "maximum number of code lines to output for each issue"
                        },
                        "--configfile": {
                            "id": "linterhub:--configfile",
                            "type": "string",
                            "description": "optional config file to use for selecting plugins and overriding defaults"
                        },
                        "--profile": {
                            "id": "args:--profile",
                            "type": "null",
                            "description": "profile to use (defaults to executing all tests)"
                        },
                        "--tests": {
                            "id": "args:--tests",
                            "type": "string",
                            "description": "comma-separated list of test IDs to run"
                        },
                        "--skip": {
                            "id": "args:--skip",
                            "type": "string",
                            "description": "comma-separated list of test IDs to skip"
                        },
                        "--level": {
                            "id": "args:--level",
                            "type": "string",
                            "description": "report only issues of a given severity level or higher (-l for LOW, -ll for MEDIUM, -lll for HIGH)"
                        },
                        "--confidence": {
                            "id": "args:--confidence",
                            "type": "string",
                            "description": "report only issues of a given confidence level or higher (-i for LOW, -ii for MEDIUM, -iii for HIGH)"
                        },
                        "--format": {
                            "id": "--format",
                            "type": "string",
                            "description": "specify output format",
                            "enum": [
                                "csv",
                                "custom",
                                "html",
                                "json",
                                "screen",
                                "txt",
                                "xml",
                                "yaml"
                            ]
                        },
                        "--msg-template": {
                            "id": "--msg-template",
                            "type": "string",
                            "description": "specify output message template (only usable with --format custom), see CUSTOM FORMAT section for list of available values"
                        },
                        "--output": {
                            "id": "--output",
                            "type": "string",
                            "description": "write report to filename"
                        },
                        "--verbose": {
                            "id": "--verbose",
                            "type": "null",
                            "description": "output extra information like excluded and included files"
                        },
                        "--debug": {
                            "id": "args:--debug",
                            "type": "null",
                            "description": "turn on debug mode"
                        },
                        "--ignore-nosec": {
                            "id": "args:--ignore-nosec",
                            "type": "null",
                            "description": "do not skip lines with # nosec comments"
                        },
                        "--exclude": {
                            "id": "args:--exclude",
                            "type": "string",
                            "description": "comma-separated list of paths to exclude from scan (note that these are in addition to the excluded paths provided in the config file)"
                        },
                        "--baseline": {
                            "id": "--baseline",
                            "type": "string",
                            "description": "path of a baseline report to compare against (only JSON-formatted files are accepted)"
                        },
                        "--ini": {
                            "id": "--ini",
                            "type": "string",
                            "description": "path to a .bandit file that supplies command line arguments"
                        },
                        "--help": {
                            "type": "string",
                            "description": "Show help"
                        },
                        "--version": {
                            "id": "linterhub:version",
                            "type": "string",
                            "description": "Show version"
                        },
                        "": {
                            "id": "linterhub:path",
                            "type": "string",
                            "description": "Path for analysis"
                        }
                    }
                },
                "section": {
                    "type": "object",
                    "description": "The engine configuration section",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "The engine name",
                            "enum": [
                                "bandit"
                            ]
                        },
                        "options": {
                            "type": "object",
                            "description": "The engine configuration",
                            "$ref": "#/definitions/arguments"
                        }
                    }
                }
            }
        },
        "deps": {
            "$schema": "https://repometric.github.io/linterhub/schema/deps.json",
            "name": "bandit",
            "dependencies": [
                [
                    {
                        "manager": "platform",
                        "package": "pip"
                    },
                    {
                        "manager": "pip",
                        "package": "bandit",
                        "version": "1.4.0",
                        "engine": true
                    }
                ]
            ]
        },
        "meta": {
            "$schema": "https://repometric.github.io/linterhub/schema/meta.json",
            "name": "bandit",
            "description": "Security oriented static analyser for python code",
            "url": "https://wiki.openstack.org/wiki/Security/Projects/Bandit",
            "languages": [
                "Python"
            ],
            "license": "Apache-2.0"
        }
    },
    "bootlint": {
        "args": {
            "$schema": "https://repometric.github.io/linterhub/schema/args.json",
            "id": "bootlint",
            "name": "bootlint",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/arguments"
                }
            ],
            "definitions": {
                "arguments": {
                    "type": "object",
                    "properties": {
                        "--help": {
                            "type": "null",
                            "description": "output usage information"
                        },
                        "--version": {
                            "id": "linterhub:version",
                            "type": "null",
                            "description": "output the version number"
                        },
                        "--disable": {
                            "id": "args:--disable",
                            "type": "string",
                            "description": "Comma-separated list of disabled lint problem IDs"
                        },
                        "": {
                            "id": "linterhub:path",
                            "type": "string",
                            "description": "Path for analysis"
                        }
                    }
                },
                "section": {
                    "type": "object",
                    "description": "The engine configuration section",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "The engine name",
                            "enum": [
                                "bootlint"
                            ]
                        },
                        "options": {
                            "type": "object",
                            "description": "The engine configuration",
                            "$ref": "#/definitions/arguments"
                        }
                    }
                }
            }
        },
        "deps": {
            "$schema": "https://repometric.github.io/linterhub/schema/deps.json",
            "name": "bootlint",
            "dependencies": [
                [
                    {
                        "manager": "platform",
                        "package": "npm"
                    },
                    {
                        "manager": "npm",
                        "package": "bootlint",
                        "version": "0.14.2",
                        "engine": true
                    }
                ]
            ]
        },
        "meta": {
            "$schema": "https://repometric.github.io/linterhub/schema/meta.json",
            "name": "bootlint",
            "description": "HTML linter for Bootstrap projects",
            "url": "https://github.com/twbs/bootlint",
            "areas": [],
            "languages": [
                "HTML"
            ],
            "license": "MIT"
        }
    },
    "brakeman": {
        "args": {
            "$schema": "https://repometric.github.io/linterhub/schema/args.json",
            "id": "brakeman",
            "name": "brakeman",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/arguments"
                }
            ],
            "definitions": {
                "arguments": {
                    "type": "object",
                    "properties": {
                        "--help": {
                            "type": "null",
                            "description": "full list of options"
                        },
                        "-A": {
                            "id": "args:-A",
                            "type": "null",
                            "description": "To run all checks"
                        },
                        "-n": {
                            "id": "args:-n",
                            "type": "null",
                            "description": "To disable the running of each check in a separate thread"
                        },
                        "--path": {
                            "id": "linterhub:path",
                            "type": "string",
                            "description": "To specify the path for scanning"
                        },
                        "-q": {
                            "id": "-q",
                            "type": "null",
                            "description": "To suppress informational warnings and just output the report"
                        },
                        "-z": {
                            "id": "-z",
                            "type": "null",
                            "description": "To return an error code when warnings were found"
                        },
                        "-3": {
                            "id": "args:-3",
                            "type": "null",
                            "description": "To force Brakeman into Rails 3 mode"
                        },
                        "-4": {
                            "id": "args:-4",
                            "type": "null",
                            "description": "To force Brakeman into Rails 4 mode"
                        },
                        "--no-assume-routes": {
                            "id": "args:--no-assume-routes",
                            "type": "null",
                            "description": "To disable the assumption that all controller methods are actions"
                        },
                        "--escape-html": {
                            "type": "null",
                            "description": "To force Brakeman to assume output is escaped by default"
                        },
                        "--faster": {
                            "id": "args:--faster",
                            "type": "null",
                            "description": "Try, if Brakeman is running a bit slow. This may cause Brakeman to miss some vulnerabilities"
                        },
                        "--no-branching": {
                            "id": "args:--no-branching",
                            "type": "null",
                            "description": "To disable flow sensitivity in If expressions"
                        },
                        "--branch-limit": {
                            "id": "args:--branch-limit",
                            "type": "integer",
                            "description": "To instead limit the number of branches tracked for a given value.The default value is 5. Lower values generally make Brakeman go faster. -1 is the same as unlimited"
                        },
                        "--skip-files": {
                            "id": "args:--skip-files",
                            "type": "string",
                            "description": "To skip certain files or directories use"
                        },
                        "--only-files": {
                            "id": "args:--only-files",
                            "type": "string",
                            "description": "To choose specific files or directories to scan"
                        },
                        "--skip-libs": {
                            "id": "args:--skip-libs",
                            "type": "null",
                            "description": "To skip processing of the lib/ directory"
                        },
                        "--test": {
                            "id": "args:--test",
                            "type": "string",
                            "description": "To run a subset of checks"
                        },
                        "--except": {
                            "id": "args:--except",
                            "type": "string",
                            "description": "To exclude certain checks"
                        },
                        "-d": {
                            "id": "-d",
                            "type": "null",
                            "description": "To see all kinds of debugging information"
                        },
                        "-o": {
                            "type": "string",
                            "description": "To specify an output file for the results"
                        },
                        "--css-file": {
                            "type": "string",
                            "description": "To specify a CSS stylesheet to use with the HTML report"
                        },
                        "--no-combine-locations": {
                            "id": "args:--no-combine-locations",
                            "type": "null",
                            "description": "By default, Brakeman will only report a single warning of a given type for the same line of code. This can be disabled"
                        },
                        "--no-highlights": {
                            "type": "null",
                            "description": "To disable highlighting of dangerous or user input values in warnings"
                        },
                        "--routes": {
                            "type": "null",
                            "description": "To report controller and route information"
                        },
                        "--message-limit": {
                            "type": "integer",
                            "description": "To set the limit on message length in HTML reports"
                        },
                        "--table-width": {
                            "type": "integer",
                            "description": "To limit width of the tables output in text reports"
                        },
                        "--no-separate-models": {
                            "type": "null",
                            "description": "To get all models in one warning"
                        },
                        "--summary": {
                            "type": "null",
                            "description": "To get not a big report, just the summary"
                        },
                        "--absolute-paths": {
                            "type": "null",
                            "description": "To use absolute paths"
                        },
                        "--github-repo": {
                            "type": "string",
                            "description": "To output Markdown with nice links to files on Github"
                        },
                        "--compare": {
                            "type": "string",
                            "description": "To compare results of a scan with a previous scan. This will output JSON with two lists: one of fixed warnings and one of new warnings"
                        },
                        "--no-pager": {
                            "type": "null",
                            "description": "To have brakeman output directly to terminal"
                        },
                        "-C": {
                            "type": "null",
                            "description": "Output the currently set options"
                        },
                        "-c": {
                            "id": "linterhub:config",
                            "type": "string",
                            "description": "To specify a configuration YAML file to use"
                        },
                        "--version": {
                            "id": "linterhub:version",
                            "type": "null",
                            "description": "Show version of linter"
                        },
                        "": {
                            "id": "linterhub:path",
                            "type": "string",
                            "description": "Path for analysis"
                        }
                    }
                },
                "section": {
                    "type": "object",
                    "description": "The engine configuration section",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "The engine name",
                            "enum": [
                                "brakeman"
                            ]
                        },
                        "options": {
                            "type": "object",
                            "description": "The engine configuration",
                            "$ref": "#/definitions/arguments"
                        }
                    }
                }
            }
        },
        "deps": {
            "$schema": "https://repometric.github.io/linterhub/schema/deps.json",
            "name": "brakeman",
            "dependencies": [
                [
                    {
                        "manager": "platform",
                        "package": "gem"
                    },
                    {
                        "manager": "gem",
                        "package": "brakeman",
                        "version": "4.2.1",
                        "engine": true
                    }
                ]
            ]
        },
        "meta": {
            "$schema": "https://repometric.github.io/linterhub/schema/meta.json",
            "name": "brakeman",
            "description": "A static analysis security vulnerability scanner for Ruby on Rails applications.",
            "url": "https://brakemanscanner.org/",
            "languages": [
                "Ruby"
            ],
            "license": "MIT"
        }
    },
    "ccm": {
        "args": {
            "$schema": "https://repometric.github.io/linterhub/schema/args.json",
            "name": "ccm",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/arguments"
                }
            ],
            "definitions": {
                "arguments": {
                    "type": "object",
                    "properties": {
                        "--config-file": {
                            "id": "linterhub:config",
                            "type": "string",
                            "description": "Path to configuration file (see below for structure of file). Using a configuration file provides more control, such as analyzing multiple folders, excluding folders and files and controlling number of metrics outputted."
                        },
                        "--xml": {
                            "id": "args:--xml",
                            "type": "string",
                            "description": "Save the report, as XML, to the specified file."
                        },
                        "--ignorecases": {
                            "id": "args:--ignorecases",
                            "type": "string",
                            "description": "Don't count each case in a switch as additional branch."
                        },
                        "--threshold": {
                            "id": "args:--threshold",
                            "type": "string",
                            "description": "Don't report metrics less than the threshold."
                        },
                        "--nummetrics": {
                            "id": "args:--nummetrics",
                            "type": "number",
                            "description": "Report only top <X> metrics (see numMetrics element in config file)."
                        },
                        "": {
                            "id": "linterhub:path",
                            "type": "string",
                            "description": "Provide a path to source code for analysis. This will be analyzed recursively and 30 worst metrics outputted."
                        },
                        "--help": {
                            "type": "null",
                            "description": "Show help"
                        },
                        "--v": {
                            "id": "linterhub:version",
                            "type": "null",
                            "description": "Add /v if you want ccm-version to be printed to console."
                        }
                    }
                },
                "section": {
                    "type": "object",
                    "description": "The engine configuration section",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "The engine name",
                            "enum": [
                                "ccm"
                            ]
                        },
                        "arguments": {
                            "type": "object",
                            "description": "The engine configuration",
                            "$ref": "#/definitions/arguments"
                        }
                    }
                }
            }
        },
        "deps": {
            "$schema": "https://repometric.github.io/linterhub/schema/deps.json",
            "name": "ccm",
            "dependencies": [
                [
                    {
                        "manager": "os",
                        "package": "win"
                    },
                    {
                        "manager": "platform",
                        "package": ".net",
                        "version": "3.5"
                    },
                    {
                        "manager": "url",
                        "package": "https://github.com/jonasblunck/ccm/releases/download/v1.1.11/ccm.1.1.11.zip",
                        "version": "1.1.11",
                        "engine": true
                    }
                ],
                [
                    {
                        "manager": "platform",
                        "package": "mono",
                        "version": "2.8"
                    },
                    {
                        "manager": "url",
                        "package": "https://github.com/jonasblunck/ccm/releases/download/v1.1.11/ccm.1.1.11.zip",
                        "version": "1.1.11",
                        "engine": true
                    }
                ]
            ]
        },
        "meta": {
            "$schema": "https://repometric.github.io/linterhub/schema/meta.json",
            "name": "ccm",
            "description": "CCM is a tool that analyzes c, c++, c#, javascript and TypeScript code and reports back with cyclomatic complexity metric.",
            "url": "https://github.com/jonasblunck/ccm",
            "languages": [
                "C#",
                "C++",
                "C",
                "JavaScript",
                "TypeScript"
            ],
            "license": "MIT"
        }
    },
    "checkstyle": {
        "args": {
            "$schema": "https://repometric.github.io/linterhub/schema/args.json",
            "name": "checkstyle",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/arguments"
                }
            ],
            "definitions": {
                "arguments": {
                    "type": "object",
                    "properties": {
                        "--exclude-regexp": {
                            "id": "args:--exclude-regexp",
                            "type": "string",
                            "description": "Regular expression of directory to exclude from CheckStyle"
                        },
                        "--tree-walker-threads-number": {
                            "id": "args:--tree-walker-threads-number",
                            "type": "number",
                            "description": "(experimental) The number of TreeWalker threads (must be greater than zero)"
                        },
                        "--treeWithComments": {
                            "id": "args:--treeWithComments",
                            "type": "null",
                            "description": "Print Abstract Syntax Tree(AST) of the file including comments"
                        },
                        "--tree": {
                            "id": "args:--tree",
                            "type": "null",
                            "description": "Print Abstract Syntax Tree(AST) of the file"
                        },
                        "-p": {
                            "id": "args:-p",
                            "type": "string",
                            "description": "Loads the properties file"
                        },
                        "-o": {
                            "id": "linterhub:filename",
                            "type": "string",
                            "description": "Sets the output file. Defaults to stdout"
                        },
                        "--treeWithJavadoc": {
                            "id": "args:--treeWithJavadoc",
                            "type": "null",
                            "description": "Print full Abstract Syntax Tree of the file"
                        },
                        "--javadocTree": {
                            "id": "args:--javadocTree",
                            "type": "null",
                            "description": "Print Parse tree of the Javadoc comment"
                        },
                        "-f": {
                            "type": "string",
                            "description": "Sets the output format. (plain|xml). Defaults to plain"
                        },
                        "--executeIgnoredModules": {
                            "id": "args:--executeIgnoredModules",
                            "type": "null",
                            "description": "Allows ignored modules to be run."
                        },
                        "--exclude": {
                            "id": "args:--exclude",
                            "type": "string",
                            "description": "Directory path to exclude from CheckStyle"
                        },
                        "--debug": {
                            "id": "args:--debug",
                            "type": "null",
                            "description": " Print all debug logging of CheckStyle utility"
                        },
                        "--checker-threads-number": {
                            "id": "args:--checker-threads-number",
                            "type": "number",
                            "description": "(experimental) The number of Checker threads (must be greater than zero)"
                        },
                        "-c": {
                            "id": "args:-c",
                            "type": "string",
                            "description": "Sets the check configuration file to use."
                        },
                        "": {
                            "id": "linterhub:path",
                            "type": "string",
                            "description": "Provide a path to source code for analysis. "
                        },
                        "--help": {
                            "type": "null",
                            "description": "Show help"
                        },
                        "--v": {
                            "id": "linterhub:version",
                            "type": "null",
                            "description": "Show version."
                        }
                    }
                },
                "section": {
                    "type": "object",
                    "description": "The engine configuration section",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "The engine name",
                            "enum": [
                                "checkstyle"
                            ]
                        },
                        "arguments": {
                            "type": "object",
                            "description": "The engine configuration",
                            "$ref": "#/definitions/arguments"
                        }
                    }
                }
            }
        },
        "deps": {
            "$schema": "https://repometric.github.io/linterhub/schema/deps.json",
            "name": "checkstyle",
            "dependencies": [
                [
                    {
                        "manager": "platform",
                        "package": "java"
                    },
                    {
                        "manager": "url",
                        "package": "http://repo1.maven.org/maven2/com/puppycrawl/tools/checkstyle/8.9/checkstyle-8.9.jar",
                        "version": "8.9",
                        "engine": true
                    }
                ]
            ]
        },
        "meta": {
            "$schema": "https://repometric.github.io/linterhub/schema/meta.json",
            "name": "checkstyle",
            "description": "Checkstyle is a tool for checking Java source code for adherence to a Code Standard or set of validation rules (best practices).",
            "url": "https://github.com/checkstyle/checkstyle",
            "languages": [
                "Java",
                "JavaScript",
                "CSS"
            ],
            "license": "LGPL-2.1"
        }
    },
    "classycle": {
        "args": {
            "$schema": "https://repometric.github.io/linterhub/schema/args.json",
            "name": "classycle",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/options"
                }
            ],
            "definitions": {
                "arguments": {
                    "type": "object",
                    "properties": {
                        "-csvFile": {
                            "type": "null",
                            "description": "Creates the specified comma-separated-value (CSV) file containing a table with all classes but no dependencies."
                        },
                        "-xmlFile": {
                            "type": "null",
                            "description": "Creates the specified file with an XML report."
                        },
                        "-title": {
                            "id": "args:-title",
                            "type": "string",
                            "description": "Value of the title element of the XML report. If the title is not specified the first argument of the list of class files will be used."
                        },
                        "-reflectionPattern": {
                            "id": "args:-reflectionPattern",
                            "type": "string",
                            "description": "Comma-separated list of zero or more wild-card patterns for fully-qualified class names which are referred in the class file by plain string constants. Only '*' is interpreted as wild-card character.  This allows e.g. that a class with the following line of code has a reference to java.lang.Thread:  Class clazz = Thread.class; The following code has the same effect:  String className = 'java.lang.Thread'; If no pattern is defined all strings which are valid class names (like hello, www.w3c.org) would be treated like class references."
                        },
                        "-excludingClasses": {
                            "id": "args:-excludingClasses",
                            "type": "string",
                            "description": "Comma-separated list of one or more wild-card patterns for fully-qualified class names of classes which are excluded from the graph. Only '*' is interpreted as wild-card character."
                        },
                        "-includingClasses": {
                            "id": "args:-includingClasses",
                            "type": "string",
                            "description": "Comma-separated list of one or more wild-card patterns for fully-qualified class names of classes which are included in the graph. Only '*' is interpreted as wild-card character."
                        },
                        "-mergeInnerClasses": {
                            "id": "args:-mergeInnerClasses",
                            "type": "null",
                            "description": "Inner class vertices will be merged with their outer classes"
                        },
                        "-packagesOnly": {
                            "id": "args:-packagesOnly",
                            "type": "null",
                            "description": "Only package dependencies are calculated."
                        },
                        "-strong": {
                            "id": "args:-strong",
                            "type": "null",
                            "description": "Like -cycles but also the strong components with only one member are printed onto the console. Thus all classes are printed."
                        },
                        "-cycles": {
                            "id": "args:-cycles",
                            "type": "null",
                            "description": "All cycles and their containing classes are printed onto the console."
                        },
                        "-raw": {
                            "id": "args:-raw",
                            "type": "null",
                            "description": "The complete digraph will be printed onto the console."
                        },
                        "": {
                            "id": "linterhub:path",
                            "type": "string",
                            "description": "Path for analysis"
                        }
                    }
                },
                "section": {
                    "type": "object",
                    "description": "The engine configuration section",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "The engine name",
                            "enum": [
                                "classycle"
                            ]
                        },
                        "options": {
                            "type": "object",
                            "description": "The engine configuration",
                            "$ref": "#/definitions/options"
                        }
                    }
                }
            }
        },
        "deps": {
            "$schema": "https://repometric.github.io/linterhub/schema/deps.json",
            "name": "classycle",
            "dependencies": [
                [
                    {
                        "manager": "platform",
                        "package": "java"
                    },
                    {
                        "manager": "url",
                        "package": "https://sourceforge.net/projects/classycle/files/latest/download?source=files",
                        "version": "1.4.2",
                        "engine": true
                    }
                ]
            ]
        },
        "meta": {
            "$schema": "https://repometric.github.io/linterhub/schema/meta.json",
            "name": "classycle",
            "description": "Classycle's Analyser analyses the static class and package dependencies in Java applications or libraries. It is especially helpful for finding cyclic dependencies between classes or packages.",
            "url": "http://classycle.sourceforge.net/index.html",
            "languages": [
                "Java"
            ],
            "license": "BSD-1-Clause"
        }
    },
    "clinton": {
        "args": {
            "$schema": "https://repometric.github.io/linterhub/schema/args.json",
            "name": "clinton",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/arguments"
                }
            ],
            "definitions": {
                "arguments": {
                    "type": "object",
                    "description": "The engine command line arguments",
                    "properties": {
                        "--no-inherit": {
                            "id": "args:--no-inherit",
                            "type": "null",
                            "description": "Prevent inheriting from the default rules."
                        },
                        "--ignores": {
                            "id": "args:--ignores",
                            "type": "null",
                            "description": "Ignore files. Can be added multiple times."
                        },
                        "--fix": {
                            "id": "args:--fix",
                            "type": "null",
                            "description": "Automatically fix problems."
                        },
                        "": {
                            "id": "linterhub:path",
                            "type": "string",
                            "description": "Path for analysis"
                        }
                    }
                },
                "section": {
                    "type": "object",
                    "description": "The engine configuration section",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "The engine name",
                            "enum": [
                                "clinton"
                            ]
                        },
                        "options": {
                            "type": "object",
                            "description": "The engine configuration",
                            "$ref": "#/definitions/arguments"
                        }
                    }
                }
            }
        },
        "deps": {
            "$schema": "https://repometric.github.io/linterhub/schema/deps.json",
            "name": "clinton",
            "dependencies": [
                [
                    {
                        "manager": "platform",
                        "package": "npm"
                    },
                    {
                        "manager": "npm",
                        "package": "clinton",
                        "version": "0.13.0",
                        "engine": true
                    }
                ]
            ]
        },
        "meta": {
            "$schema": "https://repometric.github.io/linterhub/schema/meta.json",
            "name": "clinton",
            "description": "JavaScript project style linter",
            "url": "https://github.com/SamVerschueren/clinton",
            "languages": [
                "JavaScript"
            ],
            "license": "MIT"
        }
    },
    "codesniffer": {
        "args": {
            "$schema": "https://repometric.github.io/linterhub/schema/args.json",
            "name": "php_codesniffer",
            "id": "php_codesniffer",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/options"
                }
            ],
            "definitions": {
                "arguments": {
                    "type": "object",
                    "properties": {
                        "-": {
                            "id": "linterhub:stdin",
                            "type": "null",
                            "description": "Check STDIN instead of local files and directories"
                        },
                        "-n": {
                            "id": "args:-n",
                            "type": "null",
                            "description": "Do not print warnings (shortcut for --warning-severity=0)"
                        },
                        "-w": {
                            "id": "args:-w",
                            "type": "null",
                            "description": "Print both warnings and errors (this is the default)"
                        },
                        "-l": {
                            "id": "args:-l",
                            "type": "null",
                            "description": "Local directory only, no recursion"
                        },
                        "-e": {
                            "id": "-e",
                            "type": "null",
                            "description": "Explain a standard by showing the sniffs it includes"
                        },
                        "-q": {
                            "id": "-q",
                            "type": "null",
                            "description": "Quiet mode; disables progress and verbose output"
                        },
                        "-m": {
                            "id": "args:-m",
                            "type": "null",
                            "description": "Stop error messages from being recorded (saves a lot of memory, but stops many reports from being used)"
                        },
                        "-v": {
                            "id": "-v",
                            "type": "null",
                            "description": "Print processed files"
                        },
                        "-vv": {
                            "id": "-vv",
                            "type": "null",
                            "description": "Print ruleset and token output"
                        },
                        "-vvv": {
                            "id": "-vvv",
                            "type": "null",
                            "description": "Print sniff processing information"
                        },
                        "-i": {
                            "id": "-i",
                            "type": "null",
                            "description": "Show a list of installed coding standards"
                        },
                        "-d": {
                            "id": "args:-d",
                            "type": "array",
                            "description": "Set the [key] php.ini value to [value] or [true] if value is omitted"
                        },
                        "--colors": {
                            "id": "--colors",
                            "type": "null",
                            "description": "Use colors in output"
                        },
                        "--no-colors": {
                            "id": "--no-colors",
                            "type": "null",
                            "description": "Do not use colors in output (this is the default)"
                        },
                        "--cache": {
                            "id": "--cache",
                            "type": "null",
                            "description": "Cache results between runs"
                        },
                        "--no-cache": {
                            "id": "--no-cache",
                            "type": "null",
                            "description": "Do not cache results between runs (this is the default)"
                        },
                        "--ignore-annotations": {
                            "id": "args:--ignore-annotations",
                            "type": "null",
                            "description": "Ignore all phpcs: annotations in code comments"
                        },
                        "--tab-width": {
                            "id": "--tab-width",
                            "type": "string",
                            "description": "set The number of spaces each tab represents"
                        },
                        "--report": {
                            "id": "--report",
                            "type": "string",
                            "description": " Print the report (the 'full' report is printed by default)",
                            "enum": [
                                "full",
                                "xml",
                                "checkstyle",
                                "csv",
                                "json",
                                "junit",
                                "emacs",
                                "source",
                                "summary",
                                "diff",
                                "svnblame",
                                "gitblame",
                                "hgblame",
                                "notifysend"
                            ],
                            "default": "full"
                        },
                        "--report-file": {
                            "id": "--report-file",
                            "type": "string",
                            "description": "Write the report to the specified file path"
                        },
                        "--report-width": {
                            "id": "--report-width",
                            "type": "string",
                            "description": "How many columns wide screen reports should be printed or set to 'auto' to use current screen width, where supported"
                        },
                        "--basepath": {
                            "id": "--basepath",
                            "type": "string",
                            "description": "A path to strip from the front of file paths inside reports"
                        },
                        "--bootstrap": {
                            "id": "args:--bootstrap",
                            "type": "string",
                            "description": "A comma separated list of files to run before processing begins"
                        },
                        "--severity": {
                            "id": "args:--severity",
                            "type": "string",
                            "description": "The minimum severity required to display an error or warning"
                        },
                        "--error-severity": {
                            "id": "args:--error-severity",
                            "type": "string",
                            "description": "The minimum severity required to display an error or warning"
                        },
                        "--warning-severity": {
                            "id": "args:--warning-severity",
                            "type": "string",
                            "description": "The minimum severity required to display an error or warning"
                        },
                        "--runtime-set": {
                            "id": "args:--runtime-set",
                            "type": "string",
                            "description": "set key value"
                        },
                        "--config-set": {
                            "id": "args:--config-set",
                            "type": "string",
                            "description": "set key value"
                        },
                        "--config-delete": {
                            "id": "args:--config-delete",
                            "type": "string",
                            "description": "key to delete"
                        },
                        "--config-show": {
                            "id": "--config-show",
                            "type": "string",
                            "description": "show config"
                        },
                        "--standard": {
                            "id": "--standard",
                            "type": "string",
                            "description": "The name or path of the coding standard to use"
                        },
                        "--sniffs": {
                            "id": "args:--sniffs",
                            "type": "string",
                            "description": "A comma separated list of sniff codes to include or exclude from checking (all sniffs must be part of the specified standard)"
                        },
                        "--exclude": {
                            "id": "args:--exclude",
                            "type": "string",
                            "description": "A comma separated list of sniff codes to include or exclude from checking (all sniffs must be part of the specified standard)"
                        },
                        "--encoding": {
                            "id": "args:--encoding",
                            "type": "string",
                            "description": "The encoding of the files being checked (default is utf-8)"
                        },
                        "--processes": {
                            "id": "args:--processes",
                            "type": "number",
                            "description": "How many files should be checked simultaneously (default is 1)",
                            "default": "1"
                        },
                        "--generator": {
                            "id": "--generator",
                            "type": "string",
                            "description": "Uses either the 'HTML', 'Markdown' or 'Text' generator (forces documentation generation instead of checking)"
                        },
                        "--extensions": {
                            "id": "args:--extensions",
                            "type": "string",
                            "description": "A comma separated list of file extensions to check (extension filtering only valid when checking a directory) The type of the file can be specified using: ext/type e.g., module/php,es/js"
                        },
                        "--ignore": {
                            "id": "args:--ignore",
                            "type": "string",
                            "description": "A comma separated list of patterns to ignore files and directories"
                        },
                        "--stdin-path": {
                            "id": "--stdin-path",
                            "type": "string",
                            "description": "If processing STDIN, the file path that STDIN will be processed as"
                        },
                        "--file-list": {
                            "id": "--file-list",
                            "type": "string",
                            "description": "A file containing a list of files and/or directories to check (one per line)"
                        },
                        "--version": {
                            "id": "linterhub:version",
                            "type": "null",
                            "description": "Show version"
                        },
                        "--help": {
                            "type": "null",
                            "description": "output help message"
                        },
                        "": {
                            "id": "linterhub:path",
                            "type": "string",
                            "description": "path to files for analysys"
                        }
                    }
                },
                "section": {
                    "type": "object",
                    "description": "The engine configuration section",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "The engine name",
                            "enum": [
                                "php_codesniffer"
                            ]
                        },
                        "options": {
                            "type": "object",
                            "description": "The engine configuration",
                            "$ref": "#/definitions/options"
                        }
                    }
                }
            }
        },
        "deps": {
            "$schema": "https://repometric.github.io/linterhub/schema/deps.json",
            "name": "php_codesniffer",
            "dependencies": [
                [
                    {
                        "manager": "platform",
                        "package": "composer"
                    },
                    {
                        "manager": "composer",
                        "package": "php_codesniffer",
                        "version": "3.2.3",
                        "engine": true
                    }
                ]
            ]
        },
        "meta": {
            "$schema": "https://repometric.github.io/linterhub/schema/meta.json",
            "name": "php_codesniffer",
            "description": "PHP_CodeSniffer tokenizes PHP, JavaScript and CSS files and detects violations of a defined set of coding standards. ",
            "url": "https://github.com/squizlabs/PHP_CodeSniffer",
            "languages": [
                "PHP",
                "JavaScript",
                "CSS"
            ],
            "license": "BSD-3-Clause"
        }
    },
    "coffeelint": {
        "args": {
            "$schema": "https://repometric.github.io/linterhub/schema/args.json",
            "id": "coffeelint",
            "name": "coffeelint",
            "delimeters": " ",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/arguments"
                }
            ],
            "definitions": {
                "arguments": {
                    "type": "object",
                    "description": "The engine command line arguments",
                    "properties": {
                        "--file": {
                            "id": "lintrhub:config",
                            "type": "string",
                            "description": "Specify a custom configuration file"
                        },
                        "--rules": {
                            "id": "args:--rules",
                            "type": "string",
                            "description": "Specify a custom rule or directory of rules"
                        },
                        "--makeconfig": {
                            "type": "null",
                            "description": "Prints a default config file"
                        },
                        "--trimconfig": {
                            "type": "null",
                            "description": "Compares your config with the default and prints a minimal configuration"
                        },
                        "--noconfig": {
                            "id": "args:--noconfig",
                            "type": "null",
                            "description": "Ignores any config file"
                        },
                        "--reporter": {
                            "description": "Built in reporter, or module, or path to reporter file",
                            "oneOf": [
                                {
                                    "type": "string",
                                    "enum": [
                                        "default",
                                        "csv",
                                        "jslint",
                                        "checkstyle",
                                        "raw"
                                    ]
                                },
                                {
                                    "type": "string",
                                    "format": "uri"
                                }
                            ]
                        },
                        "--color": {
                            "type": "string",
                            "description": "When to colorize the output",
                            "enum": [
                                "always",
                                "never",
                                "auto"
                            ],
                            "default": "never"
                        },
                        "--stdin": {
                            "type": "null",
                            "description": "Lint the source from stdin"
                        },
                        "--quiet": {
                            "id": "args:--quiet",
                            "type": "null",
                            "description": "Only print errors"
                        },
                        "--literate": {
                            "type": "null",
                            "description": "Used with --stdin to process as Literate CoffeeScript"
                        },
                        "--cache": {
                            "id": "args:--cache",
                            "type": "null",
                            "description": "Cache linting results"
                        },
                        "--ext": {
                            "id": "args:--ext",
                            "type": "string",
                            "description": "Specify an additional file extension, separated by comma"
                        },
                        "--help": {
                            "type": "string",
                            "description": "Show help"
                        },
                        "--version": {
                            "id": "linterhub:version",
                            "type": "string",
                            "description": "Show version"
                        },
                        "": {
                            "id": "linterhub:path",
                            "type": "string",
                            "description": "Path for analysis"
                        }
                    }
                },
                "section": {
                    "type": "object",
                    "description": "The engine configuration section",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "The engine name",
                            "enum": [
                                "coffeelint"
                            ]
                        },
                        "options": {
                            "type": "object",
                            "description": "The engine configuration",
                            "$ref": "#/definitions/arguments"
                        }
                    }
                }
            }
        },
        "deps": {
            "$schema": "https://repometric.github.io/linterhub/schema/deps.json",
            "name": "coffeelint",
            "dependencies": [
                [
                    {
                        "manager": "platform",
                        "package": "npm"
                    },
                    {
                        "manager": "npm",
                        "package": "coffeelint",
                        "version": "2.1.0",
                        "engine": true
                    }
                ]
            ]
        },
        "meta": {
            "$schema": "https://repometric.github.io/linterhub/schema/meta.json",
            "name": "coffeelint",
            "description": "CoffeeLint is a style checker that helps keep CoffeeScript code clean and consistent",
            "url": "http://www.coffeelint.org",
            "languages": [
                "CoffeeScript"
            ],
            "license": "MIT"
        }
    },
    "colorguard": {
        "args": {
            "$schema": "https://repometric.github.io/linterhub/schema/args.json",
            "name": "colorguard",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/arguments"
                }
            ],
            "definitions": {
                "arguments": {
                    "type": "object",
                    "properties": {
                        "--file": {
                            "id": "linterhub:filename",
                            "type": "string",
                            "description": "Reads csslint options from specified file"
                        },
                        "--help": {
                            "type": "null",
                            "description": "Show help"
                        },
                        "--threshold": {
                            "id": "args:--threshold",
                            "type": "null",
                            "description": "Threshold of allowable color difference"
                        },
                        "--allow-equivalent-notation": {
                            "id": "args:--allow-equivalent-notation",
                            "type": "null",
                            "description": " Allow equivalent notation of the same color, e.g. #000 and #000000"
                        },
                        "--options": {
                            "type": "null",
                            "description": "An optional JSON file containing all options (Overrides `--threshold`)"
                        }
                    }
                },
                "section": {
                    "type": "object",
                    "description": "The engine configuration section",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "The engine name",
                            "enum": [
                                "colorguard"
                            ]
                        },
                        "arguments": {
                            "type": "object",
                            "description": "The engine configuration",
                            "$ref": "#/definitions/arguments"
                        }
                    }
                }
            }
        },
        "deps": {
            "$schema": "https://repometric.github.io/linterhub/schema/deps.json",
            "name": "colorguard",
            "dependencies": [
                [
                    {
                        "manager": "platform",
                        "package": "npm"
                    },
                    {
                        "manager": "npm",
                        "package": "colorguard",
                        "version": "1.2.1",
                        "engine": true
                    }
                ]
            ]
        },
        "meta": {
            "$schema": "https://repometric.github.io/linterhub/schema/meta.json",
            "name": "colorguard",
            "description": "Keep a watchful eye on your css colors",
            "url": "http://github.com/SlexAxton/css-colorguard",
            "languages": [
                "CSS"
            ],
            "license": "MIT"
        }
    },
    "csscomb": {
        "args": {
            "$schema": "https://repometric.github.io/linterhub/schema/args.json",
            "name": "csscomb",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/arguments"
                }
            ],
            "definitions": {
                "arguments": {
                    "type": "object",
                    "properties": {
                        "--config": {
                            "id": "linterhub:config",
                            "type": "string",
                            "description": "Specify a custom configuration file"
                        },
                        "--detect": {
                            "id": "args:--detect",
                            "type": "null",
                            "description": "Run the tool in detect mode, returning detected options."
                        },
                        "--lint": {
                            "id": "args:--lint",
                            "type": "null",
                            "description": "Run the tool in linter mode, without modifying files."
                        },
                        "--help": {
                            "type": "null",
                            "description": "Display help message."
                        },
                        "--vebose": {
                            "type": "null",
                            "description": "Whether to print logging info."
                        },
                        "--tty-mode": {
                            "id": "linterhub:stdin",
                            "type": "null",
                            "description": "Run the tool in TTY mode using external app (e.g. IDE)."
                        },
                        "": {
                            "id": "linterhub:path",
                            "type": "string",
                            "description": "Path for analysis"
                        }
                    }
                },
                "section": {
                    "type": "object",
                    "description": "The engine configuration section",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "The engine name",
                            "enum": [
                                "csscomb"
                            ]
                        },
                        "arguments": {
                            "type": "object",
                            "description": "The engine configuration",
                            "$ref": "#/definitions/arguments"
                        }
                    }
                }
            }
        },
        "deps": {
            "$schema": "https://repometric.github.io/linterhub/schema/deps.json",
            "name": "csscomb",
            "dependencies": [
                [
                    {
                        "manager": "platform",
                        "package": "npm"
                    },
                    {
                        "manager": "npm",
                        "package": "csscomb",
                        "version": "4.2.0",
                        "engine": true
                    }
                ]
            ]
        },
        "meta": {
            "$schema": "https://repometric.github.io/linterhub/schema/meta.json",
            "name": "csscomb",
            "description": "CSS coding style formatter",
            "url": "http://csscomb.com/",
            "languages": [
                "CSS"
            ],
            "configs": [
                ".csscomb.json"
            ],
            "license": "MIT"
        }
    },
    "csslint": {
        "args": {
            "$schema": "https://repometric.github.io/linterhub/schema/args.json",
            "name": "csslint",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/arguments"
                }
            ],
            "definitions": {
                "arguments": {
                    "type": "object",
                    "properties": {
                        "--format": {
                            "type": "string",
                            "description": "Indicate which format to use for output",
                            "enum": [
                                "text",
                                "compact",
                                "lint-xml",
                                "csslint-xml",
                                "checkstyle-xml",
                                "junit-xml"
                            ]
                        },
                        "--list-rules": {
                            "type": "null",
                            "description": "Outputs all of the rules available"
                        },
                        "--quiet": {
                            "id": "args:--quiet",
                            "type": "null",
                            "description": "Only output when errors are present"
                        },
                        "--errors": {
                            "id": "args:--errors",
                            "type": "string",
                            "description": "Indicate which rules to include as errors"
                        },
                        "--warnings": {
                            "id": "args:--warnings",
                            "type": "string",
                            "description": "Indicate which rules to include as warnings"
                        },
                        "--ignore": {
                            "id": "args:--ignore",
                            "type": "string",
                            "description": "Indicate which rules to ignore completely"
                        },
                        "--exclude-list": {
                            "id": "args:--exclude-list",
                            "type": "string",
                            "description": "Indicate which files/directories to exclude from being linted"
                        },
                        "--config": {
                            "id": "linterhub:config",
                            "type": "string",
                            "description": "Reads csslint options from specified file"
                        },
                        "--help": {
                            "type": "null",
                            "description": "Show help"
                        },
                        "--version": {
                            "id": "linterhub:version",
                            "type": "string",
                            "description": "Show version"
                        },
                        "": {
                            "id": "linterhub:path",
                            "type": "string",
                            "description": "Path for analysis"
                        }
                    }
                },
                "section": {
                    "type": "object",
                    "description": "The engine configuration section",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "The engine name",
                            "enum": [
                                "csslint"
                            ]
                        },
                        "arguments": {
                            "type": "object",
                            "description": "The engine configuration",
                            "$ref": "#/definitions/arguments"
                        }
                    }
                }
            }
        },
        "deps": {
            "$schema": "https://repometric.github.io/linterhub/schema/deps.json",
            "name": "csslint",
            "dependencies": [
                [
                    {
                        "manager": "platform",
                        "package": "npm"
                    },
                    {
                        "manager": "npm",
                        "package": "csslint",
                        "version": "1.0.5",
                        "engine": true
                    }
                ]
            ]
        },
        "meta": {
            "$schema": "https://repometric.github.io/linterhub/schema/meta.json",
            "name": "csslint",
            "alias": [
                "grunt-lesslint"
            ],
            "description": "CSSLint",
            "url": "http://csslint.net/",
            "languages": [
                "CSS",
                "OOCSS",
                "Less"
            ],
            "configs": [
                ".csslintrc"
            ],
            "license": "MIT"
        }
    },
    "eslint": {
        "args": {
            "$schema": "https://repometric.github.io/linterhub/schema/args.json",
            "name": "eslint",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/arguments"
                }
            ],
            "definitions": {
                "cmd": {
                    "success": 1,
                    "version": "v4.19.1"
                },
                "arguments": {
                    "type": "object",
                    "properties": {
                        "--config": {
                            "id": "linterhub:config",
                            "type": "string",
                            "description": "Use configuration from this file or shareable config"
                        },
                        "--no-eslintrc": {
                            "id": "arg:--no-eslintrc",
                            "type": "null",
                            "description": "Disable use of configuration from .eslintrc"
                        },
                        "--env": {
                            "id": "arg:--env",
                            "type": "string",
                            "description": "Specify environments"
                        },
                        "--ext": {
                            "id": "arg:--ext",
                            "type": "string",
                            "description": "Specify JavaScript file extensions"
                        },
                        "--global": {
                            "id": "arg:--global",
                            "type": "string",
                            "description": "Define global variables"
                        },
                        "--parser": {
                            "id": "arg:--parser",
                            "type": "string",
                            "description": "Specify the parser to be used"
                        },
                        "--parser-options": {
                            "id": "arg:--parser-options",
                            "type": "string",
                            "description": "Specify parser options"
                        },
                        "--cache": {
                            "id": "arg:--cache",
                            "type": "null",
                            "description": "Only check changed files"
                        },
                        "--cache-location": {
                            "id": "arg:-cache-location",
                            "type": "string",
                            "description": "Path to the cache file or directory"
                        },
                        "--rulesdir": {
                            "id": "arg:--rulesdir",
                            "type": "string",
                            "description": "Use additional rules from this directory"
                        },
                        "--plugin": {
                            "id": "arg:--plugin",
                            "type": "string",
                            "description": "Specify plugins"
                        },
                        "--rule": {
                            "id": "arg:--rule",
                            "type": "string",
                            "description": "Specify rules"
                        },
                        "--ignore-path": {
                            "id": "arg:--ignore-path",
                            "type": "string",
                            "description": "Specify path of ignore file"
                        },
                        "--no-ignore": {
                            "id": "arg:--no-ignore",
                            "type": "null",
                            "description": "Disable use of ignore files and patterns"
                        },
                        "--ignore-pattern": {
                            "id": "arg:--ignore-pattern",
                            "type": "string",
                            "description": "Pattern of files to ignore (in addition to those in .eslintignore)"
                        },
                        "--stdin": {
                            "id": "linterhub:stdin",
                            "type": "null",
                            "description": "Lint code provided on stdin"
                        },
                        "--stdin-filename": {
                            "id": "linterhub:filename",
                            "type": "string",
                            "description": "Specify filename to process stdin as"
                        },
                        "--quiet": {
                            "id": "arg:--quiet",
                            "type": "null",
                            "description": "Report errors only"
                        },
                        "--max-warnings": {
                            "id": "arg:--max-warnings",
                            "type": "integer",
                            "description": "Number of warnings to trigger nonzero exit code",
                            "default": "-1"
                        },
                        "--output-file": {
                            "type": "string",
                            "description": "Specify file to write report to"
                        },
                        "--format": {
                            "description": "Use a specific output format",
                            "oneOf": [
                                {
                                    "type": "string",
                                    "enum": [
                                        "checkstyle",
                                        "codeframe",
                                        "compact",
                                        "html",
                                        "jslint-xml",
                                        "json",
                                        "junit",
                                        "stylish",
                                        "table",
                                        "tap",
                                        "unix",
                                        "visualstudio"
                                    ]
                                },
                                {
                                    "type": "string",
                                    "format": "uri"
                                }
                            ],
                            "default": "json"
                        },
                        "--color": {
                            "type": "null",
                            "description": "Force enabling of color"
                        },
                        "--no-color": {
                            "type": "null",
                            "description": "Force disabling of color"
                        },
                        "--init": {
                            "type": "null",
                            "description": "Run config initialization wizard"
                        },
                        "--fix": {
                            "type": "null",
                            "description": "Automatically fix problems"
                        },
                        "--debug": {
                            "id": "arg:--debug",
                            "type": "null",
                            "description": "Output debugging information"
                        },
                        "--no-inline-config": {
                            "id": "arg:--no-inline-config",
                            "type": "null",
                            "description": "Prevent comments from changing config or rules"
                        },
                        "--print-config": {
                            "type": "null",
                            "description": "Print the configuration to be used"
                        },
                        "--help": {
                            "type": "null",
                            "description": "Show help"
                        },
                        "--version": {
                            "id": "linterhub:version",
                            "type": "null",
                            "description": "Show version"
                        },
                        "": {
                            "id": "linterhub:path",
                            "type": "string",
                            "description": "Path for analysis"
                        }
                    }
                },
                "section": {
                    "type": "object",
                    "description": "The engine configuration section",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "The engine name",
                            "enum": [
                                "eslint"
                            ]
                        },
                        "arguments": {
                            "type": "object",
                            "description": "The engine configuration",
                            "$ref": "#/definitions/arguments"
                        }
                    }
                }
            }
        },
        "deps": {
            "$schema": "https://repometric.github.io/linterhub/schema/deps.json",
            "name": "eslint",
            "dependencies": [
                [
                    {
                        "manager": "platform",
                        "package": "npm"
                    },
                    {
                        "manager": "npm",
                        "package": "eslint",
                        "version": "4.19.1",
                        "engine": true
                    }
                ]
            ]
        },
        "meta": {
            "$schema": "https://repometric.github.io/linterhub/schema/meta.json",
            "name": "eslint",
            "description": "A fully pluggable tool for identifying and reporting on patterns in JavaScript",
            "url": "https://eslint.org",
            "languages": [
                "JavaScript",
                "JSX"
            ],
            "configs": [
                ".eslintrc",
                ".eslintrc.json",
                ".eslintrc.yaml",
                ".eslintrc.yml",
                ".eslintrc.js"
            ],
            "license": "MIT"
        }
    },
    "findbugs": {
        "args": {
            "$schema": "https://repometric.github.io/linterhub/schema/args.json",
            "name": "findbugs",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/options"
                }
            ],
            "definitions": {
                "arguments": {
                    "type": "object",
                    "properties": {
                        "-conserveSpace": {
                            "id": "args:-conserveSpace",
                            "type": "null",
                            "description": "Same as -effort:min (for backward compatibility)"
                        },
                        "-workHard": {
                            "id": "args:-workHard",
                            "type": "null",
                            "description": "Ensure analysis effort is at least 'default'"
                        },
                        "-adjustExperimental": {
                            "id": "args:-adjustExperimental",
                            "type": "null",
                            "description": "Lower priority of experimental Bug Patterns"
                        },
                        "-pluginList": {
                            "id": "args:-pluginList",
                            "type": "string",
                            "description": "Specify list of plugin Jar files to load"
                        },
                        "-effort": {
                            "id": "args:-effort",
                            "type": "string",
                            "enum": [
                                "min",
                                "less",
                                "default",
                                "more",
                                "max"
                            ],
                            "description": "Set analysis effort level"
                        },
                        "--nodock": {
                            "id": "args:--nodock",
                            "type": "null",
                            "description": "Disable docking"
                        },
                        "-look": {
                            "id": "args:-look",
                            "type": "string",
                            "enum": [
                                "plastic",
                                "gtk",
                                "native"
                            ],
                            "description": "Set UI look and feel"
                        },
                        "": {
                            "id": "linterhub:path",
                            "type": "string",
                            "description": "Path for analysis"
                        }
                    }
                },
                "section": {
                    "type": "object",
                    "description": "The engine configuration section",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "The engine name",
                            "enum": [
                                "findbugs"
                            ]
                        },
                        "options": {
                            "type": "object",
                            "description": "The engine configuration",
                            "$ref": "#/definitions/options"
                        }
                    }
                }
            }
        },
        "deps": {
            "$schema": "https://repometric.github.io/linterhub/schema/deps.json",
            "name": "findbugs",
            "dependencies": [
                [
                    {
                        "manager": "platform",
                        "package": "java"
                    },
                    {
                        "manager": "url",
                        "package": "http://repo.maven.apache.org/maven2/com/github/spotbugs/spotbugs/3.1.3/spotbugs-3.1.3.zip",
                        "version": "3.1.3",
                        "engine": true
                    }
                ]
            ]
        },
        "meta": {
            "$schema": "https://repometric.github.io/linterhub/schema/meta.json",
            "name": "findbugs",
            "alias": [
                "spotbugs"
            ],
            "description": "FindBugs is a program which uses static analysis to look for bugs in Java code.  ",
            "url": "https://github.com/findbugsproject/findbugs",
            "languages": [
                "Java"
            ],
            "license": "LGPL-2.1"
        }
    },
    "flake8": {
        "args": {
            "$schema": "https://repometric.github.io/linterhub/schema/args.json",
            "id": "flake8",
            "name": "flake8",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/arguments"
                }
            ],
            "definitions": {
                "arguments": {
                    "type": "object",
                    "properties": {
                        "--help": {
                            "type": "null",
                            "description": "output usage information.This can not be specified in config files."
                        },
                        "--version": {
                            "id": "linterhub:version",
                            "type": "null",
                            "description": "output the version number.This can not be specified in config files."
                        },
                        "--verbose": {
                            "id": "--verbose",
                            "type": "null",
                            "description": "Increase the verbosity of Flake8’s output. Each time you specify it, it will print more and more information.This can be specified in config files."
                        },
                        "--quiet": {
                            "id": "--quiet",
                            "type": "null",
                            "description": "Decrease the verbosity of Flake8’s output. Each time you specify it, it will print less and less information.This can be specified in config files."
                        },
                        "--count": {
                            "id": "--count",
                            "type": "string",
                            "description": "Print the total number of errors.This can be specified in config files."
                        },
                        "--diff": {
                            "id": "--diff",
                            "type": "null",
                            "description": "Use the unified diff provided on standard in to only check the modified files and report errors included in the diff.This can not be specified in config files."
                        },
                        "--exclude": {
                            "id": "--exclude",
                            "type": "string",
                            "description": "Provide a comma-separated list of glob patterns to exclude from checks. This can be specified in config files.",
                            "default": ".svn,CVS,.bzr,.hg,.git,__pycache__,.tox"
                        },
                        "--filename": {
                            "id": "--filename",
                            "type": "string",
                            "description": "Provide a comma-separate list of glob patterns to include for checks.This can be specified in config files.",
                            "default": "*.py"
                        },
                        "--stdin-display-name": {
                            "id": "linterhub:--stdin-display-name",
                            "type": "string",
                            "description": "Provide the name to use to report warnings and errors from code on stdin. Instead of reporting an error as something like: stdin:82:73 E501 line too long. You can specify this option to have it report whatever value you want instead of stdin. This can not be specified in config files.",
                            "default": "stdin"
                        },
                        "--format": {
                            "id": "--format",
                            "type": "string",
                            "description": "Select the formatter used to display errors to the user. This can be specified in config files.",
                            "enum": [
                                "default",
                                "pylint"
                            ]
                        },
                        "--hang-closing": {
                            "id": "args:--hang-closing",
                            "type": "string",
                            "description": "Toggle whether pycodestyle should enforce matching the indentation of the opening bracket’s line. When you specify this, it will prefer that you hang the closing bracket rather than match the indentation. This can be specified in config files."
                        },
                        "--ignore": {
                            "id": "args:--ignore",
                            "type": "string",
                            "description": "Specify a list of codes to ignore. The list is expected to be comma-separated, and does not need to specify an error code exactly. Since Flake8 3.0, this can be combined with --select. See --select for more information. For example, if you wish to only ignore W234, then you can specify that. But if you want to ignore all codes that start with W23 you need only specify W23 to ignore them. This also works for W2 and W (for example). This can be specified in config files.",
                            "default": "E121,E123,E126,E226,E24,E704"
                        },
                        "--max-line-length": {
                            "id": "args:--max-line-length",
                            "type": "string",
                            "description": "Set the maximum length that any line (with some exceptions) may be. Exceptions include lines that are either strings or comments which are entirely URLs. For example: # https://some-super-long-domain-name.com/with/some/very/long/path url = ('http://...') This can be specified in config files.",
                            "default": "79"
                        },
                        "--select": {
                            "id": "args:--select",
                            "type": "string",
                            "description": "Specify the list of error codes you wish Flake8 to report. Similarly to --ignore. You can specify a portion of an error code to get all that start with that string. For example, you can use E, E4, E43, and E431. This can be specified in config files.",
                            "default": "E,F,W,C"
                        },
                        "--disable-noqa": {
                            "id": "args:--disable-noqa",
                            "type": "string",
                            "description": "Report all errors, even if it is on the same line as a # NOQA comment. # NOQA can be used to silence messages on specific lines. Sometimes, users will want to see what errors are being silenced without editing the file. This option allows you to see all the warnings, errors, etc. reported. This can be specified in config files."
                        },
                        "--show-source": {
                            "id": "--show-source",
                            "type": "string",
                            "description": "Print the source code generating the error/warning in question. This can be specified in config files."
                        },
                        "--statistics": {
                            "id": "--statistics",
                            "type": "string",
                            "description": "Count the number of occurrences of each error/warning code and print a report. This can be specified in config files."
                        },
                        "--enable-extensions": {
                            "id": "args:--enable-extensions",
                            "type": "string",
                            "description": "Enable off-by-default extensions. Plugins to Flake8 have the option of registering themselves as off-by-default. These plugins effectively add themselves to the default ignore list. This can be specified in config files."
                        },
                        "--exit-zero": {
                            "id": "--exit-zero",
                            "type": "string",
                            "description": "Force Flake8 to use the exit status code 0 even if there are errors. By default Flake8 will exit with a non-zero integer if there are errors. This can not be specified in config files."
                        },
                        "--install-hook": {
                            "id": "--install-hook",
                            "type": "string",
                            "description": "Install a hook for your version control system that is executed before or during commit. This can not be specified in config files.",
                            "enum": [
                                "git",
                                "mercurial"
                            ]
                        },
                        "--jobs": {
                            "id": "--jobs",
                            "type": "string",
                            "description": "Specify the number of subprocesses that Flake8 will use to run checks in parallel. This option is ignored on Windows because multiprocessing does not support Windows across all supported versions of Python. The default behaviour will use the number of CPUs on your machine as reported by multiprocessing.cpu_count(). This can be specified in config files.",
                            "default": "auto"
                        },
                        "--output-file": {
                            "id": "--ouput-file",
                            "type": "string",
                            "description": "Redirect all output to the specified file. This can be specified in config files"
                        },
                        "--tee": {
                            "id": "--tee",
                            "type": "string",
                            "description": "Also print output to stdout if output-file has been configured. This can be specified in config files."
                        },
                        "--append-config": {
                            "type": "string",
                            "description": "Provide extra config files to parse in after and in addition to the files that Flake8 found on its own. Since these files are the last ones read into the Configuration Parser, so it has the highest precedence if it provides an option specified in another config file. This can not be specified in config files."
                        },
                        "--config": {
                            "id": "linterhub:config",
                            "type": "string",
                            "description": " Provide a path to a config file that will be the only config file read and used. This will cause Flake8 to ignore all other config files that exist. This can not be specified in config files."
                        },
                        "--isolated": {
                            "id": "--isolated",
                            "type": "string",
                            "description": "Ignore any config files and use Flake8 as if there were no config files found. This can not be specified in config files"
                        },
                        "--builtins": {
                            "id": "args:--builtins",
                            "type": "string",
                            "description": "Provide a custom list of builtin functions, objects, names, etc. This allows you to let pyflakes know about builtins that it may not immediately recognize so it does not report warnings for using an undefined name. This is registered by the default PyFlakes plugin.This can be specified in config files."
                        },
                        "--doctests": {
                            "id": "args:--doctests",
                            "type": "string",
                            "description": "Enable PyFlakes syntax checking of doctests in docstrings. This is registered by the default PyFlakes plugin.This can be specified in config files"
                        },
                        "--include-in-doctest": {
                            "id": "args:--include-in-doctest",
                            "type": "string",
                            "description": "Specify which files are checked by PyFlakes for doctest syntax. This is registered by the default PyFlakes plugin. This can be specified in config files."
                        },
                        "--exclude-from-doctest": {
                            "id": "args:--exclude-from-doctest",
                            "type": "string",
                            "description": "Specify which files are not to be checked by PyFlakes for doctest syntax. This is registered by the default PyFlakes plugin. This can be specified in config files."
                        },
                        "--benchmark": {
                            "id": "--benchmark",
                            "type": "string",
                            "description": "Collect and print benchmarks for this run of Flake8. This aggregates the total number of: tokens physical lines logical lines files and the number of elapsed seconds. This can not be specified in config files."
                        },
                        "--bug-report": {
                            "id": "--bug-report",
                            "type": "string",
                            "description": "Generate information necessary to file a complete bug report for Flake8. This will pretty-print a JSON blob that should be copied and pasted into a bug report for Flake8."
                        },
                        "--max-complexity": {
                            "id": "args:--max-complexity",
                            "type": "string",
                            "description": "Set the maximum allowed McCabe complexity value for a block of code. This option is provided by the mccabe dependency’s Flake8 plugin This can be specified in config files."
                        }
                    }
                },
                "section": {
                    "type": "object",
                    "description": "The engine configuration section",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "The engine name",
                            "enum": [
                                "flake8"
                            ]
                        },
                        "options": {
                            "type": "object",
                            "description": "The engine configuration",
                            "$ref": "#/definitions/arguments"
                        }
                    }
                }
            }
        },
        "deps": {
            "$schema": "https://repometric.github.io/linterhub/schema/deps.json",
            "name": "flake8",
            "dependencies": [
                [
                    {
                        "manager": "platform",
                        "package": "pip"
                    },
                    {
                        "manager": "pip",
                        "package": "flake8",
                        "version": "3.5.0",
                        "engine": true
                    }
                ]
            ]
        },
        "meta": {
            "$schema": "https://repometric.github.io/linterhub/schema/meta.json",
            "name": "flake8",
            "description": "flake8 is a python tool that glues together pep8, pyflakes, mccabe, and third-party plugins to check the style and quality of some python code",
            "url": "http://flake8.pycqa.org/",
            "languages": [
                "Python"
            ],
            "license": "MIT"
        }
    },
    "flay": {
        "args": {
            "$schema": "https://repometric.github.io/linterhub/schema/args.json",
            "id": "flay",
            "name": "flay",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/arguments"
                }
            ],
            "definitions": {
                "arguments": {
                    "type": "object",
                    "description": "The engine command line arguments",
                    "properties": {
                        "--fuzzy": {
                            "id": "args:--fuzzy",
                            "type": "number",
                            "description": "Detect fuzzy (copy & paste) duplication (default 1).",
                            "default": "1"
                        },
                        "--liberal": {
                            "id": "args:--liberal",
                            "type": "null",
                            "description": "Use a more liberal detection method."
                        },
                        "--mass": {
                            "id": "args:--mass",
                            "type": "number",
                            "description": "Sets mass threshold (default = 16)",
                            "default": "16"
                        },
                        "-#": {
                            "id": "-#",
                            "type": "null",
                            "description": "Don't number output (helps with diffs)"
                        },
                        "--verbose": {
                            "id": "--verbose",
                            "type": "null",
                            "description": "Verbose. Show progress processing files."
                        },
                        "--only": {
                            "id": "--only",
                            "type": "string",
                            "description": "Only show matches on NODE type."
                        },
                        "--diff": {
                            "id": "--diff",
                            "type": "null",
                            "description": "Diff Mode. Display N-Way diff for ruby."
                        },
                        "--summary": {
                            "id": "--summary",
                            "type": "null",
                            "description": "Summarize. Show flay score per file only."
                        },
                        "--timeout": {
                            "id": "--timeout",
                            "type": "number",
                            "description": "Set the timeout. (default = 10)",
                            "default": "16"
                        },
                        "--help": {
                            "type": "null",
                            "description": "Output usage information"
                        }
                    }
                },
                "section": {
                    "type": "object",
                    "description": "The engine configuration section",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "The engine name",
                            "enum": [
                                "flay"
                            ]
                        },
                        "arguments": {
                            "type": "object",
                            "description": "The engine configuration",
                            "$ref": "#/definitions/arguments"
                        }
                    }
                }
            }
        },
        "deps": {
            "$schema": "https://repometric.github.io/linterhub/schema/deps.json",
            "name": "flay",
            "dependencies": [
                [
                    {
                        "manager": "platform",
                        "package": "gem"
                    },
                    {
                        "manager": "gem",
                        "package": "flay",
                        "version": "2.11.0",
                        "engine": true
                    }
                ]
            ]
        },
        "meta": {
            "$schema": "https://repometric.github.io/linterhub/schema/meta.json",
            "name": "flay",
            "description": "Flay analyzes code for structural similarities. Differences in literal values, variable, class, method names, whitespace, programming style, braces vs do/end, etc are all ignored. Making this totally rad.",
            "url": "https://github.com/seattlerb/flay",
            "languages": [
                "Ruby"
            ],
            "license": "MIT"
        }
    },
    "flog": {
        "args": {
            "$schema": "https://repometric.github.io/linterhub/schema/args.json",
            "id": "flog",
            "name": "flog",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/arguments"
                }
            ],
            "definitions": {
                "arguments": {
                    "type": "object",
                    "description": "The engine command line arguments",
                    "properties": {
                        "--all": {
                            "id": "--all",
                            "type": "null",
                            "description": "Display all flog results, not top 60%."
                        },
                        "--blame": {
                            "id": "--blame",
                            "type": "null",
                            "description": "Include blame information for methods."
                        },
                        "--continue": {
                            "id": "args:--continue",
                            "type": "null",
                            "description": "Continue despite syntax errors."
                        },
                        "--details": {
                            "id": "--details",
                            "type": "null",
                            "description": "Show method details."
                        },
                        "--group": {
                            "id": "args:--group",
                            "type": "null",
                            "description": "Group and sort by class."
                        },
                        "--methods-only": {
                            "id": "args:--methods-only",
                            "type": "null",
                            "description": "Skip code outside of methods."
                        },
                        "--quiet": {
                            "id": "--quiet",
                            "type": "null",
                            "description": "Don't show parse errors."
                        },
                        "--extended": {
                            "id": "--extended",
                            "type": "string",
                            "description": "Put file:line on a separate line (for rubymine & friends)."
                        },
                        "--score": {
                            "id": "--score",
                            "type": "null",
                            "description": "Display total score only."
                        },
                        "--threshold": {
                            "id": "args:--threshold",
                            "type": "string",
                            "description": "Set the report cutoff threshold (def: 60%)."
                        },
                        "--verbose": {
                            "id": "--verbose",
                            "type": "null",
                            "description": "Display progress during processing."
                        },
                        "--18": {
                            "id": "args:--18",
                            "type": "null",
                            "description": "Use a ruby 1.8 parser."
                        },
                        "--19": {
                            "id": "args:--19",
                            "type": "null",
                            "description": "Use a ruby 1.9 parser."
                        },
                        "-I": {
                            "id:": "linterhub:I",
                            "type": "string",
                            "description": "Add to LOAD_PATH."
                        },
                        "--help": {
                            "type": "null",
                            "description": "Output usage information"
                        }
                    }
                },
                "section": {
                    "type": "object",
                    "description": "The engine configuration section",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "The engine name",
                            "enum": [
                                "flog"
                            ]
                        },
                        "arguments": {
                            "type": "object",
                            "description": "The engine configuration",
                            "$ref": "#/definitions/arguments"
                        }
                    }
                }
            }
        },
        "deps": {
            "$schema": "https://repometric.github.io/linterhub/schema/deps.json",
            "name": "flog",
            "dependencies": [
                [
                    {
                        "manager": "platform",
                        "package": "gem"
                    },
                    {
                        "manager": "gem",
                        "package": "flog",
                        "version": "4.6.2",
                        "engine": true
                    }
                ]
            ]
        },
        "meta": {
            "$schema": "https://repometric.github.io/linterhub/schema/meta.json",
            "name": "flog",
            "description": "Flog reports the most tortured code in an easy to read pain report. The higher the score, the more pain the code is in.",
            "url": "https://github.com/seattlerb/flog",
            "languages": [
                "Ruby"
            ],
            "license": "MIT"
        }
    },
    "gendarme": {
        "args": {
            "$schema": "https://repometric.github.io/linterhub/schema/args.json",
            "name": "gendarme",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/arguments"
                }
            ],
            "definitions": {
                "arguments": {
                    "type": "object",
                    "properties": {
                        "--config": {
                            "id": "linterhub:config",
                            "type": "string",
                            "description": "Specify the rule sets and rule settings. Default is 'rules.xml'."
                        },
                        "--set": {
                            "id": "args:--set",
                            "type": "string",
                            "description": "Specify a rule set from configfile. Default is 'default'."
                        },
                        "--log": {
                            "id": "args:--log",
                            "type": "string",
                            "description": "Save the report to the specified file."
                        },
                        "--xml": {
                            "id": "args:--xml",
                            "type": "string",
                            "description": "Save the report, as XML, to the specified file."
                        },
                        "--html": {
                            "id": "args:--html",
                            "type": "string",
                            "description": "Save the report, as HTML, to the specified file."
                        },
                        "--ingore": {
                            "id": "args:--ignore",
                            "type": "string",
                            "description": "Do not report defects listed in the specified file."
                        },
                        "--limit": {
                            "id": "args:--limit",
                            "type": "number",
                            "description": "Stop reporting after N defects are found."
                        },
                        "--quiet": {
                            "id": "args:--quiet",
                            "type": "null",
                            "description": "Used to disable progress and other information which is normally written to stdout."
                        },
                        "--v": {
                            "id": "args:--v",
                            "type": "null",
                            "description": "When present additional progress information is written to stdout (can be used multiple times)."
                        },
                        "--confidence": {
                            "id": "args:--confidence",
                            "type": "string",
                            "enum": [
                                "all",
                                "low+",
                                "low-",
                                "normal+",
                                "normal-",
                                "hight+",
                                "hight-",
                                "total+",
                                "total-"
                            ],
                            "description": "Filter defects for the specified confidence levels. Default is 'normal+'"
                        },
                        "--severity": {
                            "id": "args:--severity",
                            "type": "string",
                            "enum": [
                                "all",
                                "audit+",
                                "audit-",
                                "low+",
                                "low-",
                                "medium+",
                                "medium-",
                                "high+",
                                "high-",
                                "critical+",
                                "critical-"
                            ],
                            "description": "Filter defects for the specified severity levels. Default is 'medium+'"
                        },
                        "": {
                            "id": "linterhub:path",
                            "type": "string",
                            "description": "Path for analysis"
                        },
                        "--help": {
                            "type": "null",
                            "description": "Show help"
                        }
                    }
                },
                "section": {
                    "type": "object",
                    "description": "The engine configuration section",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "The engine name",
                            "enum": [
                                "gendarme"
                            ]
                        },
                        "arguments": {
                            "type": "object",
                            "description": "The engine configuration",
                            "$ref": "#/definitions/arguments"
                        }
                    }
                }
            }
        },
        "deps": {
            "$schema": "https://repometric.github.io/linterhub/schema/deps.json",
            "name": "gendarme",
            "dependencies": [
                [
                    {
                        "manager": "os",
                        "package": "win"
                    },
                    {
                        "manager": "platform",
                        "package": ".net",
                        "version": "4.0"
                    },
                    {
                        "manager": "url",
                        "package": "https://github.com/downloads/spouliot/gendarme/gendarme-2.11-snapshot-20110305-win32-setup.zip",
                        "version": "2.11.0.0",
                        "engine": true
                    }
                ],
                [
                    {
                        "manager": "platform",
                        "package": "mono",
                        "version": "2.8"
                    },
                    {
                        "manager": "url",
                        "package": "https://github.com/downloads/spouliot/gendarme/gendarme-2.11-snapshot-20110305-win32-setup.zip",
                        "version": "2.11.0.0",
                        "engine": true
                    }
                ]
            ]
        },
        "meta": {
            "$schema": "https://repometric.github.io/linterhub/schema/meta.json",
            "name": "gendarme",
            "description": "Gendarme is a extensible rule-based tool to find problems in .NET applications and libraries.",
            "url": "https://github.com/mono/website/blob/gh-pages/docs/tools+libraries/tools/gendarme/index.md",
            "languages": [
                "C#"
            ],
            "license": "MIT"
        }
    },
    "html-inspector": {
        "args": {
            "$schema": "https://repometric.github.io/linterhub/schema/args.json",
            "name": "html-inspector",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/arguments"
                }
            ],
            "definitions": {
                "arguments": {
                    "type": "object",
                    "properties": {
                        "--config": {
                            "id": "linterhub:config",
                            "type": "string",
                            "description": "Reads csslint options from specified file"
                        },
                        "--help": {
                            "type": "null",
                            "description": "Show help"
                        },
                        "--version": {
                            "id": "linterhub:version",
                            "type": "string",
                            "description": "Show version"
                        },
                        "": {
                            "id": "linterhub:path",
                            "type": "string",
                            "description": "Path for analysis"
                        }
                    }
                },
                "section": {
                    "type": "object",
                    "description": "The engine configuration section",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "The engine name",
                            "enum": [
                                "html-inspector"
                            ]
                        },
                        "arguments": {
                            "type": "object",
                            "description": "The engine configuration",
                            "$ref": "#/definitions/arguments"
                        }
                    }
                }
            }
        },
        "deps": {
            "$schema": "https://repometric.github.io/linterhub/schema/deps.json",
            "name": "html-inspector",
            "dependencies": [
                [
                    {
                        "manager": "platform",
                        "package": "npm"
                    },
                    {
                        "manager": "npm",
                        "package": "html-inspector",
                        "version": "0.8.2",
                        "engine": true
                    }
                ]
            ]
        },
        "meta": {
            "$schema": "https://repometric.github.io/linterhub/schema/meta.json",
            "name": "html-inspector",
            "description": "HTML Inspector is a code quality tool to help you and your team write better markup. It's written in JavaScript and runs in the browser, so testing your HTML has never been easier.",
            "url": "https://github.com/philipwalton/html-inspector",
            "languages": [
                "HTML"
            ],
            "license": "MIT"
        }
    },
    "htmlhint": {
        "args": {
            "$schema": "https://repometric.github.io/linterhub/schema/args.json",
            "name": "htmlhint",
            "id": "htmlhint",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/arguments"
                }
            ],
            "definitions": {
                "arguments": {
                    "type": "object",
                    "properties": {
                        "stdin": {
                            "id": "linterhub:stdin",
                            "type": "null",
                            "description": "Read the source from stdin"
                        },
                        "--nocolor": {
                            "id": "--nocolor",
                            "type": "null",
                            "description": "Disable color"
                        },
                        "--ignore": {
                            "id": "args:--ignore",
                            "type": "string",
                            "description": "Add pattern to exclude matches"
                        },
                        "--format": {
                            "id": "--format",
                            "type": "string",
                            "description": "Output messages as custom format",
                            "enum": [
                                "checkstyle",
                                "compact",
                                "json",
                                "junit",
                                "markdown",
                                "unix"
                            ]
                        },
                        "--rulesdir": {
                            "id": "args:--rulesdir",
                            "type": "string",
                            "description": "Load custom rules from file or folder"
                        },
                        "--rules": {
                            "id": "args:--rules",
                            "type": "string",
                            "description": "Set all of the rules available"
                        },
                        "--config": {
                            "id": "linterhub:config",
                            "type": "string",
                            "description": "Custom configuration file"
                        },
                        "--list": {
                            "id": "--list",
                            "type": "string",
                            "description": "Show all of the rules available"
                        },
                        "--help": {
                            "type": "string",
                            "description": "Show help"
                        },
                        "--version": {
                            "id": "linterhub:version",
                            "type": "null",
                            "description": "Show version"
                        },
                        "": {
                            "id": "linterhub:path",
                            "type": "string",
                            "description": "Path for analysis"
                        }
                    }
                },
                "section": {
                    "type": "object",
                    "description": "The engine configuration section",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "The engine name",
                            "enum": [
                                "htmlhint"
                            ]
                        },
                        "options": {
                            "type": "object",
                            "description": "The engine configuration",
                            "$ref": "#/definitions/arguments"
                        }
                    }
                }
            }
        },
        "deps": {
            "$schema": "https://repometric.github.io/linterhub/schema/deps.json",
            "name": "htmlhint",
            "dependencies": [
                [
                    {
                        "manager": "platform",
                        "package": "npm"
                    },
                    {
                        "manager": "npm",
                        "package": "htmlhint",
                        "version": "0.9.13",
                        "engine": true
                    }
                ]
            ]
        },
        "meta": {
            "$schema": "https://repometric.github.io/linterhub/schema/meta.json",
            "name": "htmlhint",
            "description": "HTMLHint is a Static Code Analysis Tool for HTML",
            "url": "http://htmlhint.com",
            "languages": [
                "HTML"
            ],
            "license": "MIT"
        }
    },
    "javascriptlint": {
        "args": {
            "$schema": "https://repometric.github.io/linterhub/schema/args.json",
            "name": "javascriptlint",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/options"
                }
            ],
            "definitions": {
                "arguments": {
                    "type": "object",
                    "properties": {
                        "-stdin": {
                            "id": "linterhub:stdin",
                            "type": "null",
                            "description": "Use stdin"
                        },
                        "-conf": {
                            "id": "linterhub:config",
                            "type": "string",
                            "description": "Path to config"
                        },
                        "": {
                            "id": "linterhub:path",
                            "type": "string",
                            "description": "Path for analysis"
                        }
                    }
                },
                "section": {
                    "type": "object",
                    "description": "The engine configuration section",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "The engine name",
                            "enum": [
                                "javascriptlint"
                            ]
                        },
                        "options": {
                            "type": "object",
                            "description": "The engine configuration",
                            "$ref": "#/definitions/options"
                        }
                    }
                }
            }
        },
        "deps": {
            "$schema": "https://repometric.github.io/linterhub/schema/deps.json",
            "name": "javascriptlint",
            "dependencies": [
                [
                    {
                        "manager": "os",
                        "package": "win"
                    },
                    {
                        "manager": "url",
                        "package": "http://www.javascriptlint.com/download/jsl-0.3.0-win32.zip",
                        "version": "0.3.0",
                        "engine": true
                    }
                ],
                [
                    {
                        "manager": "os",
                        "package": "macOs"
                    },
                    {
                        "manager": "url",
                        "package": "http://www.javascriptlint.com/download/jsl-0.3.0-mac.tar.gz",
                        "version": "0.3.0",
                        "engine": true
                    }
                ]
            ]
        },
        "meta": {
            "$schema": "https://repometric.github.io/linterhub/schema/meta.json",
            "name": "javascriptlint",
            "description": "With JavaScript Lint, you can check all your JavaScript source code for common mistakes without actually running the script or opening the web page.",
            "url": "http://www.javascriptlint.com",
            "languages": [
                "JavaScript"
            ],
            "license": "GPL-2.0"
        }
    },
    "jedi": {
        "args": {
            "$schema": "https://repometric.github.io/linterhub/schema/args.json",
            "id": "jedi",
            "name": "jedi",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/arguments"
                }
            ],
            "definitions": {
                "arguments": {
                    "type": "object",
                    "description": "The engine command line arguments",
                    "properties": {
                        "--php": {
                            "id": "args:--php",
                            "type": "null",
                            "description": "Compile to PHP"
                        },
                        "--js": {
                            "id": "args:--js",
                            "type": "null",
                            "description": "Compile to js"
                        },
                        "--watch": {
                            "id": "args:--watch",
                            "type": "null",
                            "description": "Automatically recompile when the contents of the specified file change"
                        },
                        "--port": {
                            "id": "args:--port",
                            "type": "string",
                            "description": "Compilation service port"
                        }
                    }
                },
                "section": {
                    "type": "object",
                    "description": "The engine configuration section",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "The engine name",
                            "enum": [
                                "jedi"
                            ]
                        },
                        "arguments": {
                            "type": "object",
                            "description": "The engine configuration",
                            "$ref": "#/definitions/arguments"
                        }
                    }
                }
            }
        },
        "deps": {
            "$schema": "https://repometric.github.io/linterhub/schema/deps.json",
            "name": "jedi",
            "dependencies": [
                [
                    {
                        "manager": "pacman",
                        "package": "npm"
                    },
                    {
                        "manager": "npm",
                        "package": "jedi",
                        "version": "1.0.0-rc6.4",
                        "engine": true
                    }
                ]
            ]
        },
        "meta": {
            "$schema": "https://repometric.github.io/linterhub/schema/meta.json",
            "name": "jedi",
            "description": "jedi  a language for Web development",
            "url": "http://github.com/baixing/jedi",
            "areas": [],
            "languages": [
                "Pug",
                "JEDI",
                "CoffeeCup"
            ],
            "license": "Apache-2.0"
        }
    },
    "jscpd": {
        "args": {
            "$schema": "https://repometric.github.io/linterhub/schema/args.json",
            "id": "jscpd",
            "name": "jscpd",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/arguments"
                }
            ],
            "definitions": {
                "arguments": {
                    "type": "object",
                    "description": "The engine command line arguments",
                    "properties": {
                        "--config": {
                            "id": "linterhub:config",
                            "type": "string",
                            "description": "path to config file"
                        },
                        "--min-lines": {
                            "id": "args:--min-lines",
                            "type": "integer",
                            "description": "min size of duplication in code lines",
                            "default": "5"
                        },
                        "--min-tokens": {
                            "id": "args:--min-tokens",
                            "type": "integer",
                            "description": "min size of duplication in code tokens",
                            "default": "70"
                        },
                        "--files": {
                            "id": "args:--files",
                            "type": "string",
                            "description": "glob pattern for find code"
                        },
                        "--exclude": {
                            "id": "args:--exclude",
                            "type": "string",
                            "description": "directory to ignore"
                        },
                        "--skip-comments": {
                            "id": "args:--skip-comments",
                            "type": "null",
                            "description": "skip comments in code"
                        },
                        "--blame": {
                            "id": "args:--blame",
                            "type": "null",
                            "description": "blame authors of duplications (get information about authors from git)"
                        },
                        "--languages-exts": {
                            "id": "args:--languages-exts",
                            "type": "string",
                            "description": "list of languages with file extensions (language:ext1,ext2;language:ext3)"
                        },
                        "--languages": {
                            "id": "args:--languages",
                            "type": "string",
                            "description": "list of languages which scan for duplicates, separated with comma"
                        },
                        "--output": {
                            "id": "args:--output",
                            "type": "string",
                            "description": "path to report file"
                        },
                        "--reporter": {
                            "id": "args:--reporter",
                            "type": "string",
                            "description": "reporter to use",
                            "default": "xml"
                        },
                        "--xsl-href": {
                            "id": "args:--xsl-href",
                            "type": "string",
                            "description": "path to xsl for include to xml report"
                        },
                        "--verbose": {
                            "id": "args:--verbose",
                            "type": "null",
                            "description": "show full info about copies"
                        },
                        "--debug": {
                            "id": "args:--debug",
                            "type": "null",
                            "description": "show debug information(options list and selected files)"
                        },
                        "--path": {
                            "id": "linterhub:path",
                            "type": "string",
                            "description": "path to code"
                        },
                        "--limit": {
                            "id": "args:--limit",
                            "type": "integer",
                            "description": "limit of allowed duplications, if real duplications percent more then limit jscpd exit with error",
                            "default": "50"
                        },
                        "--version": {
                            "id:": "linterhub:version",
                            "type": "null",
                            "description": "Output the version number"
                        },
                        "--help": {
                            "type": "null",
                            "description": "Output usage information"
                        }
                    }
                },
                "section": {
                    "type": "object",
                    "description": "The engine configuration section",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "The engine name",
                            "enum": [
                                "jscpd"
                            ]
                        },
                        "arguments": {
                            "type": "object",
                            "description": "The engine configuration",
                            "$ref": "#/definitions/arguments"
                        }
                    }
                }
            }
        },
        "deps": {
            "$schema": "https://repometric.github.io/linterhub/schema/deps.json",
            "name": "jscpd",
            "dependencies": [
                [
                    {
                        "manager": "platform",
                        "package": "npm"
                    },
                    {
                        "manager": "npm",
                        "package": "jscpd",
                        "version": "0.6.17",
                        "engine": true
                    }
                ]
            ]
        },
        "meta": {
            "$schema": "https://repometric.github.io/linterhub/schema/meta.json",
            "name": "jscpd",
            "description": "Copy/paste detector for programming source code",
            "url": "https://github.com/kucherenko/jscpd",
            "languages": [
                "JavaScript",
                "Java",
                "YAML",
                "CoffeeScript",
                "C++",
                "Haxe",
                "PHP",
                "C#",
                "TypeScript",
                "Go",
                "Python",
                "HTML",
                "Ruby",
                "C",
                "SCSS",
                "Less",
                "CSS",
                "Erlang",
                "Swift",
                "XML",
                "Objective-C",
                "Puppet",
                "Twig",
                "Vue",
                "Scala",
                "Lua",
                "Perl"
            ],
            "configs": [
                ".cpd.yaml"
            ],
            "license": "MIT"
        }
    },
    "jscs": {
        "args": {
            "$schema": "https://repometric.github.io/linterhub/schema/args.json",
            "id": "jscs",
            "name": "jscs",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/arguments"
                }
            ],
            "definitions": {
                "arguments": {
                    "type": "object",
                    "description": "The engine command line arguments",
                    "properties": {
                        "--config": {
                            "id": "linterhub:config",
                            "type": "string",
                            "description": "path to config file"
                        },
                        "--auto-configure": {
                            "id": "--auto-configure",
                            "type": "string",
                            "description": "auto-generate a JSCS configuration file"
                        },
                        "--fix": {
                            "id": "args:--fix",
                            "type": "null",
                            "description": "fix code style violations (applies to fixable violations)"
                        },
                        "--extract": {
                            "id": "args:--extract",
                            "type": "string",
                            "description": "set file masks from which to extract JavaScript"
                        },
                        "--es3": {
                            "id": "args:--es3",
                            "type": "null",
                            "description": "validates code as es3"
                        },
                        "--no-colors": {
                            "id": "--no-colors",
                            "type": "null",
                            "description": "clean output without colors"
                        },
                        "--preset": {
                            "id": "--preset",
                            "type": "string",
                            "description": "preset config"
                        },
                        "--max-errors": {
                            "id": "--max-errors",
                            "type": "number",
                            "description": "maximum number of errors to report"
                        },
                        "--error-filter": {
                            "id": "args:--error-filter",
                            "type": "string",
                            "description": "a module to filter errors"
                        },
                        "--reporter": {
                            "id": "--reporter",
                            "type": "string",
                            "description": "error reporter, console - default, text, checkstyle, junit, inline, unix, summary, json. Also accepts relative or absolute path to custom reporter. For instance: ../some-dir/my-reporter.js    (relative path with extension), ../some-dir/my-reporter       (relative path without extension), /path/to/my-reporter.js       (absolute path with extension), /path/to/my-reporter          (absolute path without extension)"
                        },
                        "--version": {
                            "id:": "linterhub:version",
                            "type": "null",
                            "description": "Output the version number"
                        },
                        "--help": {
                            "type": "null",
                            "description": "Output usage information"
                        }
                    }
                },
                "section": {
                    "type": "object",
                    "description": "The engine configuration section",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "The engine name",
                            "enum": [
                                "nsp"
                            ]
                        },
                        "arguments": {
                            "type": "object",
                            "description": "The engine configuration",
                            "$ref": "#/definitions/arguments"
                        }
                    }
                }
            }
        },
        "deps": {
            "$schema": "https://repometric.github.io/linterhub/schema/deps.json",
            "name": "jscs",
            "dependencies": [
                [
                    {
                        "manager": "platform",
                        "package": "npm"
                    },
                    {
                        "manager": "npm",
                        "package": "jscs",
                        "version": "3.0.7",
                        "engine": true
                    }
                ]
            ]
        },
        "meta": {
            "$schema": "https://repometric.github.io/linterhub/schema/meta.json",
            "name": "jscs",
            "description": "JSCS is a code style linter and formatter for your style guide",
            "url": "http://jscs.info/",
            "areas": [],
            "languages": [
                "JavaScript"
            ],
            "license": "MIT"
        }
    },
    "jshint": {
        "args": {
            "$schema": "https://repometric.github.io/linterhub/schema/args.json",
            "id": "jshint",
            "name": "jshint",
            "delimeters": " ",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/arguments"
                }
            ],
            "definitions": {
                "arguments": {
                    "type": "object",
                    "description": "The engine command line arguments",
                    "properties": {
                        "--config": {
                            "id": "linterhub:config",
                            "type": "string",
                            "description": "Custom configuration file"
                        },
                        "--reporter": {
                            "type": "string",
                            "description": "Custom reporter (<PATH>|jslint|checkstyle|unix)"
                        },
                        "--prereq": {
                            "id": "args:--prereq",
                            "type": "string",
                            "description": "Comma-separated list of prerequisites (paths). E.g. files which include definitions of global variables used throughout your project"
                        },
                        "--exclude": {
                            "id": "args:--exclude",
                            "type": "string",
                            "description": "Exclude files matching the given filename pattern (same as .jshintignore)"
                        },
                        "--exclude-path": {
                            "id": "args:--exclude-path",
                            "type": "string",
                            "description": "Pass in a custom jshintignore file path"
                        },
                        "--filename": {
                            "id": "args:--filename",
                            "type": "string",
                            "description": "Pass in a filename when using STDIN to emulate config lookup for that file name"
                        },
                        "--verbose": {
                            "id": "args:--verbose",
                            "type": "null",
                            "description": "Show message codes"
                        },
                        "--show-non-errors": {
                            "id": "args:--show-non-errors",
                            "type": "null",
                            "description": "Show additional data generated by jshint"
                        },
                        "--extra-ext": {
                            "id": "args:--extra-ext",
                            "type": "string",
                            "description": "Comma-separated list of file extensions to use (default is .js)"
                        },
                        "--extract": {
                            "id": "args:--extract",
                            "type": "string",
                            "description": "Extract inline scripts contained in HTML (auto|always|never, default to never)  (Default is never)"
                        },
                        "--jslint-reporter": {
                            "id": "--jslint-reporter",
                            "type": "null",
                            "description": "Use a jslint compatible reporter (DEPRECATED, use --reporter=jslint instead)"
                        },
                        "--checkstyle-reporter": {
                            "id": "--checkstyle-reporter",
                            "type": "null",
                            "description": " Use a CheckStyle compatible XML reporter (DEPRECATED, use --reporter=checkstyle instead)"
                        },
                        "-version": {
                            "id": "linterhub:version",
                            "type": "null",
                            "description": "Show version of linter"
                        },
                        "": {
                            "id": "linterhub:path",
                            "type": "string",
                            "description": "Path for analysis"
                        },
                        "--help": {
                            "type": "null",
                            "description": "Output usage information"
                        }
                    }
                },
                "section": {
                    "type": "object",
                    "description": "The engine configuration section",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "The engine name",
                            "enum": [
                                "jshint"
                            ]
                        },
                        "arguments": {
                            "type": "object",
                            "description": "The engine configuration",
                            "$ref": "#/definitions/arguments"
                        }
                    }
                }
            }
        },
        "deps": {
            "$schema": "https://repometric.github.io/linterhub/schema/deps.json",
            "name": "jshint",
            "dependencies": [
                [
                    {
                        "manager": "platform",
                        "package": "npm"
                    },
                    {
                        "manager": "npm",
                        "package": "jshint",
                        "version": "2.9.5",
                        "engine": true
                    }
                ]
            ]
        },
        "meta": {
            "$schema": "https://repometric.github.io/linterhub/schema/meta.json",
            "name": "jshint",
            "description": "JSHint is a community-driven tool that detects errors and potential problems in JavaScript code",
            "url": "http://jshint.com",
            "languages": [
                "JavaScript"
            ],
            "license": "MIT"
        }
    },
    "jslint": {
        "args": {
            "$schema": "https://repometric.github.io/linterhub/schema/args.json",
            "id": "jslint",
            "name": "jslint",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/arguments"
                }
            ],
            "definitions": {
                "arguments": {
                    "type": "object",
                    "description": "The engine command line arguments",
                    "properties": {
                        "--json": {
                            "type": "null",
                            "description": "Use json as output format"
                        },
                        "-ass": {
                            "id": "args:-ass",
                            "type": "null",
                            "description": "Tolerate assignment expressions"
                        },
                        "-bitwise": {
                            "id": "args:-bitwise",
                            "type": "null",
                            "description": "Tolerate bitwise operators"
                        },
                        "-browser": {
                            "id": "args:-browser",
                            "type": "null",
                            "description": "Assume a browser"
                        },
                        "-closure": {
                            "id": "args:-closure",
                            "type": "null",
                            "description": "Tolerate Google Closure idioms"
                        },
                        "-continue": {
                            "id": "args:-continue",
                            "type": "null",
                            "description": "Tolerate continue"
                        },
                        "-debug": {
                            "id": "args:-debug",
                            "type": "null",
                            "description": "Tolerate debugger statements"
                        },
                        "-devel": {
                            "id": "args:-devel",
                            "type": "null",
                            "description": "Assume console,alert, ..."
                        },
                        "-eqeq": {
                            "id": "args:-eqeq",
                            "type": "null",
                            "description": "Tolerate == and !="
                        },
                        "-evil": {
                            "id": "args:-evil",
                            "type": "null",
                            "description": "Tolerate eval"
                        },
                        "-forin": {
                            "id": "args:-forin",
                            "type": "null",
                            "description": "Tolerate unfiltered for in"
                        },
                        "-indent": {
                            "id": "args:-indent",
                            "type": "number",
                            "description": "Strict white space indentation"
                        },
                        "-maxerr": {
                            "id": "args:-maxerr",
                            "type": "number",
                            "description": "Maximum number of errors"
                        },
                        "-maxlen": {
                            "id": "args:-maxlen",
                            "type": "number",
                            "description": "Maximum line length"
                        },
                        "-newcap": {
                            "id": "args:-newcap",
                            "type": "null",
                            "description": "Tolerate uncapitalized constructors"
                        },
                        "-node": {
                            "id": "args:-node",
                            "type": "null",
                            "description": "Assume Node.js"
                        },
                        "-nomen": {
                            "id": "args:-nomen",
                            "type": "null",
                            "description": "Tolerate dangling underscore in identifiers"
                        },
                        "-passfail": {
                            "id": "args:-passfail",
                            "type": "null",
                            "description": "Stop on first error"
                        },
                        "-plusplus": {
                            "id": "args:-plusplus",
                            "type": "null",
                            "description": "Tolerate ++ and --"
                        },
                        "-predef": {
                            "id": "args:-predef",
                            "type": "array",
                            "description": "Declare additional predefined globals"
                        },
                        "-properties": {
                            "id": "args:-properties",
                            "type": "null",
                            "description": "Require all property names to be declared with /properties/"
                        },
                        "-regexp": {
                            "id": "args:-regexp",
                            "type": "null",
                            "description": "Tolerate . and [^...]. in /RegExp/"
                        },
                        "-rhino": {
                            "id": "args:-rhino",
                            "type": "null",
                            "description": "Assume Rhino"
                        },
                        "-sloppy": {
                            "id": "args:-sloppy",
                            "type": "null",
                            "description": "Tolerate missing 'use strict' pragma"
                        },
                        "-stupid": {
                            "id": "args:-stupid",
                            "type": "null",
                            "description": "Tolerate stupidity (typically, use of sync functions)"
                        },
                        "-todo": {
                            "id": "args:-todo",
                            "type": "null",
                            "description": "Tolerate TODO comments"
                        },
                        "-unparam": {
                            "id": "args:-unparam",
                            "type": "null",
                            "description": "Tolerate unused parameters"
                        },
                        "-vars": {
                            "id": "args:-vars",
                            "type": "null",
                            "description": "Tolerate many var statements per function"
                        },
                        "-white": {
                            "id": "args:-white",
                            "type": "null",
                            "description": "Tolerate ++ and --"
                        },
                        "-anon": {
                            "id": "args:-anon",
                            "type": "null",
                            "description": "Tolerate no space in anonymous function definition"
                        },
                        "-es5": {
                            "id": "args:-es5",
                            "type": "null",
                            "description": "Tolerate ECMAScript 5 syntax"
                        },
                        "-undef": {
                            "id": "args:-undef",
                            "type": "null",
                            "description": "Tolerate variables used before declaration"
                        },
                        "-on": {
                            "id": "args:-on",
                            "type": "null",
                            "description": "Tolerate HTML event handlers"
                        },
                        "-windows": {
                            "id": "args:-windows",
                            "type": "null",
                            "description": "Assume existence of Windows globals"
                        },
                        "-version": {
                            "id": "linterhub:version",
                            "type": "null",
                            "description": "Show version of linter"
                        },
                        "": {
                            "id": "linterhub:path",
                            "type": "string",
                            "description": "Path for analysis"
                        }
                    }
                },
                "section": {
                    "type": "object",
                    "description": "The engine configuration section",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "The engine name",
                            "enum": [
                                "jslint"
                            ]
                        },
                        "arguments": {
                            "type": "object",
                            "description": "The engine configuration",
                            "$ref": "#/definitions/arguments"
                        }
                    }
                }
            }
        },
        "deps": {
            "$schema": "https://repometric.github.io/linterhub/schema/deps.json",
            "name": "jslint",
            "dependencies": [
                [
                    {
                        "manager": "platform",
                        "package": "npm"
                    },
                    {
                        "manager": "npm",
                        "package": "jslint",
                        "version": "0.12.0"
                    }
                ]
            ]
        },
        "meta": {
            "$schema": "https://repometric.github.io/linterhub/schema/meta.json",
            "name": "jslint",
            "description": "The JavaScript Code Quality Tool",
            "url": "http://jslint.com",
            "languages": [
                "JavaScript"
            ],
            "configs": [
                "jslint.conf",
                ".jslint.conf"
            ],
            "license": "MIT"
        }
    },
    "jsonlint": {
        "args": {
            "$schema": "https://repometric.github.io/linterhub/schema/args.json",
            "name": "jsonlint",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/arguments"
                }
            ],
            "definitions": {
                "arguments": {
                    "type": "object",
                    "properties": {
                        "--sort-keys": {
                            "id": "args:--sort-keys",
                            "type": "null",
                            "description": "sort object keys"
                        },
                        "--in-place": {
                            "id": "args:--in-place",
                            "type": "null",
                            "description": "overwrite the file"
                        },
                        "--indent": {
                            "id": "args:--indent",
                            "type": "array",
                            "description": "character(s) to use for indentation"
                        },
                        "--compact": {
                            "type": "null",
                            "description": "compact error display"
                        },
                        "--validate": {
                            "id": "args:--validate",
                            "type": "null",
                            "description": "a JSON schema to use for validation"
                        },
                        "--environment": {
                            "id": "args:--environment",
                            "type": "null",
                            "description": "which specification of JSON Schema the validation file uses  [json-schema-draft-03]"
                        },
                        "--quiet": {
                            "id": "args:--quiet",
                            "type": "null",
                            "description": "do not print the parsed json to STDOUT  [false]"
                        },
                        "--pretty-print": {
                            "id": "args:--pretty-print",
                            "type": "null",
                            "description": "force pretty printing even if invalid"
                        },
                        "-h": {
                            "type": "null",
                            "description": "Show help"
                        },
                        "--version": {
                            "id": "linterhub:version",
                            "type": "string",
                            "description": "Show version"
                        },
                        "": {
                            "id": "linterhub:path",
                            "type": "string",
                            "description": "Path for analysis"
                        }
                    }
                },
                "section": {
                    "type": "object",
                    "description": "The engine configuration section",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "The engine name",
                            "enum": [
                                "jsonlint"
                            ]
                        },
                        "arguments": {
                            "type": "object",
                            "description": "The engine configuration",
                            "$ref": "#/definitions/arguments"
                        }
                    }
                }
            }
        },
        "deps": {
            "$schema": "https://repometric.github.io/linterhub/schema/deps.json",
            "name": "jsonlint",
            "dependencies": [
                [
                    {
                        "manager": "platform",
                        "package": "npm"
                    },
                    {
                        "manager": "npm",
                        "package": "jsonlint",
                        "version": "1.6.3",
                        "engine": true
                    }
                ]
            ]
        },
        "meta": {
            "$schema": "https://repometric.github.io/linterhub/schema/meta.json",
            "name": "jsonlint",
            "description": "Validate JSON",
            "url": "http://zaach.github.com/jsonlint/",
            "languages": [
                "JSON"
            ],
            "license": "MIT"
        }
    },
    "lesslint": {
        "args": {
            "$schema": "https://repometric.github.io/linterhub/schema/args.json",
            "name": "lesslint",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/options"
                }
            ],
            "definitions": {
                "arguments": {
                    "type": "object",
                    "properties": {
                        "-v": {
                            "id": "linterhub:version",
                            "type": "null",
                            "description": "Show version"
                        },
                        "": {
                            "id": "linterhub:path",
                            "type": "string",
                            "description": "Path for analysis"
                        }
                    }
                },
                "section": {
                    "type": "object",
                    "description": "The engine configuration section",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "The engine name",
                            "enum": [
                                "lesslint"
                            ]
                        },
                        "options": {
                            "type": "object",
                            "description": "The engine configuration",
                            "$ref": "#/definitions/options"
                        }
                    }
                }
            }
        },
        "deps": {
            "$schema": "https://repometric.github.io/linterhub/schema/deps.json",
            "name": "lesslint",
            "dependencies": [
                [
                    {
                        "manager": "platform",
                        "package": "npm"
                    },
                    {
                        "manager": "npm",
                        "package": "lesslint",
                        "version": "1.0.2",
                        "engine": true
                    }
                ]
            ]
        },
        "meta": {
            "$schema": "https://repometric.github.io/linterhub/schema/meta.json",
            "name": "lesslint",
            "description": "With Less Lint, you can check all your Less source code for common mistakes without actually running the script or opening the web page.",
            "url": "http://www.javascriptlint.com",
            "languages": [
                "Less"
            ],
            "license": "GPL-2.0"
        }
    },
    "lizard": {
        "args": {
            "$schema": "https://repometric.github.io/linterhub/schema/args.json",
            "id": "lizard",
            "name": "lizard",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/options"
                }
            ],
            "definitions": {
                "arguments": {
                    "type": "object",
                    "properties": {
                        "--languages": {
                            "id": "args:--languages",
                            "type": "string",
                            "description": "List the programming languages you want to analyze. if left empty, it'll search for all languages it knows. `lizard -l cpp -l java`searches for C++ and Java code.",
                            "enum": [
                                "cpp",
                                "java",
                                "csharp",
                                "javascript",
                                "python",
                                "objectivec",
                                "swift",
                                "scala",
                                "GDScript",
                                "ttcn",
                                "ruby",
                                "php"
                            ]
                        },
                        "--verbose": {
                            "id": "args:--verbose",
                            "type": "null",
                            "description": "Output in verbose mode (long function name)"
                        },
                        "--CCN": {
                            "id": "args:--CCN",
                            "type": "integer",
                            "description": "Threshold for cyclomatic complexity number warning. The default value is 15. Functions with CCN bigger than it will generate warning"
                        },
                        "--input_file": {
                            "id": "args:--input_file",
                            "type": "string",
                            "description": "get a list of filenames from the given file"
                        },
                        "--length": {
                            "id": "args:--length",
                            "type": "integer",
                            "description": "Threshold for maximum function length warning. The default value is 1000. Functions length bigger than it will generate warning"
                        },
                        "--arguments": {
                            "id": "args:--arguments",
                            "type": "integer",
                            "description": "Limit for number of parameters"
                        },
                        "--warnings_only": {
                            "id": "args:--warnings_only",
                            "type": "null",
                            "description": "Show warnings only, using clang/gcc's warning format for printing warnings. http://clang.llvm.org/docs/UsersManual.html#cmdoption-fdiagnostics-format"
                        },
                        "--warning-msvs": {
                            "id": "args:--warnings-msvs",
                            "type": "null",
                            "description": "Show warnings only, using Visual Studio's warning format for printing warnings. https://msdn.microsoft.com/en-us/library/yxkt8b26.aspx"
                        },
                        "--ignore_warnings": {
                            "id": "args:--ignore_warnings",
                            "type": "integer",
                            "description": " If the number of warnings is equal or less than the number, the tool will exit normally; otherwise, it will generate error. If the number is negative, the tool exits normally regardless of the number of warnings. Useful in makefile for legacy code."
                        },
                        "--exclude": {
                            "id": "args:--exclude",
                            "type": "string",
                            "description": "Exclude files that match this pattern. * matches everything, ? matches any single character, './folder/*' exclude everything in the folder recursively. Multiple patterns can be specified. Don't forget to add '' around the pattern."
                        },
                        "--working_threads": {
                            "id": "args:--working_threads",
                            "type": "integer",
                            "description": "Number of working threads. The default value is 1. Using a bigger number can fully utilize the CPU and often faster."
                        },
                        "--xml": {
                            "id": "args:--xml",
                            "type": "null",
                            "description": "Generate XML in cppncss style instead of the tabular output. Useful to generate report in Jenkins server"
                        },
                        "--csv": {
                            "id": "args:--csv",
                            "type": "null",
                            "description": "Generate CSV output as a transform of the default output"
                        },
                        "--html": {
                            "id": "args:--html",
                            "type": "null",
                            "description": "Output HTML report"
                        },
                        "--extension": {
                            "id": "args:--extension",
                            "type": "null",
                            "description": "Calculate modified cyclomatic complexity number, which count a switch/case with multiple cases as one CCN."
                        },
                        "--sort": {
                            "id": "args:--sort",
                            "type": "string",
                            "description": "Sort the warning with field. The field can be nloc, cyclomatic_complexity, token_count, p#arameter_count, etc. Or an customized field."
                        },
                        "--Threshold": {
                            "id": "args:--Threshold",
                            "type": "string",
                            "description": "Set the limit for a field. The field can be nloc, cyclomatic_complexity, token_count, parameter_count, etc. Or an customized file. Lizard will report warning  if a function exceed the limit"
                        },
                        "--whitelist": {
                            "id": "args:--",
                            "type": "string",
                            "description": "The path and file name to the whitelist file. It's './whitelizard.txt' by default. Find more information in README."
                        },
                        "": {
                            "id": "linterhub:path",
                            "type": "string",
                            "description": "Path for analysis"
                        },
                        "--version": {
                            "id:": "linterhub:version",
                            "type": "null",
                            "description": "Output the version number"
                        },
                        "--help": {
                            "type": "null",
                            "description": "Output usage information"
                        }
                    }
                },
                "section": {
                    "type": "object",
                    "description": "The engine configuration section",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "The engine name",
                            "enum": [
                                "lizard"
                            ]
                        },
                        "arguments": {
                            "type": "object",
                            "description": "The engine configuration",
                            "$ref": "#/definitions/arguments"
                        }
                    }
                }
            }
        },
        "deps": {
            "$schema": "https://repometric.github.io/linterhub/schema/deps.json",
            "name": "lizard",
            "dependencies": [
                [
                    {
                        "manager": "platform",
                        "package": "pip"
                    },
                    {
                        "manager": "pip",
                        "package": "lizard",
                        "version": "1.14.0",
                        "engine": true
                    }
                ]
            ]
        },
        "meta": {
            "$schema": "https://repometric.github.io/linterhub/schema/meta.json",
            "name": "lizard",
            "description": "Lizard is an extensible Cyclomatic Complexity Analyzer for many imperative programming languages",
            "url": "https://github.com/terryyin/lizard",
            "languages": [
                "Objective-C",
                "C",
                "C++",
                "Java",
                "C#",
                "JavaScript",
                "Swift",
                "Python",
                "Ruby",
                "PHP",
                "Scala",
                "GDScript",
                "TTCN-3"
            ],
            "agreement": "https://github.com/terryyin/lizard/blob/master/LICENSE.txt",
            "license": "custom"
        }
    },
    "markdownlint": {
        "args": {
            "$schema": "https://repometric.github.io/linterhub/schema/args.json",
            "id": "markdownlint",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/options"
                }
            ],
            "definitions": {
                "arguments": {
                    "type": "object",
                    "properties": {
                        "--ignore": {
                            "id": "args:--ignore",
                            "type": "string",
                            "description": "files to ignore/exclude"
                        },
                        "--config": {
                            "id": "linterhub:config",
                            "type": "string",
                            "description": "Path to config file of linter"
                        },
                        "--stdin": {
                            "id": "linterhub:stdin",
                            "type": "null",
                            "description": "Read source from standard input"
                        },
                        "--output": {
                            "id": "linterhub:filename",
                            "type": "string",
                            "description": "write issues to file (no console)"
                        },
                        "": {
                            "id": "linterhub:path",
                            "type": "string",
                            "description": "Path for analysis"
                        },
                        "--help": {
                            "type": "null",
                            "description": "output usage information"
                        },
                        "--version": {
                            "type": "null",
                            "description": "output the version number"
                        }
                    }
                },
                "section": {
                    "type": "object",
                    "description": "The engine configuration section",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "The engine name",
                            "enum": [
                                "markdownlint"
                            ]
                        },
                        "arguments": {
                            "type": "object",
                            "description": "The engine configuration",
                            "$ref": "#/definitions/arguments"
                        }
                    }
                }
            }
        },
        "deps": {
            "$schema": "https://repometric.github.io/linterhub/schema/deps.json",
            "name": "markdownlint",
            "dependencies": [
                [
                    {
                        "manager": "platform",
                        "package": "npm"
                    },
                    {
                        "manager": "npm",
                        "package": "markdownlint-cli",
                        "version": "0.8.1",
                        "engine": true
                    }
                ]
            ]
        },
        "meta": {
            "$schema": "https://repometric.github.io/linterhub/schema/meta.json",
            "name": "markdownlint",
            "description": "Markdownlint is a static analysis tool for Node.js and io.js with a library of rules to enforce standards and consistency for Markdown files",
            "url": "https://github.com/igorshubovych/markdownlint-cli",
            "languages": [
                "Markdown"
            ],
            "license": "MIT"
        }
    },
    "nsp": {
        "args": {
            "$schema": "https://repometric.github.io/linterhub/schema/args.json",
            "id": "nsp",
            "name": "nsp",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/arguments"
                }
            ],
            "definitions": {
                "arguments": {
                    "type": "object",
                    "description": "The engine command line arguments",
                    "properties": {
                        "--config": {
                            "id": "linterhub:--config",
                            "type": "string",
                            "description": "path to config file"
                        },
                        "check": {
                            "id": "args:check",
                            "type": "string",
                            "description": "checks a project for known vulnerabilities against the Node Security API",
                            "enum": [
                                "--filter",
                                "--threshold"
                            ]
                        },
                        "gather": {
                            "id": "args:gather",
                            "type": "null",
                            "description": "gathers current advisories into a json file for offline checks"
                        },
                        "login": {
                            "id": "login",
                            "type": "string",
                            "description": "login to the node security project"
                        },
                        "--proxy": {
                            "id": "args:--proxy",
                            "type": "string",
                            "description": "https proxy to be used for API calls"
                        },
                        "--token": {
                            "id": "args:--token",
                            "type": "string",
                            "description": "authentication token used to make api requests"
                        },
                        "--reporter": {
                            "id": "args:--reporter",
                            "type": "string",
                            "description": "output reporter",
                            "default": "table"
                        },
                        "--verbose": {
                            "id": "args:--verbose",
                            "type": "null",
                            "description": "provide more verbose output"
                        },
                        "--quiet": {
                            "id": "args:--quiet",
                            "type": "null",
                            "description": "suppress output"
                        },
                        "--ignore-server-errors": {
                            "id": "args:--ignore-server-errors",
                            "type": "null",
                            "description": "do not exit with an error code when errors are due to server problems"
                        },
                        "--preprocessor": {
                            "id": "args:--preprocessor",
                            "type": "string",
                            "description": "project preprocessor"
                        },
                        "--version": {
                            "id:": "linterhub:version",
                            "type": "null",
                            "description": "Output the version number"
                        },
                        "--help": {
                            "type": "null",
                            "description": "Output usage information"
                        }
                    }
                },
                "section": {
                    "type": "object",
                    "description": "The engine configuration section",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "The engine name",
                            "enum": [
                                "nsp"
                            ]
                        },
                        "arguments": {
                            "type": "object",
                            "description": "The engine configuration",
                            "$ref": "#/definitions/arguments"
                        }
                    }
                }
            }
        },
        "deps": {
            "$schema": "https://repometric.github.io/linterhub/schema/deps.json",
            "name": "nsp",
            "dependencies": [
                [
                    {
                        "manager": "platform",
                        "package": "npm"
                    },
                    {
                        "manager": "npm",
                        "package": "nsp",
                        "version": "3.2.1",
                        "engine": true
                    }
                ]
            ]
        },
        "meta": {
            "$schema": "https://repometric.github.io/linterhub/schema/meta.json",
            "name": "nsp",
            "description": "node security platform command-line tool",
            "url": "https://github.com/nodesecurity/nsp",
            "languages": [
                "JavaScript"
            ],
            "license": "Apache-2.0"
        }
    },
    "ocstyle": {
        "args": {
            "$schema": "https://repometric.github.io/linterhub/schema/args.json",
            "name": "ocstyle",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/arguments"
                }
            ],
            "definitions": {
                "arguments": {
                    "type": "object",
                    "properties": {
                        "--maxLineLength": {
                            "id": "args:--maxLineLength",
                            "type": "number",
                            "description": "Maximum line length"
                        },
                        "": {
                            "id": "linterhub:path",
                            "type": "string",
                            "description": "The path to a Python project to inspect. Defaults to PWD if not specified. If multiple paths are specified, they must all be files (no directories)."
                        },
                        "--help": {
                            "type": "null",
                            "description": "Show help"
                        }
                    }
                },
                "section": {
                    "type": "object",
                    "description": "The engine configuration section",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "The engine name",
                            "enum": [
                                "ocstyle"
                            ]
                        },
                        "arguments": {
                            "type": "object",
                            "description": "The engine configuration",
                            "$ref": "#/definitions/arguments"
                        }
                    }
                }
            }
        },
        "deps": {
            "$schema": "https://repometric.github.io/linterhub/schema/deps.json",
            "name": "ocstyle",
            "dependencies": [
                [
                    {
                        "manager": "platform",
                        "package": "pip"
                    },
                    {
                        "manager": "pip",
                        "package": "ocstyle",
                        "version": "0.1.1",
                        "engine": true
                    }
                ]
            ]
        },
        "meta": {
            "$schema": "https://repometric.github.io/linterhub/schema/meta.json",
            "name": "ocstyle",
            "description": "OCStyle is a Objective-C style checker",
            "url": "https://github.com/Cue/ocstyle",
            "languages": [
                "Python",
                "Objective-C"
            ],
            "license": "Apache-2.0"
        }
    },
    "php-assumptions": {
        "args": {
            "$schema": "https://repometric.github.io/linterhub/schema/args.json",
            "id": "php-assumptions",
            "name": "php-assumptions",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/arguments"
                }
            ],
            "definitions": {
                "arguments": {
                    "type": "object",
                    "description": "The engine command line arguments",
                    "properties": {
                        "--dump": {
                            "id": "args:--dump",
                            "type": "string",
                            "description": "Dump nodes using NodeDumper"
                        },
                        "--pretty-print": {
                            "id": "--pretty-print",
                            "type": "string",
                            "description": "Pretty print file using 'PrettyPrinter/Standard' "
                        },
                        "--serialize-xml": {
                            "id": "args:--serialize-xml",
                            "type": "string",
                            "description": "Serialize nodes using Serializer/XML"
                        },
                        "--var-dump": {
                            "id": "args:--var-dump",
                            "type": "string",
                            "description": "var_dump() nodes (for exact structure)"
                        },
                        "--resolve-names": {
                            "id": "args:--resolve-names",
                            "type": "string",
                            "description": "Resolve names using NodeVisitorNameResolver"
                        },
                        "--with-column-info": {
                            "id": "--with-column-info",
                            "type": "string",
                            "description": "Show column-numbers for errors (if available)"
                        },
                        "--with-positions": {
                            "id": "--with-positions",
                            "type": "string",
                            "description": "Show positions in node dumps"
                        },
                        "--with-recovery": {
                            "id": "args:--with-recovery",
                            "type": "string",
                            "description": "Use parsing with error recovery"
                        },
                        "--help": {
                            "type": "null",
                            "description": "Show help message"
                        },
                        "": {
                            "id": "linterhub:path",
                            "type": "string",
                            "description": "path for analysys"
                        }
                    }
                },
                "section": {
                    "type": "object",
                    "description": "The engine configuration section",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "The engine name",
                            "enum": [
                                "php-assumptions"
                            ]
                        },
                        "arguments": {
                            "type": "object",
                            "description": "The engine configuration",
                            "$ref": "#/definitions/arguments"
                        }
                    }
                }
            }
        },
        "deps": {
            "$schema": "https://repometric.github.io/linterhub/schema/deps.json",
            "name": "php-assumptions",
            "dependencies": [
                [
                    {
                        "manager": "platform",
                        "package": "composer"
                    },
                    {
                        "manager": "composer",
                        "package": "php-assumptions",
                        "version": "0.5.0",
                        "engine": true
                    }
                ]
            ]
        },
        "meta": {
            "$schema": "https://repometric.github.io/linterhub/schema/meta.json",
            "name": "php-assumptions",
            "description": "Tool to detect assumptions",
            "url": "https://github.com/rskuipers/php-assumptions",
            "areas": [],
            "languages": [
                "PHP"
            ],
            "license": "MIT"
        }
    },
    "phpcodefixer": {
        "args": {
            "$schema": "https://repometric.github.io/linterhub/schema/args.json",
            "name": "phpcodefixer",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/arguments"
                }
            ],
            "delimeters": " ",
            "definitions": {
                "arguments": {
                    "type": "object",
                    "properties": {
                        "--version": {
                            "id": "linterhub:version",
                            "type": "null",
                            "description": "Show version."
                        },
                        "--target": {
                            "id": "arg:--target",
                            "type": "string",
                            "default": "7.2",
                            "description": "Sets target php version."
                        },
                        "--excluded": {
                            "id": "arg:--excluded",
                            "type": "string",
                            "description": "Sets excluded file or directory names for scanning. Names can be joined with comma."
                        },
                        "--max-size": {
                            "id": "arg:--max-size",
                            "type": "string",
                            "default": "1mb",
                            "description": "Sets max size of php file. If file is larger, it will be skipped."
                        },
                        "--file-extensions": {
                            "id": "arg:--file-extensions",
                            "type": "string",
                            "default": "php,php5,phtml",
                            "description": "Sets file extensions to be parsed."
                        }
                    }
                },
                "section": {
                    "type": "object",
                    "description": "The engine configuration section",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "The engine name",
                            "enum": [
                                "phpcodefixer"
                            ]
                        },
                        "options": {
                            "type": "object",
                            "description": "The engine configuration",
                            "$ref": "#/definitions/arguments"
                        }
                    }
                }
            }
        },
        "deps": {
            "$schema": "https://repometric.github.io/linterhub/schema/deps.json",
            "name": "phpcodefixer",
            "dependencies": [
                [
                    {
                        "manager": "platform",
                        "package": "composer"
                    },
                    {
                        "manager": "composer",
                        "package": "wapmorgan/php-code-fixer",
                        "version": "2.0.14",
                        "engine": true
                    }
                ]
            ]
        },
        "meta": {
            "$schema": "https://repometric.github.io/linterhub/schema/meta.json",
            "name": "phpcodefixer",
            "description": "A console scanner that checks compatibility of your code with new interpreter versions.",
            "url": "https://github.com/wapmorgan/PhpCodeFixer",
            "languages": [
                "PHP",
                "HTML+PHP"
            ],
            "license": "BSD-3-Clause"
        }
    },
    "phpcpd": {
        "args": {
            "$schema": "https://repometric.github.io/linterhub/schema/args.json",
            "name": "phpcpd",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/arguments"
                }
            ],
            "delimeters": "=",
            "definitions": {
                "arguments": {
                    "type": "object",
                    "properties": {
                        "": {
                            "id": "linterhub:path",
                            "type": "string",
                            "description": "Path for analysis"
                        },
                        "--names": {
                            "id": "arg:--names",
                            "type": "string",
                            "default": "*.php",
                            "description": "A comma-separated list of file names to check"
                        },
                        "--names-exclude": {
                            "id": "arg:--names-exclude",
                            "type": "string",
                            "description": "A comma-separated list of file names to exclude"
                        },
                        "--regexp-exclude": {
                            "id": "arg:--regexp-exclude",
                            "type": "string",
                            "description": "A comma-separated list of paths regexps to exclude (example: '#var/.*_tmp#')"
                        },
                        "--exclude": {
                            "id": "arg:--exclude",
                            "type": "string",
                            "description": "Exclude a directory from code analysis (must be relative to source) (multiple values allowed)"
                        },
                        "--log-pmd": {
                            "id": "arg:--log-pmd",
                            "type": "string",
                            "description": "Write result in PMD-CPD XML format to file"
                        },
                        "--min-lines": {
                            "id": "arg:--min-lines",
                            "type": "integer",
                            "default": "5",
                            "description": "Minimum number of identical lines"
                        },
                        "--min-tokens": {
                            "id": "arg:--min-tokens",
                            "type": "integer",
                            "default": "70",
                            "description": "Minimum number of identical tokens"
                        },
                        "--fuzzy": {
                            "id": "--fuzzy",
                            "type": "null",
                            "description": "Fuzz variable names"
                        },
                        "--progress": {
                            "type": "null",
                            "description": "Show progress bar"
                        },
                        "--help": {
                            "type": "null",
                            "description": "Show help message"
                        },
                        "--quiet": {
                            "id": "--quiet",
                            "type": "null",
                            "description": "Do not output any message"
                        },
                        "--version": {
                            "id": "linterhub:version",
                            "type": "null",
                            "description": "Show version"
                        },
                        "--ansi": {
                            "id": "--ansi",
                            "type": "null",
                            "description": "Force ANSI output"
                        },
                        "--no-ansi": {
                            "id": "--no-ansi",
                            "type": "null",
                            "description": "Disable ANSI output"
                        },
                        "--no-interaction": {
                            "id": "--no-interaction",
                            "type": "null",
                            "description": "Do not ask any interactive question"
                        },
                        "--verbose": {
                            "id": "--verbose",
                            "type": "null",
                            "description": "More verbose output"
                        },
                        "-vvv": {
                            "id": "-vvv",
                            "type": "null",
                            "description": "Output for debug"
                        }
                    }
                },
                "section": {
                    "type": "object",
                    "description": "The engine configuration section",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "The engine name",
                            "enum": [
                                "phpcpd"
                            ]
                        },
                        "options": {
                            "type": "object",
                            "description": "The engine configuration",
                            "$ref": "#/definitions/arguments"
                        }
                    }
                }
            }
        },
        "deps": {
            "$schema": "https://repometric.github.io/linterhub/schema/deps.json",
            "name": "phpcpd",
            "dependencies": [
                [
                    {
                        "manager": "platform",
                        "package": "php",
                        "version": "7.1"
                    },
                    {
                        "manager": "platform",
                        "package": "composer"
                    },
                    {
                        "manager": "composer",
                        "package": "sebastian/phpcpd",
                        "version": "4.0.0",
                        "engine": true
                    }
                ],
                [
                    {
                        "manager": "platform",
                        "package": "php",
                        "version": "5.6"
                    },
                    {
                        "manager": "platform",
                        "package": "composer"
                    },
                    {
                        "manager": "composer",
                        "package": "sebastian/phpcpd",
                        "version": "3.0.1",
                        "engine": true
                    }
                ]
            ]
        },
        "meta": {
            "$schema": "https://repometric.github.io/linterhub/schema/meta.json",
            "name": "phpcpd",
            "description": "Copy/Paste Detector (CPD) for PHP code.",
            "url": "https://github.com/sebastianbergmann/phpcpd",
            "languages": [
                "PHP"
            ],
            "license": "BSD-3-Clause"
        }
    },
    "phpmd": {
        "args": {
            "$schema": "https://repometric.github.io/linterhub/schema/args.json",
            "id": "phpmd",
            "name": "phpmd",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/arguments"
                }
            ],
            "definitions": {
                "arguments": {
                    "type": "object",
                    "description": "The engine command line arguments",
                    "properties": {
                        "--minimumpriority": {
                            "id": "args:--minimumpriority",
                            "type": "string",
                            "description": "The rule priority threshold; rules with lower priority than they will not be used."
                        },
                        "--reportfile": {
                            "id": "--reportfile",
                            "type": "string",
                            "description": "Sends the report output to the specified file, instead of the default output target STDOUT"
                        },
                        "--suffixes": {
                            "id": "args:--suffixes",
                            "type": "string",
                            "description": "Comma-separated string of valid source code filename extensions, e.g. php,phtml."
                        },
                        "--exclude": {
                            "id": "args:--exclude",
                            "type": "string",
                            "description": "Comma-separated string of patterns that are used to ignore directories."
                        },
                        "--strict": {
                            "id": "--strict",
                            "type": "null",
                            "description": "Also report those nodes with a @SuppressWarnings annotation."
                        },
                        "--ignore-violations-on-exit": {
                            "id": "--ignore-violations-on-exit",
                            "type": "null",
                            "description": "will exit with a zero code, even if any violations are found."
                        },
                        "": {
                            "id:": "linterhub:path",
                            "type": "string",
                            "description": "path to code for analysys"
                        }
                    }
                },
                "section": {
                    "type": "object",
                    "description": "The engine configuration section",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "The engine name",
                            "enum": [
                                "phpmd"
                            ]
                        },
                        "arguments": {
                            "type": "object",
                            "description": "The engine configuration",
                            "$ref": "#/definitions/arguments"
                        }
                    }
                }
            }
        },
        "deps": {
            "$schema": "https://repometric.github.io/linterhub/schema/deps.json",
            "name": "phpmd",
            "dependencies": [
                [
                    {
                        "manager": "platform",
                        "package": "composer"
                    },
                    {
                        "manager": "composer",
                        "package": "phpmd",
                        "version": "2.6.0",
                        "engine": true
                    }
                ]
            ]
        },
        "meta": {
            "$schema": "https://repometric.github.io/linterhub/schema/meta.json",
            "name": "phpmd",
            "description": "PHPMD is a spin-off project of PHP Depend and aims to be a PHP equivalent of the well known Java tool PMD. PHPMD can be seen as an user friendly frontend application for the raw metrics stream measured by PHP Depend.",
            "url": "https://github.com/phpmd/phpmd",
            "areas": [],
            "languages": [
                "PHP"
            ],
            "license": "GPL-3.0-only"
        }
    },
    "phpmetrics": {
        "args": {
            "$schema": "https://repometric.github.io/linterhub/schema/args.json",
            "id": "phpmetrics",
            "name": "phpmetrics",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/arguments"
                }
            ],
            "definitions": {
                "arguments": {
                    "type": "object",
                    "description": "The engine command line arguments",
                    "properties": {
                        "--exclude": {
                            "id": "args:--exclude",
                            "type": "string",
                            "description": "List of directories to exclude, separated by a comma (,)."
                        },
                        "--extensions": {
                            "id": "args:--extensions",
                            "type": "string",
                            "description": "List of extensions to parse, separated by a comma (,)"
                        },
                        "--report-html": {
                            "id": "--report-html",
                            "type": "string",
                            "description": "Folder where report HTML will be generated"
                        },
                        "--report-csv": {
                            "id": "--report-csv",
                            "type": "string",
                            "description": "File where report CSV will be generated"
                        },
                        "--report-json": {
                            "id": "--report-json",
                            "type": "string",
                            "description": "File where report Json will be generated"
                        },
                        "--report-violations": {
                            "id": "--report-violations",
                            "type": "string",
                            "description": "File where XML violations report will be generated"
                        },
                        "--git": {
                            "id": "args:--git",
                            "type": "string",
                            "description": "Perform analyses based on Git History (default binary path: 'git')",
                            "default": "git"
                        },
                        "--junit": {
                            "id": "args:--junit",
                            "type": "string",
                            "description": "[=</path/to/junit.xml>] Evaluates metrics according to JUnit logs"
                        },
                        "--quiet": {
                            "id": "--quiet",
                            "type": "null",
                            "description": "Quiet mode"
                        },
                        "--version": {
                            "id": "linterhub:version",
                            "type": "null",
                            "description": "Display current version"
                        },
                        "": {
                            "id:": "linterhub:path",
                            "type": "string",
                            "description": "path to code for analysys"
                        }
                    }
                },
                "section": {
                    "type": "object",
                    "description": "The engine configuration section",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "The engine name",
                            "enum": [
                                "phpmetrics"
                            ]
                        },
                        "arguments": {
                            "type": "object",
                            "description": "The engine configuration",
                            "$ref": "#/definitions/arguments"
                        }
                    }
                }
            }
        },
        "deps": {
            "$schema": "https://repometric.github.io/linterhub/schema/deps.json",
            "name": "phpmetrics",
            "dependencies": [
                [
                    {
                        "manager": "platform",
                        "package": "composer"
                    },
                    {
                        "manager": "composer",
                        "package": "phpmetrics",
                        "version": "2.3.2",
                        "engine": true
                    }
                ]
            ]
        },
        "meta": {
            "$schema": "https://repometric.github.io/linterhub/schema/meta.json",
            "name": "phpmetrics",
            "description": "PhpMetrics provides metrics about PHP project and classes, with beautiful and readable HTML report.",
            "url": "https://github.com/phpmetrics/PhpMetrics",
            "areas": [],
            "languages": [
                "PHP"
            ],
            "license": "MIT"
        }
    },
    "phpsa": {
        "args": {
            "$schema": "https://repometric.github.io/linterhub/schema/args.json",
            "id": "phpsa",
            "name": "phpsa",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/arguments"
                }
            ],
            "definitions": {
                "arguments": {
                    "type": "object",
                    "description": "The engine command line arguments",
                    "properties": {
                        "--raw": {
                            "id": "--raw",
                            "type": "null",
                            "description": "To output raw command list"
                        },
                        "--format": {
                            "id": "--format",
                            "type": "string",
                            "description": "The output format (txt, xml, json, or md) [default: 'txt']",
                            "enum": [
                                "txt",
                                "xml",
                                "json",
                                "md"
                            ],
                            "default": "txt"
                        },
                        "": {
                            "id": "linterhub:path",
                            "type": "string",
                            "description": "path for analysys"
                        }
                    }
                },
                "section": {
                    "type": "object",
                    "description": "The engine configuration section",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "The engine name",
                            "enum": [
                                "phpsa"
                            ]
                        },
                        "arguments": {
                            "type": "object",
                            "description": "The engine configuration",
                            "$ref": "#/definitions/arguments"
                        }
                    }
                }
            }
        },
        "deps": {
            "$schema": "https://repometric.github.io/linterhub/schema/deps.json",
            "name": "phpsa",
            "dependencies": [
                [
                    {
                        "manager": "platform",
                        "package": "composer"
                    },
                    {
                        "manager": "composer",
                        "package": "phpsa",
                        "version": "0.6.2",
                        "engine": true
                    }
                ]
            ]
        },
        "meta": {
            "$schema": "https://repometric.github.io/linterhub/schema/meta.json",
            "name": "phpsa",
            "description": "PHPSA is a development tool aimed at bringing complex analysis for PHP applications and libraries.",
            "url": "https://github.com/ovr/phpsa",
            "areas": [],
            "languages": [
                "PHP"
            ],
            "license": "MIT"
        }
    },
    "plato": {
        "args": {
            "$schema": "https://repometric.github.io/linterhub/schema/args.json",
            "name": "plato",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/arguments"
                }
            ],
            "definitions": {
                "arguments": {
                    "type": "object",
                    "properties": {
                        "--help": {
                            "type": "null",
                            "description": "Display help text"
                        },
                        "--quiet": {
                            "id": "args:quiet",
                            "type": "null",
                            "description": "Reduce output to errors only"
                        },
                        "--exclude": {
                            "id": "args:exclude",
                            "type": "string",
                            "description": "File exclusion regex"
                        },
                        "--dir": {
                            "type": "string",
                            "description": "The output directory"
                        },
                        "--recurse": {
                            "id": "args:recurse",
                            "type": "null",
                            "description": "Recursively search directories"
                        },
                        "--title": {
                            "type": "string",
                            "description": "Title of the report"
                        },
                        "--date": {
                            "type": "string",
                            "description": "Time to use as the report date (seconds, > 9999999999 assumed to be ms)"
                        },
                        "--noempty": {
                            "id": "args:noempty",
                            "type": "null",
                            "description": "Skips empty lines from line count"
                        },
                        "--version": {
                            "id": "linterhub:version",
                            "type": "null",
                            "description": "Print the version"
                        },
                        "": {
                            "id": "linterhub:path",
                            "type": "string",
                            "description": "Path for analysis"
                        }
                    }
                },
                "section": {
                    "type": "object",
                    "description": "The engine configuration section",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "The engine name",
                            "enum": [
                                "plato"
                            ]
                        },
                        "arguments": {
                            "type": "object",
                            "description": "The engine configuration",
                            "$ref": "#/definitions/arguments"
                        }
                    }
                }
            }
        },
        "deps": {
            "$schema": "https://repometric.github.io/linterhub/schema/deps.json",
            "name": "plato",
            "dependencies": [
                [
                    {
                        "manager": "platform",
                        "package": "npm"
                    },
                    {
                        "manager": "npm",
                        "package": "plato",
                        "version": "1.7.0",
                        "engine": true
                    }
                ]
            ]
        },
        "meta": {
            "$schema": "https://repometric.github.io/linterhub/schema/meta.json",
            "name": "plato",
            "description": "JavaScript source code visualization, static analysis, and complexity tool",
            "url": "http://github.com/es-analysis/plato",
            "languages": [
                "JavaScript"
            ],
            "license": "MIT"
        }
    },
    "pmd": {
        "args": {
            "$schema": "https://repometric.github.io/linterhub/schema/args.json",
            "id": "PMD",
            "name": "PMD",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/arguments"
                }
            ],
            "definitions": {
                "arguments": {
                    "type": "object",
                    "description": "The engine command line arguments",
                    "properties": {
                        "--failOnViolation": {
                            "id": "--failOnViolation",
                            "type": "null",
                            "description": "By default PMD exits with status 4 if violations are found. Disable this option with '-failOnViolation false' to exit with 0 instead and just write the report."
                        },
                        "-auxclasspath": {
                            "id": "-auxclasspath",
                            "type": "string",
                            "description": "Specifies the classpath for libraries used by the source code. This is used by the type resolution. Alternatively, a 'file://' URL to a text file containing path elements on consecutive lines can be specified."
                        },
                        "-benchmark": {
                            "id": "-benchmark",
                            "type": "null",
                            "description": "Benchmark mode - output a benchmark report upon completion; default to System.err. Default: false"
                        },
                        "-cache": {
                            "id": "args:-cache",
                            "type": "string",
                            "description": "Specify the location of the cache file for incremental analysis."
                        },
                        "-dir": {
                            "id": "linterhub:dir",
                            "type": "null",
                            "description": "Root directory for sources."
                        },
                        "-encoding": {
                            "id": "args:-encoding",
                            "type": "string",
                            "description": "Specifies the character set encoding of the source code files PMD is reading (i.e., UTF-8). Default: UTF-8"
                        },
                        "-filelist": {
                            "id": "-filelist",
                            "type": "string",
                            "description": "Path to a file containing a list of files to analyze."
                        },
                        "-format": {
                            "id": "-format",
                            "type": "null",
                            "description": "Report format type. Default: text"
                        },
                        "-language": {
                            "id": "args:-language",
                            "type": "string",
                            "description": "Specify a language PMD should use."
                        },
                        "-minimumpriority": {
                            "id": "args:-minimumpriority",
                            "type": "string",
                            "description": "Rule priority threshold; rules with lower priority than configured here won't be used. Default is '5' which is the lowest priority. Default: Low",
                            "enum": [
                                "High",
                                "Medium High",
                                "Medium",
                                "Medium Low",
                                "Low"
                            ]
                        },
                        "-norulesetcompatibility": {
                            "id": "-norulesetcompatibility",
                            "type": "null",
                            "description": "Disable the ruleset compatibility filter. The filter is active by default and tries automatically 'fix' old ruleset files with old rule names/ Default: false"
                        },
                        "-reportfile": {
                            "id": "-reportfile",
                            "type": "string",
                            "description": "Sends report output to a file; default to System.out."
                        },
                        "-property": {
                            "id": "-property",
                            "type": "string",
                            "description": "{name}={value}: Define a property for the report format. Default: []"
                        },
                        "-rulesets": {
                            "id": "args:-rulesets",
                            "type": "string",
                            "description": "Comma separated list of ruleset names to use."
                        },
                        "-shortnames": {
                            "id": "-shortnames",
                            "type": "null",
                            "description": "Prints shortened filenames in the report. Default: false"
                        },
                        "-showsuppressed": {
                            "id": "-showsuppressed",
                            "type": "null",
                            "description": "Report should show suppressed rule violations. Default: false"
                        },
                        "-stress": {
                            "id": "-stress",
                            "type": "null",
                            "description": "Performs a stress test. Default: false"
                        },
                        "-suppressmarker": {
                            "id": "args:-suppressmarker",
                            "type": "string",
                            "description": "Specifies the string that marks the a line which PMD should ignore; default is NOPMD"
                        },
                        "-threads": {
                            "id": "args:-threads",
                            "type": "string",
                            "description": "Sets the number of threads used by PMD. Default: 1",
                            "default": "1"
                        },
                        "-uri": {
                            "id": "-uri",
                            "type": "string",
                            "description": "Database URI for sources."
                        },
                        "-debug": {
                            "id": "args:-debug",
                            "type": "null",
                            "description": "Debug mode."
                        },
                        "-verbose": {
                            "id": "args:-verbose",
                            "type": "null",
                            "description": "Debug mode."
                        },
                        "--help": {
                            "type": "string",
                            "description": "Show help"
                        },
                        "--version": {
                            "id": "linterhub:version",
                            "type": "string",
                            "description": "Show version"
                        },
                        "": {
                            "id": "linterhub:path",
                            "type": "string",
                            "description": "Path for analysis"
                        }
                    }
                },
                "section": {
                    "type": "object",
                    "description": "The engine configuration section",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "The engine name",
                            "enum": [
                                "PMD"
                            ]
                        },
                        "options": {
                            "type": "object",
                            "description": "The engine configuration",
                            "$ref": "#/definitions/arguments"
                        }
                    }
                }
            }
        },
        "deps": {
            "$schema": "https://repometric.github.io/linterhub/schema/deps.json",
            "name": "PMD",
            "dependencies": [
                [
                    {
                        "manager": "platform",
                        "package": "chocolatey"
                    },
                    {
                        "manager": "chocolatey",
                        "package": "PMD",
                        "version": "6.2.0",
                        "engine": true
                    }
                ]
            ]
        },
        "meta": {
            "$schema": "https://repometric.github.io/linterhub/schema/meta.json",
            "name": "PMD",
            "alias": [
                "cpd"
            ],
            "description": "An extensible cross-language static code analyzer.",
            "url": "https://pmd.github.io/",
            "languages": [
                "Apex",
                "JavaScript",
                "Java",
                "JSP",
                "PLSQL",
                "Maven POM",
                "Apache Velocity",
                "XML",
                "XSLT"
            ],
            "license": "Apache-2.0"
        }
    },
    "polylint": {
        "args": {
            "$schema": "https://repometric.github.io/linterhub/schema/args.json",
            "name": "polylint",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/arguments"
                }
            ],
            "definitions": {
                "arguments": {
                    "type": "object",
                    "properties": {
                        "--bowerdir": {
                            "type": "string",
                            "description": "Bower components directory. Defaults to 'bower_components'"
                        },
                        "--verbose": {
                            "type": "null",
                            "description": "Writes verbose logging."
                        },
                        "--quiet": {
                            "id": "args:--quiet",
                            "type": "null",
                            "description": "silence output"
                        },
                        "--debug": {
                            "id": "args:--debug",
                            "type": "null",
                            "description": "Writes debugging trace."
                        },
                        "--policy": {
                            "id": "args:--policy",
                            "type": "string",
                            "description": "Your jsconf.json policy file."
                        },
                        "--root": {
                            "id": "args:--root",
                            "type": "string",
                            "description": "Root directory against which URLs in inputs are resolved. If not specified, then the current working directory is used."
                        },
                        "--input": {
                            "id": "linterhub:filename",
                            "type": "string",
                            "description": "Polymer source files."
                        },
                        "--config-field": {
                            "id": "args:--config-field",
                            "type": "string",
                            "description": "If config-file is used for inputs, this field determines which file(s) are linted."
                        },
                        "--no-recursion": {
                            "id": "args:--no-recursion",
                            "type": "null",
                            "description": "Only report errors on specified input files, not from their dependencies."
                        },
                        "--config-file": {
                            "id": "linterhub:config",
                            "type": "string",
                            "description": "Reads csslint options from specified file"
                        },
                        "--help": {
                            "type": "null",
                            "description": "Show help"
                        },
                        "--stdin": {
                            "id": "linterhub:stdin",
                            "type": "null",
                            "description": "Lint code provided on stdin"
                        },
                        "": {
                            "id": "linterhub:path",
                            "type": "string",
                            "description": "Path for analysis"
                        }
                    }
                },
                "section": {
                    "type": "object",
                    "description": "The engine configuration section",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "The engine name",
                            "enum": [
                                "polylint"
                            ]
                        },
                        "arguments": {
                            "type": "object",
                            "description": "The engine configuration",
                            "$ref": "#/definitions/arguments"
                        }
                    }
                }
            }
        },
        "deps": {
            "$schema": "https://repometric.github.io/linterhub/schema/deps.json",
            "name": "polylint",
            "dependencies": [
                [
                    {
                        "manager": "platform",
                        "package": "npm"
                    },
                    {
                        "manager": "npm",
                        "package": "polylint",
                        "version": "2.10.4",
                        "engine": true
                    }
                ]
            ]
        },
        "meta": {
            "$schema": "https://repometric.github.io/linterhub/schema/meta.json",
            "name": "polylint",
            "description": "Keeps your Polymer Elements clean and functional!",
            "url": "https://github.com/PolymerLabs/polylint",
            "languages": [
                "HTML",
                "JavaScript"
            ],
            "license": "BSD-3-Clause"
        }
    },
    "prettier": {
        "args": {
            "$schema": "https://repometric.github.io/linterhub/schema/args.json",
            "id": "prettier",
            "name": "prettier",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/arguments"
                }
            ],
            "definitions": {
                "arguments": {
                    "type": "object",
                    "description": "The engine command line arguments",
                    "properties": {
                        "--write": {
                            "id": "args:--write",
                            "type": "null",
                            "description": "Edit files in-place. (Beware!)"
                        },
                        "--list-different": {
                            "id": "args:--list-different",
                            "type": "null",
                            "description": "Print the names of files that are different from Prettier's formatting."
                        },
                        "--arrow-parens": {
                            "id": "args:--arrow-parens",
                            "type": "string",
                            "enum": [
                                "avoid",
                                "always"
                            ],
                            "default": "avoid",
                            "description": "Include parentheses around a sole arrow function parameter. Defaults to avoid."
                        },
                        "--no-bracket-spacing": {
                            "id": "args:--no-bracket-spacing",
                            "type": "null",
                            "description": "Do not print spaces between brackets."
                        },
                        "-jsx-bracket-same-line": {
                            "id": "args:-jsx-bracket-same-line",
                            "type": "null",
                            "description": "Put > on the last line instead of at a new line. Defaults to false."
                        },
                        "--parser": {
                            "id": "args:--parser",
                            "type": "string",
                            "enum": [
                                "flow",
                                "babylon",
                                "typescript",
                                "css",
                                "less",
                                "scss",
                                "json",
                                "graphql",
                                "markdown",
                                "vue"
                            ],
                            "default": "babylon",
                            "description": "Which parser to use. Defaults to babylon."
                        },
                        "--print-width": {
                            "id": "args:--print-width",
                            "type": "number",
                            "description": "The line length where Prettier will try wrap. Defaults to 80."
                        },
                        "--prose-wrap": {
                            "id": "args:--prose-wrap",
                            "type": "string",
                            "enum": [
                                "always",
                                "never",
                                "preserve"
                            ],
                            "description": "How to wrap prose. (markdown) Defaults to preserve."
                        },
                        "--no-semi": {
                            "id": "args:--no-semi",
                            "type": "null",
                            "description": "Do not print semicolons, except at the beginning of lines which may need them."
                        },
                        "--single-quote ": {
                            "id": "args:--single-quote",
                            "type": "null",
                            "description": "Use single quotes instead of double quotes. Defaults to false."
                        },
                        "--tab-width": {
                            "id": "args:--tab-width",
                            "type": "number",
                            "description": "Number of spaces per indentation level. Defaults to 2."
                        },
                        "--trailing-comma": {
                            "id": "args:--trailing-comma",
                            "type": "string",
                            "enum": [
                                "none",
                                "es5",
                                "all"
                            ],
                            "description": "Print trailing commas wherever possible when multi-line.  Defaults to none."
                        },
                        "--use-tabs": {
                            "id": "args:--use-tabs",
                            "type": "null",
                            "description": "Indent with tabs instead of spaces. Defaults to false."
                        },
                        "--config": {
                            "id": "linterhub:config",
                            "type": "string",
                            "description": "Path to a Prettier configuration file (.prettierrc, package.json, prettier.config.js)."
                        },
                        "--no-config": {
                            "id": "args:--no-config",
                            "type": "null",
                            "description": "Do not look for a configuration file."
                        },
                        "--config-precedence": {
                            "id": "args:--config-precedence",
                            "type": "string",
                            "enum": [
                                "cli-override",
                                "file-override",
                                "prefer-file"
                            ],
                            "description": "Define in which order config files and CLI options should be evaluated. Defaults to cli-override."
                        },
                        "--no-editorconfig": {
                            "id": "args:--no-editorconfig",
                            "type": "null",
                            "description": " Don't take .editorconfig into account when parsing configuration"
                        },
                        "--find-config-path": {
                            "id": "args:--find-config-path",
                            "type": "string",
                            "description": "Find and print the path to a configuration file for the given input file."
                        },
                        "--ignore-path": {
                            "id": "args:--ignore-path",
                            "type": "string",
                            "description": "Path to a file with patterns describing files to ignore. Defaults to .prettierignore."
                        },
                        "--plugin": {
                            "id": "args:--plugin",
                            "type": "string",
                            "description": "Add a plugin. Multiple plugins can be passed as separate `--plugin`s. Defaults to []."
                        },
                        "--with-node-modules": {
                            "id": "args:--with-node-modules",
                            "type": "null",
                            "description": "Process files inside 'node_modules' directory."
                        },
                        "--cursor-offset": {
                            "id": "args:--cursor-offset",
                            "type": "number",
                            "description": "Print (to stderr) where a cursor at the given position would move to after formatting. This option cannot be used with --range-start and --range-end. Defaults to -1"
                        },
                        "--range-end": {
                            "id": "args:--range-end",
                            "type": "number",
                            "description": "Format code ending at a given character offset (exclusive). The range will extend forwards to the end of the selected statement. This option cannot be used with --cursor-offset. Defaults to Infinity."
                        },
                        "--range-start": {
                            "id": "args:--range-start",
                            "type": "number",
                            "description": "Format code starting at a given character offset. The range will extend backwards to the start of the first line containing the selected statement. This option cannot be used with --cursor-offset. Defaults to 0."
                        },
                        "--no-color": {
                            "id": "args:--no-color",
                            "type": "null",
                            "description": "Do not colorize error messages."
                        },
                        "--insert-pragma ": {
                            "id": "args:--insert-pragma",
                            "type": "null",
                            "description": "Insert @format pragma into file's first docblock comment. Defaults to false."
                        },
                        "--loglevel": {
                            "id": "args:--loglevel",
                            "type": "string",
                            "enum": [
                                "silent",
                                "error",
                                "warn",
                                "log",
                                "debug"
                            ],
                            "default": "log",
                            "description": "What level of logs to report. Defaults to log."
                        },
                        "--require-pragma": {
                            "id": "args:--require-pragma",
                            "type": "null",
                            "description": "Require either '@prettier' or '@format' to be present in the file's first docblock comment in order for it to be formatted. Defaults to false."
                        },
                        "--stdin": {
                            "id": "linterhub:stdin",
                            "type": "null",
                            "description": "Force reading input from stdin."
                        },
                        "--stdin-filepath": {
                            "id": "linterhub:filename",
                            "type": "string",
                            "description": "Path to the file to pretend that stdin comes from."
                        },
                        "--support-info": {
                            "id": "args:--support-info",
                            "type": "null",
                            "description": "Print support information as JSON."
                        },
                        "--help": {
                            "type": "string",
                            "description": "Show help"
                        },
                        "--version": {
                            "id": "linterhub:version",
                            "type": "string",
                            "description": "Show version"
                        },
                        "": {
                            "id": "linterhub:path",
                            "type": "string",
                            "description": "Path for analysis"
                        }
                    }
                },
                "section": {
                    "type": "object",
                    "description": "The engine configuration section",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "The engine name",
                            "enum": [
                                "prettier"
                            ]
                        },
                        "options": {
                            "type": "object",
                            "description": "The engine configuration",
                            "$ref": "#/definitions/arguments"
                        }
                    }
                }
            }
        },
        "deps": {
            "$schema": "https://repometric.github.io/linterhub/schema/deps.json",
            "name": "prettier",
            "dependencies": [
                [
                    {
                        "manager": "platform",
                        "package": "npm"
                    },
                    {
                        "manager": "npm",
                        "package": "prettier",
                        "version": "1.12.1",
                        "engine": true
                    }
                ]
            ]
        },
        "meta": {
            "$schema": "https://repometric.github.io/linterhub/schema/meta.json",
            "name": "prettier",
            "description": "Prettier is an opinionated code formatter. It enforces a consistent style by parsing your code and re-printing it with its own rules that take the maximum line length into account, wrapping code when necessary.",
            "url": "https://github.com/prettier/prettier",
            "languages": [
                "JavaScript",
                "TypeScript",
                "CSS",
                "SCSS",
                "Less",
                "JSX",
                "Vue",
                "GraphQL",
                "JSON",
                "Markdown"
            ],
            "configs": [
                ".prettierrc",
                "prettier.config.js"
            ],
            "license": "MIT"
        }
    },
    "proselint": {
        "args": {
            "$schema": "https://repometric.github.io/linterhub/schema/args.json",
            "id": "proselint",
            "name": "proselint",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/options"
                }
            ],
            "definitions": {
                "arguments": {
                    "type": "object",
                    "properties": {
                        "--json": {
                            "id": "args:--json",
                            "type": "null",
                            "description": "Output as JSON."
                        },
                        "--time": {
                            "id": "args:--time",
                            "type": "null",
                            "description": "Time on a corpus."
                        },
                        "--debug": {
                            "id": "args:--debug",
                            "type": "null",
                            "description": "Give verbose output."
                        },
                        "": {
                            "id": "linterhub:path",
                            "type": "string",
                            "description": "Path for analysis"
                        },
                        "--version": {
                            "id:": "linterhub:version",
                            "type": "null",
                            "description": "Output the version number"
                        },
                        "--help": {
                            "type": "null",
                            "description": "Output usage information"
                        }
                    }
                },
                "section": {
                    "type": "object",
                    "description": "The engine configuration section",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "The engine name",
                            "enum": [
                                "proselint"
                            ]
                        },
                        "arguments": {
                            "type": "object",
                            "description": "The engine configuration",
                            "$ref": "#/definitions/arguments"
                        }
                    }
                }
            }
        },
        "deps": {
            "$schema": "https://repometric.github.io/linterhub/schema/deps.json",
            "name": "proselint",
            "dependencies": [
                [
                    {
                        "manager": "platform",
                        "package": "pip"
                    },
                    {
                        "manager": "pip",
                        "package": "proselint",
                        "version": "0.8.0",
                        "engine": true
                    }
                ]
            ]
        },
        "meta": {
            "$schema": "https://repometric.github.io/linterhub/schema/meta.json",
            "name": "proselint",
            "description": "Proselint, a linter for English prose.",
            "url": "https://github.com/sasstools/sass-lint",
            "languages": [
                "Markdown"
            ],
            "license": "BSD-3-Clause"
        }
    },
    "prospector": {
        "args": {
            "$schema": "https://repometric.github.io/linterhub/schema/args.json",
            "name": "prospector",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/arguments"
                }
            ],
            "definitions": {
                "arguments": {
                    "type": "object",
                    "properties": {
                        "--die-on-tool-error": {
                            "id": "args:--die-on-tool-error",
                            "type": "null",
                            "description": "If a tool fails to run, prospector will try to carry on. Use this flag to cause prospector to die and raise the exception the tool generated. Mostly useful for development on prospector."
                        },
                        "--ignore-paths": {
                            "id": "args:--ignore-paths",
                            "type": "string",
                            "description": "A list of file or directory names to ignore. If the complete name matches any of the items in this list, the file or directory (and all subdirectories) will be ignored."
                        },
                        "--ignore-patterns": {
                            "id": "args:--ignore-patterns",
                            "type": "string",
                            "description": "A list of paths to ignore, as a list of regular expressions. Files and folders will be ignored if their full path contains any of these patterns."
                        },
                        "--pylint-config-file": {
                            "id": "args:--pylint-config-file",
                            "type": "string",
                            "description": "The path to a pylintrc file to use to configure pylint. Prospector will find .pylintrc files in the root of the project, but you can use this option to specify manually where it is."
                        },
                        "--no-external-config": {
                            "id": "args:--no-external-config",
                            "type": "null",
                            "description": "Determines how prospector should behave when configuration already exists for a tool. By default, prospector will use existing configuration. This flag will cause prospector to ignore existing configuration and use its own settings for every tool. Note that prospector will always use its own config for tools which do not have custom configuration."
                        },
                        "--show-profile": {
                            "id": "args:--show-profile",
                            "type": "null",
                            "description": "Include the computed profile in the summary. This will show what prospector has decided the overall profile is once all profiles have been combined and inherited from. This will produce a large output in most cases so is only useful when trying to debug why prospector is not behaving like you expect."
                        },
                        "--strictness": {
                            "id": "args:--strictness",
                            "type": "string",
                            "enum": [
                                "veryhigh",
                                "high",
                                "medium",
                                "low",
                                "verylow"
                            ],
                            "default": "medium",
                            "description": "How strict the checker should be. This affects how harshly the checker will enforce coding guidelines. The default value is 'medium', possible values are veryhigh, high, medium, low and verylow"
                        },
                        "--profile-path": {
                            "id": "args:--profile-path",
                            "type": "string",
                            "description": "Additional paths to search for profile files. By default this is the path that prospector will check, and a directory called '.prospector' in the path that prospector will check."
                        },
                        "--profile": {
                            "id": "args:--profile",
                            "type": "string",
                            "description": "The list of profiles to load. A profile is a certain 'type' of behaviour for prospector, and is represented by a YAML configuration file. Either a full path to the YAML file describing the profile must be provided, or it must be on the profile path (see --profile-path)"
                        },
                        "--without-tool": {
                            "id": "args:--without-tool",
                            "type": "string",
                            "description": "A list of tools that should not be run. Useful to turn off only a single tool from the defaults. To specify  all tools explicitly, use the --tool argument. Possible values are dodgy, frosted, mccabe, pep257, pep8, profile-validator, pyflakes, pylint, pyroma, vulture."
                        },
                        "--with-tool": {
                            "id": "args:--with-tool",
                            "type": "string",
                            "description": "A list of tools to run in addition to the default tools. To specify all tools explicitly, use the --tool argument. Possible values are dodgy, frosted, mccabe, pep257, pep8, profile-validator, pyflakes, pylint, pyroma, vulture."
                        },
                        "--tool": {
                            "id": "args:--tool",
                            "type": "string",
                            "description": "A list of tools to run. This lets you set exactly which tools to run. To add extra tools to the defaults, see --with-tool. Possible values are: dodgy, frosted, mccabe, pep257, pep8, profile-validator,  pyflakes, pylint, pyroma, vulture. By default, the  following tools will be run: dodgy, mccabe, pep257, pep8, profile-validator, pyflakes, pylint"
                        },
                        "--output-format": {
                            "type": "string",
                            "enum": [
                                "emacs",
                                "grouped",
                                "json",
                                "pylint",
                                "text",
                                "vscode",
                                "xunit",
                                "yaml"
                            ],
                            "default": "json",
                            "description": "The output format. Valid values are: emacs, grouped, json, pylint, text, vscode, xunit, yaml"
                        },
                        "--messages-only": {
                            "id": "args:--messages-only",
                            "type": "null",
                            "description": "Only output message information (don't output summary information about the checks)"
                        },
                        "--max-line-length": {
                            "id": "args:--max-line-length",
                            "type": "number",
                            "description": "The maximum line length allowed. This will be set by the strictness if no value is explicitly specified"
                        },
                        "--full-pep8": {
                            "id": "args:--full-pep8",
                            "type": "null",
                            "description": "Enables every PEP8 warning, so that all PEP8 style violations will be reported."
                        },
                        "--member-warnings": {
                            "id": "args:--member-warnings",
                            "type": "null",
                            "description": "Attempt to warn when code tries to access an attribute of a class or member of a module which does not exist. This is disabled by default as it tends to be quite inaccurate."
                        },
                        "--no-style-warnings": {
                            "id": "args:--no-style-warnings",
                            "type": "null",
                            "description": "Don't create any warnings about style. This disables the PEP8 tool and similar checks for formatting."
                        },
                        "--test-warnings": {
                            "id": "args:--test-warnings",
                            "type": "null",
                            "description": "Also check test modules and packages."
                        },
                        "--doc-warnings": {
                            "id": "args:--doc-warnings",
                            "type": "null",
                            "description": "Include warnings about documentation."
                        },
                        "--no-common-plugin": {
                            "id": "args:--no-common-plugin",
                            "type": "null",
                            "description": ""
                        },
                        "--no-blending": {
                            "id": "args:--no-blending",
                            "type": "null",
                            "description": "Turn off blending of messages. Prospector will merge together messages from different tools if they represent the same error. Use this option to see all unmerged messages."
                        },
                        "--uses": {
                            "id": "args:--uses",
                            "type": "string",
                            "description": "A list of one or more libraries or frameworks that the project uses. Possible values are: django, celery, flask. This will be autodetected by default, but if autodetection doesn't work, manually specify them using this flag."
                        },
                        "--no-autodetect": {
                            "id": "args:--no-autodetect",
                            "type": "null",
                            "description": "Turn off auto-detection of frameworks and libraries used. By default, autodetection will be used. To specify manually, see the --uses option."
                        },
                        "--zero-exit": {
                            "id": "args:--zero-exit",
                            "type": "null",
                            "description": "Prospector will exit with a code of 1 (one) if any messages are found. This makes automation easier; if there are any problems at all, the exit code is non-zero. However this behaviour is not always desirable, so if this flag is set, prospector will exit with a code of 0 if it ran successfully, and non-zero if it failed to run."
                        },
                        "": {
                            "id": "linterhub:path",
                            "type": "string",
                            "description": "The path to a Python project to inspect. Defaults to PWD if not specified. If multiple paths are specified, they must all be files (no directories)."
                        },
                        "--version": {
                            "id": "linterhub:version",
                            "type": "null",
                            "description": "Show program's version number and exit"
                        },
                        "--help": {
                            "type": "null",
                            "description": "Show help"
                        }
                    }
                },
                "section": {
                    "type": "object",
                    "description": "The engine configuration section",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "The engine name",
                            "enum": [
                                "prospector"
                            ]
                        },
                        "arguments": {
                            "type": "object",
                            "description": "The engine configuration",
                            "$ref": "#/definitions/arguments"
                        }
                    }
                }
            }
        },
        "deps": {
            "$schema": "https://repometric.github.io/linterhub/schema/deps.json",
            "name": "prospector",
            "dependencies": [
                [
                    {
                        "manager": "platform",
                        "package": "pip"
                    },
                    {
                        "manager": "pip",
                        "package": "prospector",
                        "version": "0.12.7",
                        "engine": true
                    }
                ]
            ]
        },
        "meta": {
            "$schema": "https://repometric.github.io/linterhub/schema/meta.json",
            "name": "prospector",
            "description": "Prospector is a tool to analyse Python code and output information about errors, potential problems, convention violations and complexity.",
            "url": "https://github.com/PyCQA/prospector",
            "languages": [
                "Python"
            ],
            "configs": [
                ".prospector"
            ],
            "license": "GPL-2.0"
        }
    },
    "pug-lint": {
        "args": {
            "$schema": "https://repometric.github.io/linterhub/schema/args.json",
            "id": "pug-lint",
            "name": "pug-lint",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/arguments"
                }
            ],
            "definitions": {
                "arguments": {
                    "type": "object",
                    "properties": {
                        "--config": {
                            "id": "linterhub:config",
                            "type": "string",
                            "description": "Reads csslint options from specified file"
                        },
                        "--help": {
                            "type": "null",
                            "description": "Show help"
                        },
                        "--version": {
                            "id": "linterhub:version",
                            "type": "string",
                            "description": "Show version"
                        },
                        "--reporter": {
                            "id": "--reporter",
                            "type": "string",
                            "description": "error reporter; console - default, inline (default: console)"
                        },
                        "": {
                            "id": "linterhub:path",
                            "type": "string",
                            "description": "Path for analysis"
                        }
                    }
                },
                "section": {
                    "type": "object",
                    "description": "The engine configuration section",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "The engine name",
                            "enum": [
                                "pug-lint"
                            ]
                        },
                        "options": {
                            "type": "object",
                            "description": "The engine configuration",
                            "$ref": "#/definitions/arguments"
                        }
                    }
                }
            }
        },
        "deps": {
            "$schema": "https://repometric.github.io/linterhub/schema/deps.json",
            "name": "pug-lint",
            "dependencies": [
                [
                    {
                        "manager": "platform",
                        "package": "npm"
                    },
                    {
                        "manager": "npm",
                        "package": "pug-lint",
                        "version": "2.5.0",
                        "engine": true
                    }
                ]
            ]
        },
        "meta": {
            "$schema": "https://repometric.github.io/linterhub/schema/meta.json",
            "name": "pug-lint",
            "description": "An unopinionated and configurable linter and style checker for Pug (formerly Jade)",
            "url": "https://github.com/pugjs/pug-lint",
            "areas": [],
            "languages": [
                "Jade"
            ],
            "license": "ISC"
        }
    },
    "puppet-lint": {
        "args": {
            "$schema": "https://repometric.github.io/linterhub/schema/args.json",
            "id": "puppet-lint",
            "name": "puppet-lint",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/arguments"
                }
            ],
            "definitions": {
                "arguments": {
                    "type": "object",
                    "description": "The engine command line arguments",
                    "properties": {
                        "--no-config": {
                            "id": "args:--no-config",
                            "type": "null",
                            "description": "Do not load default puppet-lint option files."
                        },
                        "--config": {
                            "id": "linterhub:config",
                            "type": "string",
                            "description": "Load puppet-lint options from file."
                        },
                        "--with-context": {
                            "id": "--with-context",
                            "type": "null",
                            "description": "Show where in the manifest the problem is."
                        },
                        "--with-filename": {
                            "id": "--with-filename",
                            "type": "null",
                            "description": "Display the filename before the warning."
                        },
                        "--fail-on-warnings": {
                            "id": "--fail-on-warnings",
                            "type": "null",
                            "description": "Return a non-zero exit status for warnings"
                        },
                        "--error-level": {
                            "id": "args:--error-level",
                            "type": "string",
                            "description": "The level of error to return (warning, error or all)."
                        },
                        "--show-ignored": {
                            "id": "--show-ignored",
                            "type": "null",
                            "description": "Show problems that have been ignored by control comments"
                        },
                        "--relative": {
                            "id": "args:--relative",
                            "type": "null",
                            "description": "Compare module layout relative to the module root"
                        },
                        "--load": {
                            "id": "args:--load",
                            "type": "string",
                            "description": "Load a file containing custom puppet-lint checks."
                        },
                        "--log-format": {
                            "id": "--log-format",
                            "type": "string",
                            "description": "Change the log format. Overrides --with-filename.The following placeholders can be used: %{filename} - Filename without path. %{path}     - Path as provided to puppet-lint.%{fullpath} - Expanded path to the file. %{line}     - Line number. %{column}   - Column number. %{kind}     - The kind of message (warning, error). %{KIND}     - Uppercase version of %{kind}. %{check}    - The name of the check. %{message}  - The message."
                        },
                        "--load-from-puppet": {
                            "id": "args:--load-from-puppet",
                            "type": "string",
                            "description": "Load plugins from the given Puppet module path."
                        },
                        "--fix ": {
                            "id": "--fix",
                            "type": "null",
                            "description": "Attempt to automatically fix errors"
                        },
                        "--json": {
                            "id": "--json",
                            "type": "null",
                            "description": "Log output as JSON"
                        },
                        "--list-checks": {
                            "id": "--list-checks",
                            "type": "null",
                            "description": "List available check names"
                        },
                        "--only-checks": {
                            "id": "args:--only-checks",
                            "type": "string",
                            "description": "A comma separated list of checks that should be run"
                        },
                        "--ignore-paths": {
                            "id": "args:--ignore-paths",
                            "type": "string",
                            "description": "A comma separated list of patterns to ignore"
                        },
                        "--no-arrow_on_right_operand_line-check": {
                            "id": "args:-no-arrow_on_right_operand_line-check",
                            "type": "null",
                            "description": "Skip the arrow_on_right_operand_line check."
                        },
                        "--no-class_inherits_from_params_class-check": {
                            "id": "args:--no-class_inherits_from_params_class-check",
                            "type": "null",
                            "description": "Skip the class_inherits_from_params_class check."
                        },
                        "--class_inherits_from_params_class-check": {
                            "id": "args:--class_inherits_from_params_class-check",
                            "type": "null",
                            "description": "Enable the class_inherits_from_params_class check."
                        },
                        "--no-code_on_top_scope-check": {
                            "id": "args:--no-code_on_top_scope-check",
                            "type": "null",
                            "description": "Skip the code_on_top_scope check."
                        },
                        "--code_on_top_scope-check": {
                            "id": "args:--code_on_top_scope-check",
                            "type": "null",
                            "description": "Enable the code_on_top_scope check."
                        },
                        "--no-inherits_across_namespaces-check": {
                            "id": "args:--no-inherits_across_namespaces-check",
                            "type": "null",
                            "description": "Skip the inherits_across_namespaces check."
                        },
                        "--no-names_containing_dash-check": {
                            "id": "args:--no-names_containing_dash-check",
                            "type": "null",
                            "description": "Skip the names_containing_dash check."
                        },
                        "--no-names_containing_uppercase-check": {
                            "id": "args:--no-names_containing_uppercase-check",
                            "type": "null",
                            "description": "Skip the names_containing_uppercase check."
                        },
                        "--no-nested_classes_or_defines-check": {
                            "id": "args:--no-nested_classes_or_defines-check",
                            "type": "null",
                            "description": "Skip the nested_classes_or_defines check."
                        },
                        "--no-parameter_order-check": {
                            "id": "args:--no-parameter_order-check",
                            "type": "null",
                            "description": "Skip the parameter_order check."
                        },
                        "--no-right_to_left_relationship-check": {
                            "id": "args:--no-right_to_left_relationship-check",
                            "type": "null",
                            "description": "Skip the right_to_left_relationship check."
                        },
                        "--no-variable_scope-check": {
                            "id": "args:--no-variable_scope-check",
                            "type": "null",
                            "description": "Skip the variable_scope check."
                        },
                        "--no-slash_comments-check": {
                            "id": "args:--no-slash_comments-check",
                            "type": "null",
                            "description": "Skip the slash_comments check."
                        },
                        "--no-star_comments-check": {
                            "id": "args:--no-star_comments-check",
                            "type": "null",
                            "description": "Skip the star_comments check."
                        },
                        "--no-case_without_default-check": {
                            "id": "args:--no-case_without_default-check",
                            "type": "null",
                            "description": "Skip the case_without_default check."
                        },
                        "--no-selector_inside_resource-check": {
                            "id": "args:--no-selector_inside_resource-check",
                            "type": "null",
                            "description": "Skip the selector_inside_resource check."
                        },
                        "--no-autoloader_layout-check": {
                            "id": "args:--no-autoloader_layout-check",
                            "type": "null",
                            "description": "Skip the autoloader_layout check."
                        },
                        "--no-documentation-check": {
                            "id": "args:--no-documentation-check",
                            "type": "null",
                            "description": "Skip the documentation check."
                        },
                        "--no-unquoted_node_name-check": {
                            "id": "args:--no-unquoted_node_name-check",
                            "type": "null",
                            "description": "Skip the unquoted_node_name check.."
                        },
                        "--no-duplicate_params-check": {
                            "id": "args:--no-duplicate_params-check",
                            "type": "null",
                            "description": "Skip the duplicate_params check."
                        },
                        "--no-ensure_first_param-check": {
                            "id": "args:--no-ensure_first_param-check",
                            "type": "null",
                            "description": "Skip the ensure_first_param check."
                        },
                        "--no-ensure_not_symlink_target-check": {
                            "id": "args:--no-ensure_not_symlink_target-check",
                            "type": "null",
                            "description": "Skip the ensure_not_symlink_target check."
                        },
                        "--no-file_mode-check": {
                            "id": "args:--no-file_mode-check",
                            "type": "null",
                            "description": "Skip the file_mode check."
                        },
                        "--no-unquoted_file_mode-check": {
                            "id": "args:--no-unquoted_file_mode-check",
                            "type": "null",
                            "description": " Skip the unquoted_file_mode check.."
                        },
                        "--no-unquoted_resource_title-check": {
                            "id": "args:--no-unquoted_resource_title-check",
                            "type": "null",
                            "description": "Skip the unquoted_resource_title check."
                        },
                        "--no-double_quoted_strings-check": {
                            "id": "args:--no-double_quoted_strings-check",
                            "type": "null",
                            "description": "Skip the double_quoted_strings check."
                        },
                        "--no-only_variable_string-check": {
                            "id": "args:--no-only_variable_string-check",
                            "type": "null",
                            "description": "Skip the only_variable_string check."
                        },
                        "--no-puppet_url_without_modules-check": {
                            "id": "args:--no-puppet_url_without_modules-check",
                            "type": "null",
                            "description": "Skip the puppet_url_without_modules check."
                        },
                        "--no-quoted_booleans-check": {
                            "id": "args:--no-quoted_booleans-check",
                            "type": "null",
                            "description": "Skip the quoted_booleans check."
                        },
                        "--no-single_quote_string_with_variables-check": {
                            "id": "args:--no-single_quote_string_with_variables-check",
                            "type": "null",
                            "description": "Skip the single_quote_string_with_variables check."
                        },
                        "--no-variables_not_enclosed-check": {
                            "id": "args:--no-variables_not_enclosed-check",
                            "type": "null",
                            "description": "Skip the variables_not_enclosed check."
                        },
                        "--no-variable_contains_dash-check": {
                            "id": "args:--no-variable_contains_dash-check",
                            "type": "null",
                            "description": "Skip the variable_contains_dash check."
                        },
                        "--no-variable_is_lowercase-check": {
                            "id": "args:--no-variable_is_lowercase-check",
                            "type": "null",
                            "description": "Skip the variable_is_lowercase check."
                        },
                        "--no-140chars-check": {
                            "id": "args:--no-140chars-check",
                            "type": "null",
                            "description": "Skip the 140chars check."
                        },
                        "--no-2sp_soft_tabs-check": {
                            "id": "args:--no-2sp_soft_tabs-check",
                            "type": "null",
                            "description": "Skip the 2sp_soft_tabs check."
                        },
                        "--no-80chars-check": {
                            "id": "args:--no-80chars-check",
                            "type": "null",
                            "description": "Skip the 80chars check.."
                        },
                        "--80chars-check": {
                            "id": "args:--80chars-check",
                            "type": "null",
                            "description": "Enable the 80chars check."
                        },
                        "--no-arrow_alignment-check": {
                            "id": "args:--no-arrow_alignment-check",
                            "type": "null",
                            "description": "Skip the arrow_alignment check."
                        },
                        "--no-hard_tabs-check": {
                            "id": "args:--no-hard_tabs-check",
                            "type": "null",
                            "description": "Skip the hard_tabs check."
                        },
                        "--no-trailing_whitespace-check": {
                            "id": "args:--no-trailing_whitespace-check",
                            "type": "null",
                            "description": "Skip the trailing_whitespace check."
                        },
                        "--help": {
                            "type": "string",
                            "description": "Show help"
                        },
                        "--version": {
                            "id": "linterhub:version",
                            "type": "string",
                            "description": "Show version"
                        },
                        "": {
                            "id": "linterhub:path",
                            "type": "string",
                            "description": "Path for analysis"
                        }
                    }
                },
                "section": {
                    "type": "object",
                    "description": "The engine configuration section",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "The engine name",
                            "enum": [
                                "puppet-lint"
                            ]
                        },
                        "options": {
                            "type": "object",
                            "description": "The engine configuration",
                            "$ref": "#/definitions/arguments"
                        }
                    }
                }
            }
        },
        "deps": {
            "$schema": "https://repometric.github.io/linterhub/schema/deps.json",
            "name": "puppet-lint",
            "dependencies": [
                [
                    {
                        "manager": "platform",
                        "package": "gem"
                    },
                    {
                        "manager": "gem",
                        "package": "puppet-lint",
                        "version": "2.3.5",
                        "engine": true
                    }
                ]
            ]
        },
        "meta": {
            "$schema": "https://repometric.github.io/linterhub/schema/meta.json",
            "name": "puppet-lint",
            "description": "Puppet Lint tests Puppet code against the recommended Puppet language style guide. Puppet Lint validates only code style; it does not validate syntax.",
            "url": "https://github.com/rodjek/puppet-lint",
            "languages": [
                "Ruby"
            ],
            "license": "MIT"
        }
    },
    "pycodestyle": {
        "args": {
            "$schema": "https://repometric.github.io/linterhub/schema/args.json",
            "name": "pycodestyle",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/arguments"
                }
            ],
            "definitions": {
                "arguments": {
                    "type": "object",
                    "properties": {
                        "--config": {
                            "id": "linterhub:config",
                            "type": "string",
                            "description": "User config file location"
                        },
                        "--benchmark": {
                            "id": "args:--benchmark",
                            "type": "null",
                            "description": "Measure processing speed"
                        },
                        "--diff": {
                            "id": "linterhub:stdin",
                            "type": "null",
                            "description": "Report changes only within line number ranges in the unified diff received on STDIN"
                        },
                        "--format": {
                            "id": "args:--format",
                            "type": "string",
                            "description": "Set the error format [default|pylint|<custom>]"
                        },
                        "--hang-closing": {
                            "id": "args:--hang-closing",
                            "type": "null",
                            "description": "Hang closing bracket instead of matching indentation of opening bracket's line"
                        },
                        "--max-line-length": {
                            "id": "args:--max-line-length",
                            "type": "number",
                            "description": "Set maximum allowed line length (default: 79)"
                        },
                        "--count": {
                            "id": "args:--count",
                            "type": "null",
                            "description": "Print total number of errors and warnings to standard error and set exit code to 1 if total is not null"
                        },
                        "--statistics": {
                            "id": "args:--statistics",
                            "type": "null",
                            "description": "count errors and warnings"
                        },
                        "--show-pep8": {
                            "id": "args:--show-pep8",
                            "type": "null",
                            "description": "Show text of PEP 8 for each error (implies --first)"
                        },
                        "--ignore": {
                            "id": "args:--ignore",
                            "type": "string",
                            "description": "Skip errors and warnings (e.g. E4,W) (default: E121,E123,E126,E226,E24,E704,W503)"
                        },
                        "--show-source": {
                            "id": "args:--show-source",
                            "type": "null",
                            "description": "Show source code for each error"
                        },
                        "--select": {
                            "id": "args:--select",
                            "type": "string",
                            "description": "Select errors and warnings (e.g. E,W6)"
                        },
                        "--filename": {
                            "id": "linterhub:filename",
                            "type": "string",
                            "description": "When parsing directories, only check filenames matching these comma separated patterns (default: *.py)"
                        },
                        "--exclude": {
                            "id": "args:--exclude",
                            "type": "string",
                            "description": "exclude files or directories which match these comma separated patterns (default: .svn,CVS,.bzr,.hg,.git,__pycache__,.tox)"
                        },
                        "--first": {
                            "id": "args:--first",
                            "type": "null",
                            "description": "Show first occurrence of each error"
                        },
                        "--repeat": {
                            "id": "args:--repeat",
                            "type": "null",
                            "description": "(obsolete) show all occurrences of the same error"
                        },
                        "--quiet": {
                            "id": "args:--quiet",
                            "type": "null",
                            "description": "Report only file names, or nothing with -qq"
                        },
                        "--verbose": {
                            "id": "args:--verbose",
                            "type": "null",
                            "description": "Print status messages, or debug with -vv"
                        },
                        "": {
                            "id": "linterhub:path",
                            "type": "string",
                            "description": "The path to a Python project to inspect. Defaults to PWD if not specified. If multiple paths are specified, they must all be files (no directories)."
                        },
                        "--version": {
                            "id": "linterhub:version",
                            "type": "null",
                            "description": "Show program's version number and exit"
                        },
                        "--help": {
                            "type": "null",
                            "description": "Show help"
                        }
                    }
                },
                "section": {
                    "type": "object",
                    "description": "The engine configuration section",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "The engine name",
                            "enum": [
                                "pycodestyle"
                            ]
                        },
                        "arguments": {
                            "type": "object",
                            "description": "The engine configuration",
                            "$ref": "#/definitions/arguments"
                        }
                    }
                }
            }
        },
        "deps": {
            "$schema": "https://repometric.github.io/linterhub/schema/deps.json",
            "name": "pycodestyle",
            "dependencies": [
                [
                    {
                        "manager": "platform",
                        "package": "pip"
                    },
                    {
                        "manager": "pip",
                        "package": "pycodestyle",
                        "version": "2.0.0",
                        "engine": true
                    }
                ]
            ]
        },
        "meta": {
            "$schema": "https://repometric.github.io/linterhub/schema/meta.json",
            "name": "pycodestyle",
            "alias": [
                "pep8"
            ],
            "description": "Pycodestyle is a tool to check your Python code against some of the style conventions in PEP 8.",
            "url": "https://github.com/PyCQA/pycodestyle",
            "languages": [
                "Python"
            ],
            "license": "MIT"
        }
    },
    "pyflakes": {
        "args": {
            "$schema": "https://repometric.github.io/linterhub/schema/args.json",
            "name": "pyflakes",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/arguments"
                }
            ],
            "definitions": {
                "arguments": {
                    "type": "object",
                    "properties": {
                        "": {
                            "id": "linterhub:path",
                            "type": "string",
                            "description": "The path to a Python project to inspect."
                        },
                        "--version": {
                            "id": "linterhub:version",
                            "type": "null",
                            "description": "Show program's version number and exit"
                        },
                        "--help": {
                            "type": "null",
                            "description": "Show help"
                        }
                    }
                },
                "section": {
                    "type": "object",
                    "description": "The engine configuration section",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "The engine name",
                            "enum": [
                                "pyflakes"
                            ]
                        },
                        "arguments": {
                            "type": "object",
                            "description": "The engine configuration",
                            "$ref": "#/definitions/arguments"
                        }
                    }
                }
            }
        },
        "deps": {
            "$schema": "https://repometric.github.io/linterhub/schema/deps.json",
            "name": "pyflakes",
            "dependencies": [
                [
                    {
                        "manager": "platform",
                        "package": "pip"
                    },
                    {
                        "manager": "pip",
                        "package": "pyflakes",
                        "version": "1.6.0",
                        "engine": true
                    }
                ]
            ]
        },
        "meta": {
            "$schema": "https://repometric.github.io/linterhub/schema/meta.json",
            "name": "pyflakes",
            "description": "Pyflakes analyzes programs and detects various errors. It works by parsing the source file, not importing it, so it is safe to use on modules with side effects. It’s also much faster.",
            "url": "https://github.com/PyCQA/pyflakes",
            "languages": [
                "Python"
            ],
            "license": "MIT"
        }
    },
    "pylint": {
        "args": {
            "$schema": "https://repometric.github.io/linterhub/schema/args.json",
            "name": "pylint",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/arguments"
                }
            ],
            "definitions": {
                "arguments": {
                    "type": "object",
                    "properties": {
                        "--msg-template": {
                            "id": "args:--msg-template",
                            "type": "string",
                            "description": "Template used to display messages. This is a python new-style format string used to format the message information. See doc for all details"
                        },
                        "--score": {
                            "id": "args:--score",
                            "type": "string",
                            "enum": [
                                "yes",
                                "no"
                            ],
                            "description": "Activate the evaluation score. [current: yes]"
                        },
                        "--evaluation": {
                            "id": "args:--evaluation",
                            "type": "string",
                            "description": "Python expression which should return a note less than 10 (10 is the highest note). You have access to the variables errors warning, statement which respectively contain the number of errors / warnings messages and the total number of statements analyzed. This is used by the global evaluation report (RP0004). [current: 10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10)]"
                        },
                        "--reports": {
                            "id": "args:--reports",
                            "type": "string",
                            "enum": [
                                "yes",
                                "no"
                            ],
                            "description": "Tells whether to display a full report or only the messages [current: no]"
                        },
                        "--output-format": {
                            "type": "string",
                            "description": "Set the output format. Available formats are text,  parseable, colorized, json and msvs (visual studio).You can also give a reporter class, eg  mypackage.mymodule.MyReporterClass. [current: text]"
                        },
                        "--disable": {
                            "id": "args:--disable",
                            "type": "string",
                            "description": "Disable the message, report, category or checker with the given id(s). You can either give multiple identifiers separated by comma (,) or put this option multiple times (only on the command line, not in the configuration file where it should appear only once).You can also use --disable=all to disable everything first and then reenable specific checks. For example, if you want to run only the similarities checker, you can use --disable=all --enable=similarities. If you want to run only the classes checker, but have no Warning level messages displayed, use--disable=all --enable=classes -disable=W"
                        },
                        "--enable": {
                            "id": "args:--enable",
                            "type": "string",
                            "description": "Enable the message, report, category or checker with the given id(s). You can either give multiple identifier separated by comma (,) or put this option multiple time (only on the command line, not in the configuration file where it should appear only once). See also the --disable option for examples."
                        },
                        "--confidence": {
                            "id": "args:--confidence",
                            "type": "string",
                            "description": "Only show warnings with the listed confidence levels. Leave empty to show all. Valid levels: HIGH, INFERENCE, INFERENCE_FAILURE, UNDEFINED [current: none]"
                        },
                        "--generate-rcfile": {
                            "id": "args:--generate-rcfile",
                            "type": "null",
                            "description": "Generate a sample configuration file according to the current configuration. You can put other options before this one to get them in the generated configuration."
                        },
                        "--full-documentation": {
                            "id": "args:--full-documentation",
                            "type": "null",
                            "description": "Generate pylint's full documentation."
                        },
                        "--list-conf-levels": {
                            "id": "args:--list-conf-levels",
                            "type": "null",
                            "description": "Generate pylint's messages."
                        },
                        "--list-msgs": {
                            "id": "args:--list-msgs",
                            "type": "null",
                            "description": "Generate pylint's messages."
                        },
                        "--suggestion-mode": {
                            "id": "args:--suggestion-mode",
                            "type": "string",
                            "enum": [
                                "yes",
                                "no"
                            ],
                            "description": "When enabled, pylint would attempt to guess common misconfiguration and emit user-friendly hints instead of false-positive error messages [current: yes]"
                        },
                        "--extension-pkg-whitelist": {
                            "id": "args:--extension-pkg-whitelist",
                            "type": "string",
                            "description": "A comma-separated list of package or module names from where C extensions may be loaded. Extensions are loading into the active Python interpreter and may run arbitrary code [current: none]"
                        },
                        "--jobs": {
                            "id": "args:--jobs",
                            "type": "number",
                            "description": "Use multiple processes to speed up Pylint. [current: 1]"
                        },
                        "--load-plugins": {
                            "id": "args:--load-plugins",
                            "type": "string",
                            "description": "List of plugins (as comma separated values of python modules names) to load, usually to register additional checkers. [current: none]"
                        },
                        "--persistent": {
                            "id": "args:--persistent",
                            "type": "string",
                            "enum": [
                                "yes",
                                "no"
                            ],
                            "description": "Pickle collected data for later comparisons. [current: yes]"
                        },
                        "--ignore-patterns": {
                            "id": "args:--ignore-patterns",
                            "type": "string",
                            "description": "Add files or directories matching the regex patterns to the blacklist. The regex matches against base names, not paths. [current: none]"
                        },
                        "--ignore": {
                            "id": "args:--ignore",
                            "type": "string",
                            "description": "Add files or directories to the blacklist. They should be base names, not paths. [current: CVS]"
                        },
                        "--py3k": {
                            "id": "args:--py3k",
                            "type": "null",
                            "description": "In Python 3 porting mode, all checkers will be disabled and only messages emitted by the porting checker will be displayed"
                        },
                        "--errors-only": {
                            "id": "args:--errors-only",
                            "type": "null",
                            "description": "In error mode, checkers without error messages are disabled and for others, only the ERROR messages are displayed, and no reports are done by default"
                        },
                        "--init-hook": {
                            "id": "args:--init-hook",
                            "type": "string",
                            "description": "Python code to execute, usually for sys.path manipulation such as pygtk.require()."
                        },
                        "--rcfile": {
                            "id": "linterhub:config",
                            "type": "string",
                            "description": "Specify a configuration file."
                        },
                        "": {
                            "id": "linterhub:path",
                            "type": "string",
                            "description": "The path to a Python project to inspect."
                        },
                        "--version": {
                            "id": "linterhub:version",
                            "type": "null",
                            "description": "Show program's version number and exit"
                        },
                        "--help": {
                            "type": "null",
                            "description": "Show help"
                        }
                    }
                },
                "section": {
                    "type": "object",
                    "description": "The engine configuration section",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "The engine name",
                            "enum": [
                                "pylint"
                            ]
                        },
                        "arguments": {
                            "type": "object",
                            "description": "The engine configuration",
                            "$ref": "#/definitions/arguments"
                        }
                    }
                }
            }
        },
        "deps": {
            "$schema": "https://repometric.github.io/linterhub/schema/deps.json",
            "name": "pylint",
            "dependencies": [
                [
                    {
                        "manager": "platform",
                        "package": "pip"
                    },
                    {
                        "manager": "pip",
                        "package": "pylint",
                        "version": "1.8.4",
                        "engine": true
                    }
                ]
            ]
        },
        "meta": {
            "$schema": "https://repometric.github.io/linterhub/schema/meta.json",
            "name": "pylint",
            "description": "Pylint is a Python source code analyzer which looks for programming errors, helps enforcing a coding standard and sniffs for some code smells (as defined in Martin Fowler’s Refactoring book).",
            "url": "https://github.com/PyCQA/pylint/",
            "languages": [
                "Python"
            ],
            "license": "GPL-1.0"
        }
    },
    "radon": {
        "args": {
            "$schema": "https://repometric.github.io/linterhub/schema/args.json",
            "name": "radon",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/arguments"
                }
            ],
            "definitions": {
                "arguments": {
                    "type": "object",
                    "properties": {
                        "--show-complexity": {
                            "id": "args:--show-complexity",
                            "type": "null",
                            "description": "Whether or not to show the actual complexity score together with the A-F rank. Default to False."
                        },
                        "--average": {
                            "id": "args:--average",
                            "type": "null",
                            "description": "If True, at the end of the analysis display the average complexity. Default to False."
                        },
                        "--order": {
                            "id": "args:--order",
                            "type": "string",
                            "description": "The ordering function. Can be SCORE, LINES or ALPHA."
                        },
                        "--no-assert": {
                            "id": "args:--no-assert",
                            "type": "null",
                            "description": "Do not count `assert` statements when computing complexity."
                        },
                        "--show-closures": {
                            "id": "args:--show-closures",
                            "type": "null",
                            "description": "Add closures/inner classes to the output."
                        },
                        "--total-average": {
                            "id": "args:--total-average",
                            "type": "null",
                            "description": "Like `-a, --average`, but it is not influenced by `min` and `max`. Every analyzed block is counted, no matter whether it is displayed or not."
                        },
                        "--xml": {
                            "type": "null",
                            "description": "Format results in XML (compatible with CCM)."
                        },
                        "--codeclimate": {
                            "type": "null",
                            "description": "Format results for Code Climate."
                        },
                        "--min": {
                            "id": "args:--min",
                            "type": "string",
                            "description": "The minimum MI to display (default to A)."
                        },
                        "--max": {
                            "id": "args:--max",
                            "type": "string",
                            "description": "If given, multiline strings are not counted as comments."
                        },
                        "--multi": {
                            "id": "args:--multi",
                            "type": "null",
                            "description": "If given, multiline strings are not counted as comments."
                        },
                        "--show": {
                            "id": "args:--show",
                            "type": "null",
                            "description": "If given, the actual MI value is shown in results."
                        },
                        "--sort": {
                            "id": "args:--sort",
                            "type": "null",
                            "description": "If given, results are sorted in ascending order."
                        },
                        "--json": {
                            "type": "null",
                            "description": "Format results in JSON."
                        },
                        "--summary": {
                            "id": "args:--summary",
                            "type": "null",
                            "description": "If given, at the end of the analysis display the summary of the gathered metrics. Default to False."
                        },
                        "--ignore": {
                            "id": "args:--ignore",
                            "type": "string",
                            "description": "Ignore directories when their name matches one of these glob patterns: radon won't even descend into them. By default, hidden directories (starting with '.') are ignored."
                        },
                        "--exclude": {
                            "id": "args:--exclude",
                            "type": "string",
                            "description": "Exclude files only when their path matches one of these glob patterns. Usually needs quoting at the command line."
                        },
                        "raw": {
                            "id": "args:raw",
                            "type": "null",
                            "description": "Analyze the given Python modules and compute raw metrics."
                        },
                        "cc": {
                            "id": "args:cc",
                            "type": "null",
                            "description": "Analyze the given Python modules and compute Cyclomatic Complexity (CC)."
                        },
                        "mi": {
                            "id": "args:mi",
                            "type": "null",
                            "description": "Analyze the given Python modules and compute the Maintainability Index."
                        },
                        "": {
                            "id": "linterhub:path",
                            "type": "string",
                            "description": "The path to a Python project to inspect."
                        },
                        "--version": {
                            "id": "linterhub:version",
                            "type": "null",
                            "description": "Show program's version number and exit"
                        },
                        "--help": {
                            "type": "null",
                            "description": "Show help"
                        }
                    }
                },
                "section": {
                    "type": "object",
                    "description": "The engine configuration section",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "The engine name",
                            "enum": [
                                "radon"
                            ]
                        },
                        "arguments": {
                            "type": "object",
                            "description": "The engine configuration",
                            "$ref": "#/definitions/arguments"
                        }
                    }
                }
            }
        },
        "deps": {
            "$schema": "https://repometric.github.io/linterhub/schema/deps.json",
            "name": "radon",
            "dependencies": [
                [
                    {
                        "manager": "platform",
                        "package": "pip"
                    },
                    {
                        "manager": "pip",
                        "package": "radon",
                        "version": "2.2.0",
                        "engine": true
                    }
                ]
            ]
        },
        "meta": {
            "$schema": "https://repometric.github.io/linterhub/schema/meta.json",
            "name": "radon",
            "description": "Radon is a Python tool that computes various metrics from the source code.",
            "url": "https://github.com/rubik/radon",
            "languages": [
                "Python"
            ],
            "license": "MIT"
        }
    },
    "remark-lint": {
        "args": {
            "$schema": "https://repometric.github.io/linterhub/schema/args.json",
            "id": "remark-lint",
            "name": "remark-lint",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/options"
                }
            ],
            "definitions": {
                "arguments": {
                    "type": "object",
                    "properties": {
                        "--ignore": {
                            "type": "null",
                            "description": "Search for ignore files"
                        },
                        "--no-ignore": {
                            "type": "null",
                            "description": "Ingores files by default"
                        },
                        "--stdout": {
                            "type": "null",
                            "description": "Specify writing to stdout"
                        },
                        "--no-stdout": {
                            "type": "null",
                            "description": "Stdout by default"
                        },
                        "--no-color": {
                            "type": "null",
                            "description": "Color in report by default"
                        },
                        "--color": {
                            "type": "null",
                            "description": "Specify color in report"
                        },
                        "--no-config": {
                            "type": "null",
                            "description": "Configuration files  by default"
                        },
                        "--config": {
                            "type": "null",
                            "description": "Search for configuration files"
                        },
                        "--inspect": {
                            "type": "null",
                            "description": "Output formatted syntax tree"
                        },
                        "--tree-out": {
                            "type": "null",
                            "description": "Output syntax tree"
                        },
                        "--tree-in": {
                            "type": "null",
                            "description": "Specify input as syntax tree"
                        },
                        "--file-path": {
                            "id": "args:--file-path",
                            "type": "string",
                            "description": "Specify path to process as"
                        },
                        "--report": {
                            "id": "args:--report",
                            "type": "string",
                            "description": "Specify reporter"
                        },
                        "--tree": {
                            "type": "null",
                            "description": "Specify input and output as syntax tree"
                        },
                        "--frail": {
                            "type": "null",
                            "description": "Exit with 1 on warnings"
                        },
                        "--silent": {
                            "type": "null",
                            "description": "Output only errors"
                        },
                        "--quiet": {
                            "type": "null",
                            "description": "Output only warnings and errors"
                        },
                        "--watch": {
                            "type": "null",
                            "description": "Watch for changes and reprocess"
                        },
                        "--use": {
                            "id": "args:--use",
                            "type": "string",
                            "description": "Use plugins"
                        },
                        "--ext": {
                            "id": "args:--ext",
                            "type": "string",
                            "description": "Specify extensions"
                        },
                        "--setting": {
                            "id": "args:--setting",
                            "type": "string",
                            "description": "Specify settings"
                        },
                        "--ingore-path": {
                            "id": "args:--ingore-path",
                            "type": "string",
                            "description": "Specify ignore file"
                        },
                        "--rc-path": {
                            "id": "args:--rc-path",
                            "type": "string",
                            "description": "Specify configuration file"
                        },
                        "--output": {
                            "id": "linterhub:filename",
                            "type": "string",
                            "description": "The path and filename where you would like output to be written"
                        },
                        "": {
                            "id": "linterhub:path",
                            "type": "string",
                            "description": "Path for analysis"
                        },
                        "--version": {
                            "id:": "linterhub:version",
                            "type": "null",
                            "description": "Output the version number"
                        },
                        "--help": {
                            "type": "null",
                            "description": "Output usage information"
                        }
                    }
                },
                "section": {
                    "type": "object",
                    "description": "The engine configuration section",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "The engine name",
                            "enum": [
                                "remark-lint"
                            ]
                        },
                        "arguments": {
                            "type": "object",
                            "description": "The engine configuration",
                            "$ref": "#/definitions/arguments"
                        }
                    }
                }
            }
        },
        "deps": {
            "$schema": "https://repometric.github.io/linterhub/schema/deps.json",
            "name": "remark-lint",
            "dependencies": [
                [
                    {
                        "manager": "platform",
                        "package": "npm"
                    },
                    {
                        "manager": "npm",
                        "package": "remark-cli",
                        "version": "5.0.0",
                        "engine": true
                    }
                ]
            ]
        },
        "meta": {
            "$schema": "https://repometric.github.io/linterhub/schema/meta.json",
            "name": "remark-lint",
            "description": "remark-lint is a markdown code style linter built on remark",
            "url": "https://github.com/remarkjs/remark-lint/tree/master/packages/remark-lint",
            "languages": [
                "Markdown"
            ],
            "license": "MIT"
        }
    },
    "rubocop": {
        "args": {
            "$schema": "https://repometric.github.io/linterhub/schema/args.json",
            "id": "rubocop",
            "name": "rubocop",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/arguments"
                }
            ],
            "definitions": {
                "arguments": {
                    "type": "object",
                    "description": "The engine command line arguments",
                    "properties": {
                        "--config": {
                            "id": "linterhub:config",
                            "type": "string",
                            "description": "path to config file"
                        },
                        "--list-target-files": {
                            "id": "args:--list-target-files",
                            "type": "string",
                            "description": "List all files RuboCop will inspect."
                        },
                        "--except": {
                            "id": "args:--except",
                            "type": "string",
                            "description": "Disable the given cop(s)."
                        },
                        "--only": {
                            "id": "args:--only",
                            "type": "string",
                            "description": "Run only the given cop(s)."
                        },
                        "--only-guide-cops": {
                            "id": "args:--only-guide-cops",
                            "type": "string",
                            "description": "Run only cops for rules that link to a style guide."
                        },
                        "--auto-gen-config": {
                            "id": "--auto-gen-config",
                            "type": "null",
                            "description": "Generate a configuration file acting as a TODO list."
                        },
                        "--exclude-limit": {
                            "id": "--exclude-limit",
                            "type": "number",
                            "description": "Used together with --auto-gen-config to set the limit for how many Exclude properties to generate. Default is 15..",
                            "default": "15"
                        },
                        "--force-exclusion": {
                            "id": "--force-exclusion",
                            "type": "null",
                            "description": "Force excluding files specified in the configuration `Exclude` even if they are explicitly passed as arguments."
                        },
                        "--ignore-parent-exclusion": {
                            "id": "--ignore-parent-exclusion",
                            "type": "null",
                            "description": "Prevent from inheriting AllCops/Exclude from parent folders."
                        },
                        "--force-default-config": {
                            "id": "--force-default-config",
                            "type": "null",
                            "description": "Use default configuration even if configuration files are present in the directory tree."
                        },
                        "--no-offense-counts": {
                            "id": "--no-offense-counts",
                            "type": "null",
                            "description": "Do not include offense counts in configuration file generated by --auto-gen-config."
                        },
                        "--no-auto-gen-timestamp": {
                            "id": "--no-auto-gen-timestamp",
                            "type": "null",
                            "description": "Do not include the date and time when the --auto-gen-config was run in the file it generates."
                        },
                        "--format": {
                            "id": "--format",
                            "type": "string",
                            "description": "Choose an output formatter. This option can be specified multiple times to enable multiple formatters at the same time.",
                            "default": "progress",
                            "enum": [
                                "progress",
                                "simple",
                                "clang",
                                "fuubar",
                                "emacs",
                                "json",
                                "html",
                                "files",
                                "offenses",
                                "worst",
                                "tap",
                                "quiet",
                                "autogenconf"
                            ]
                        },
                        "--out": {
                            "id": "--out",
                            "type": "string",
                            "description": "Write output to a file instead of STDOUT. This option applies to the previously specified --format, or the default format if no format is specified."
                        },
                        "--require": {
                            "id": "args:--require",
                            "type": "string",
                            "description": "Require Ruby file."
                        },
                        "--fail-level": {
                            "id": "args:--fail-level",
                            "type": "string",
                            "description": "Minimum severity (A/R/C/W/E/F) for exit with error code.",
                            "enum": [
                                "A",
                                "R",
                                "C",
                                "W",
                                "E",
                                "F"
                            ]
                        },
                        "--show-cops": {
                            "id": "--show-cops",
                            "type": "string",
                            "description": "Shows the given cops, or all cops by default, and their configurations for the current directory."
                        },
                        "--fail-fast": {
                            "id": "args:--fail-fast",
                            "type": "null",
                            "description": "Inspect files in order of modification time and stop after the first file containing offenses."
                        },
                        "--cache": {
                            "id": "--cache",
                            "type": "string",
                            "enum": [
                                "true",
                                "false"
                            ],
                            "description": "Use result caching (FLAG=true) or don't (FLAG=false), default determined by configuration parameter AllCops: UseCache."
                        },
                        "--debug": {
                            "id": "--debug",
                            "type": "null",
                            "description": " Display debug info."
                        },
                        "--no-display-cop-names": {
                            "id": "--no-display-cop-names",
                            "type": "null",
                            "description": "--[no-]display-cop-names     Display cop names in offense messages. Default is true.",
                            "default": "false"
                        },
                        "--display-cop-names": {
                            "id": "--display-cop-names",
                            "type": "string",
                            "description": "--[no-]display-cop-names     Display cop names in offense messages. Default is true.",
                            "default": "true"
                        },
                        "--extra-details": {
                            "id": "--extra-details",
                            "type": "null",
                            "description": "Display extra details in offense messages."
                        },
                        "--rails": {
                            "id": "args:--rails",
                            "type": "null",
                            "description": "Run extra Rails cops."
                        },
                        "--lint": {
                            "id": "args:--lint",
                            "type": "string",
                            "description": "Run only lint cops."
                        },
                        "--auto-correct": {
                            "id": "--auto-correct",
                            "type": "null",
                            "description": "Auto-correct offenses."
                        },
                        "--color": {
                            "id": "--color",
                            "type": "null",
                            "description": "Force color output on or off."
                        },
                        "--no-color": {
                            "id": "--no-color",
                            "type": "null",
                            "description": "Force color output on or off."
                        },
                        "--verbose-version": {
                            "id": "--verbose-version",
                            "type": "null",
                            "description": "Display verbose version."
                        },
                        "--parallel": {
                            "id": "args:--parallel",
                            "type": "null",
                            "description": "Use available CPUs to execute inspection in parallel."
                        },
                        "--stdin": {
                            "id": "linterhub:stdin",
                            "type": "string",
                            "description": "Pipe source from STDIN, using FILE in offense reports. This is useful for editor integration."
                        },
                        "--version": {
                            "id:": "linterhub:version",
                            "type": "null",
                            "description": "Output the version number"
                        },
                        "--help": {
                            "type": "null",
                            "description": "Output usage information"
                        }
                    }
                },
                "section": {
                    "type": "object",
                    "description": "The engine configuration section",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "The engine name",
                            "enum": [
                                "rubocop"
                            ]
                        },
                        "arguments": {
                            "type": "object",
                            "description": "The engine configuration",
                            "$ref": "#/definitions/arguments"
                        }
                    }
                }
            }
        },
        "deps": {
            "$schema": "https://repometric.github.io/linterhub/schema/deps.json",
            "name": "rubocop",
            "dependencies": [
                [
                    {
                        "manager": "platform",
                        "package": "gem"
                    },
                    {
                        "manager": "gem",
                        "package": "rubocop",
                        "version": "0.55.0",
                        "engine": true
                    }
                ]
            ]
        },
        "meta": {
            "$schema": "https://repometric.github.io/linterhub/schema/meta.json",
            "name": "rubocop",
            "description": "RuboCop is a Ruby static code analyzer",
            "url": "https://github.com/bbatsov/rubocop",
            "languages": [
                "Ruby"
            ],
            "license": "MIT"
        }
    },
    "ruby-lint": {
        "args": {
            "$schema": "https://repometric.github.io/linterhub/schema/args.json",
            "id": "ruby-lint",
            "name": "ruby-lint",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/arguments"
                }
            ],
            "definitions": {
                "arguments": {
                    "type": "object",
                    "description": "The engine command line arguments",
                    "properties": {
                        "--config": {
                            "id": "linterhub:config",
                            "type": "string",
                            "description": "path to config file"
                        },
                        "--levels": {
                            "id": "--levels",
                            "type": "string",
                            "description": "The reporting levels to enable"
                        },
                        "--presenter": {
                            "id": "args:--presenter",
                            "type": "null",
                            "description": "The presenter to use"
                        },
                        "--analysis": {
                            "id": "args:--analysis",
                            "type": "string",
                            "description": "The analysis classes to use"
                        },
                        "--benchmark": {
                            "id": "--benchmark",
                            "type": "null",
                            "description": "Enables benchmarking mode"
                        },
                        "--version": {
                            "id:": "linterhub:version",
                            "type": "null",
                            "description": "Output the version number"
                        },
                        "--help": {
                            "type": "null",
                            "description": "Output usage information"
                        }
                    }
                },
                "section": {
                    "type": "object",
                    "description": "The engine configuration section",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "The engine name",
                            "enum": [
                                "ruby-lint"
                            ]
                        },
                        "arguments": {
                            "type": "object",
                            "description": "The engine configuration",
                            "$ref": "#/definitions/arguments"
                        }
                    }
                }
            }
        },
        "deps": {
            "$schema": "https://repometric.github.io/linterhub/schema/deps.json",
            "name": "ruby-lint",
            "dependencies": [
                [
                    {
                        "manager": "platform",
                        "package": "gem"
                    },
                    {
                        "manager": "gem",
                        "package": "ruby-lint",
                        "version": "2.3.1",
                        "engine": true
                    }
                ]
            ]
        },
        "meta": {
            "$schema": "https://repometric.github.io/linterhub/schema/meta.json",
            "name": "ruby-lint",
            "description": "ruby-lint is a static code analysis tool for Ruby.",
            "url": "https://gitlab.com/yorickpeterse/ruby-lint",
            "areas": [],
            "languages": [
                "Ruby"
            ],
            "license": "MPL-2.0"
        }
    },
    "sass-lint": {
        "args": {
            "$schema": "https://repometric.github.io/linterhub/schema/args.json",
            "id": "sass-lint",
            "name": "sass-lint",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/options"
                }
            ],
            "definitions": {
                "arguments": {
                    "type": "object",
                    "properties": {
                        "--config": {
                            "id": "linterhub:config",
                            "type": "string",
                            "description": "Path to custom config file"
                        },
                        "--ignore": {
                            "id": "args:--ingnore",
                            "type": "string",
                            "description": "Pattern to ignore. For multiple ignores, separate each pattern by `, ` within a string"
                        },
                        "--no-exit": {
                            "type": "null",
                            "description": "Do not exit on errors"
                        },
                        "--verbose": {
                            "type": "null",
                            "description": "Verbose output"
                        },
                        "--format": {
                            "id": "args:--format",
                            "type": "string",
                            "description": "Pass one of the available eslint formats",
                            "default": "json"
                        },
                        "--output": {
                            "id": "linterhub:filename",
                            "type": "string",
                            "description": "The path and filename where you would like output to be written"
                        },
                        "--syntax": {
                            "id": "args:--syntax",
                            "type": "string",
                            "description": "Syntax to evaluate the file(s) with (either sass or scss)"
                        },
                        "--max-warnings": {
                            "id": "args:--max-warnings",
                            "type": "number",
                            "description": "Number of warnings to trigger nonzero exit code"
                        },
                        "": {
                            "id": "linterhub:path",
                            "type": "string",
                            "description": "Path for analysis"
                        },
                        "--version": {
                            "id:": "linterhub:version",
                            "type": "null",
                            "description": "Output the version number"
                        },
                        "--help": {
                            "type": "null",
                            "description": "Output usage information"
                        }
                    }
                },
                "section": {
                    "type": "object",
                    "description": "The engine configuration section",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "The engine name",
                            "enum": [
                                "sass-lint"
                            ]
                        },
                        "arguments": {
                            "type": "object",
                            "description": "The engine configuration",
                            "$ref": "#/definitions/arguments"
                        }
                    }
                }
            }
        },
        "deps": {
            "$schema": "https://repometric.github.io/linterhub/schema/deps.json",
            "name": "sass-lint",
            "dependencies": [
                [
                    {
                        "manager": "platform",
                        "package": "npm"
                    },
                    {
                        "manager": "npm",
                        "package": "sass-lint",
                        "version": "1.12.1",
                        "engine": true
                    }
                ]
            ]
        },
        "meta": {
            "$schema": "https://repometric.github.io/linterhub/schema/meta.json",
            "name": "sass-lint",
            "description": "Sass linter for both sass and scss syntax",
            "url": "https://github.com/sasstools/sass-lint",
            "languages": [
                "Sass",
                "SCSS"
            ],
            "license": "MIT"
        }
    },
    "scss-lint": {
        "args": {
            "$schema": "https://repometric.github.io/linterhub/schema/args.json",
            "id": "scss-lint",
            "name": "scss-lint",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/arguments"
                }
            ],
            "definitions": {
                "arguments": {
                    "type": "object",
                    "description": "The engine command line arguments",
                    "properties": {
                        "--config": {
                            "id": "linterhub:config",
                            "type": "string",
                            "description": "Specify a configuration file to use"
                        },
                        "--exclude": {
                            "id": "args:--exclude",
                            "type": "string",
                            "description": "Exclude one or more files from being linted",
                            "default": "5"
                        },
                        "--format": {
                            "id": "--format",
                            "type": "string",
                            "description": "Output format"
                        },
                        "--out": {
                            "id": "--out",
                            "type": "null",
                            "description": "Write output to a file instead of STDOUT"
                        },
                        "--require": {
                            "id": "args:--require",
                            "type": "string",
                            "description": "Require file/library (mind $LOAD_PATH, uses Kernel.require)"
                        },
                        "--include-linter": {
                            "id": "args:--include-linter",
                            "type": "string",
                            "description": "Specify which linters you specifically want to run"
                        },
                        "--exclude-linter": {
                            "id": "args:--exclude-linter",
                            "type": "string",
                            "description": "Specify which linters you don't want to run"
                        },
                        "--stdin-file-path": {
                            "id": "linterhub:stdin-file-path",
                            "type": "string",
                            "description": "When linting a file passed via standard input, treat it as having the specified path to apply the appropriate configuration"
                        },
                        "--color": {
                            "id": "--color",
                            "type": "null",
                            "description": "Output in color"
                        },
                        "--no-color": {
                            "id": "--no-color",
                            "type": "null",
                            "description": "Not to output in color"
                        },
                        "--show-formatters": {
                            "id": "args:--show-formatters",
                            "type": "null",
                            "description": "Show all available formatters"
                        },
                        "--show-linters": {
                            "id": "--show-linters",
                            "type": "null",
                            "description": "Show all available linters"
                        },
                        "--version": {
                            "id:": "linterhub:version",
                            "type": "null",
                            "description": "Output the version number"
                        },
                        "--help": {
                            "type": "null",
                            "description": "Output usage information"
                        },
                        "": {
                            "id": "linterhub:path",
                            "type": "string",
                            "description": "Path for analysis"
                        }
                    }
                },
                "section": {
                    "type": "object",
                    "description": "The engine configuration section",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "The engine name",
                            "enum": [
                                "scss-lint"
                            ]
                        },
                        "arguments": {
                            "type": "object",
                            "description": "The engine configuration",
                            "$ref": "#/definitions/arguments"
                        }
                    }
                }
            }
        },
        "deps": {
            "$schema": "https://repometric.github.io/linterhub/schema/deps.json",
            "name": "scss-lint",
            "dependencies": [
                [
                    {
                        "manager": "platform",
                        "package": "gem"
                    },
                    {
                        "manager": "gem",
                        "package": "scss-lint",
                        "version": "0.57.0",
                        "engine": true
                    }
                ]
            ]
        },
        "meta": {
            "$schema": "https://repometric.github.io/linterhub/schema/meta.json",
            "name": "scss-lint",
            "description": "Configurable tool for writing clean and consistent SCSS",
            "url": "https://github.com/brigade/scss-lint",
            "languages": [
                "SCSS"
            ],
            "license": "MIT"
        }
    },
    "sitevalidator": {
        "args": {
            "$schema": "https://repometric.github.io/linterhub/schema/args.json",
            "id": "sitevalidator",
            "name": "sitevalidator",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/arguments"
                }
            ],
            "definitions": {
                "arguments": {
                    "type": "object",
                    "description": "The engine command line arguments",
                    "properties": {
                        "": {
                            "id:": "linterhub:path",
                            "type": "string",
                            "description": "url"
                        },
                        "url_of_sitemap": {
                            "id:": "args:url_of_sitemap",
                            "type": "string",
                            "hideName": true,
                            "description": "Url of sitemap"
                        },
                        "output_file": {
                            "id:": "args:output_file",
                            "type": "string",
                            "hideName": true,
                            "description": "Output file"
                        },
                        "max_pages": {
                            "id": "args:maxpages",
                            "type": "string",
                            "hideName": true,
                            "description": "Max pages"
                        }
                    }
                },
                "section": {
                    "type": "object",
                    "description": "The engine configuration section",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "The engine name",
                            "enum": [
                                "sitevalidator"
                            ]
                        },
                        "arguments": {
                            "type": "object",
                            "description": "The engine configuration",
                            "$ref": "#/definitions/arguments"
                        }
                    }
                }
            }
        },
        "deps": {
            "$schema": "https://repometric.github.io/linterhub/schema/deps.json",
            "name": "sitevalidator",
            "dependencies": [
                [
                    {
                        "manager": "platform",
                        "package": "gem"
                    },
                    {
                        "manager": "gem",
                        "package": "site_validator",
                        "version": "2.1.2",
                        "engine": true
                    }
                ]
            ]
        },
        "meta": {
            "$schema": "https://repometric.github.io/linterhub/schema/meta.json",
            "name": "sitevalidator",
            "description": "site_validator is the free, open source version of the Site Validator app.",
            "url": "https://github.com/sitevalidator/site_validator",
            "languages": [
                "Ruby"
            ],
            "license": "MIT"
        }
    },
    "standard": {
        "args": {
            "$schema": "https://repometric.github.io/linterhub/schema/args.json",
            "id": "standard",
            "name": "standard",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/arguments"
                }
            ],
            "definitions": {
                "arguments": {
                    "type": "object",
                    "description": "The engine command line arguments",
                    "properties": {
                        "--fix": {
                            "id": "args:--fix",
                            "type": "null",
                            "description": "Automatically fix problems"
                        },
                        "--verbose": {
                            "id": "args:--verbose",
                            "type": "null",
                            "description": "Show rule names for errors (to ignore specific rules)"
                        },
                        "--stdin": {
                            "id": "linterhub:--stdin",
                            "type": "string",
                            "description": "Read file text from stdin"
                        },
                        "--global": {
                            "id": "--global",
                            "type": "string",
                            "description": "Declare global variable"
                        },
                        "--plugin": {
                            "id": "args:--plugin",
                            "type": "string",
                            "description": "Use custom eslint plugin"
                        },
                        "--env": {
                            "id": "args:--env",
                            "type": "string",
                            "description": "Use custom eslint environment"
                        },
                        "--parser ": {
                            "id": "args:--parser",
                            "type": "null",
                            "description": "Use custom js parser (e.g. babel-eslint)"
                        },
                        "-version": {
                            "id": "linterhub:version",
                            "type": "null",
                            "description": "Show version of linter"
                        },
                        "": {
                            "id": "linterhub:path",
                            "type": "string",
                            "description": "Path for analysis"
                        },
                        "--help": {
                            "type": "null",
                            "description": "Output usage information"
                        }
                    }
                },
                "section": {
                    "type": "object",
                    "description": "The engine configuration section",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "The engine name",
                            "enum": [
                                "standard"
                            ]
                        },
                        "arguments": {
                            "type": "object",
                            "description": "The engine configuration",
                            "$ref": "#/definitions/arguments"
                        }
                    }
                }
            }
        },
        "deps": {
            "$schema": "https://repometric.github.io/linterhub/schema/deps.json",
            "name": "standard",
            "dependencies": [
                [
                    {
                        "manager": "platform",
                        "package": "npm"
                    },
                    {
                        "manager": "npm",
                        "package": "standard",
                        "version": "11.0.1",
                        "engine": true
                    }
                ]
            ]
        },
        "meta": {
            "$schema": "https://repometric.github.io/linterhub/schema/meta.json",
            "name": "standard",
            "description": "JavaScript style guide, linter, and formatter",
            "url": "https://standardjs.com/",
            "languages": [
                "JavaScript"
            ],
            "license": "MIT"
        }
    },
    "stylelint": {
        "args": {
            "$schema": "https://repometric.github.io/linterhub/schema/args.json",
            "name": "stylelint",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/arguments"
                }
            ],
            "definitions": {
                "arguments": {
                    "type": "object",
                    "properties": {
                        "--config": {
                            "id": "linterhub:config",
                            "type": "string",
                            "description": "Path to a specific configuration file"
                        },
                        "--config-basedir": {
                            "id": "args:--config-basedir",
                            "type": "string",
                            "description": "An absolute path to the directory that relative paths defining \"extends\" and \"plugins\" are *relative to*"
                        },
                        "--ignore-path": {
                            "id": "args:--ignore-path",
                            "type": "string",
                            "description": "Path to a file containing patterns that describe files to ignore."
                        },
                        "--ignore-pattern": {
                            "type": "string",
                            "description": "Pattern of files to ignore (in addition to those in .stylelintignore)"
                        },
                        "--syntax": {
                            "id": "args:--syntax",
                            "type": "string",
                            "description": "Specify a non-standard syntax",
                            "enum": [
                                "scss",
                                "less",
                                "sugarss"
                            ]
                        },
                        "--fix": {
                            "id": "args:--fix",
                            "type": "null",
                            "description": "Automatically fix violations of certain rules."
                        },
                        "--custom-syntax": {
                            "id": "args:--custom-syntax",
                            "type": "string",
                            "description": "Module name or path to a JS file exporting a PostCSS-compatible syntax."
                        },
                        "--stdin-filename": {
                            "id": "linterhub:filename",
                            "type": "string",
                            "description": "A filename to assign stdin input."
                        },
                        "--ignore-disables": {
                            "id": "args:--ignore-disables",
                            "type": "string",
                            "description": "Ignore styleline-disable comments."
                        },
                        "--disable-default-ignores": {
                            "id": "args:--disable-default-ignores",
                            "type": "null",
                            "description": "Allow linting of node_modules and bower_components."
                        },
                        "--cache": {
                            "id": "args:--cache",
                            "type": "null",
                            "description": "Store the info about processed files in order to only operate on the changed ones the next time you run stylelint."
                        },
                        "--cache-location": {
                            "id": "args:--cache-location",
                            "type": "string",
                            "description": "Path to a file or directory to be used for the cache location."
                        },
                        "--formatter": {
                            "type": "string",
                            "description": "The output formatter",
                            "enum": [
                                "json",
                                "string",
                                "verbose"
                            ]
                        },
                        "--version": {
                            "id": "linterhub:version",
                            "type": "null",
                            "description": "Show version of linter"
                        },
                        "--custom-formatter": {
                            "type": "string",
                            "description": "Path to a JS file exporting a custom formatting function."
                        },
                        "--quiet": {
                            "id": "args:--quiet",
                            "type": "null",
                            "description": "Only register warnings for rules with an error-level severity (ignore warning-level)"
                        },
                        "--color": {
                            "id": "args:--color",
                            "type": "null",
                            "description": "Force enabling of color."
                        },
                        "--no-color": {
                            "id": "args:--no-color",
                            "type": "null",
                            "description": "Force disabling of color."
                        },
                        "--allow-empty-input": {
                            "id": "args:--allow-empty-input",
                            "type": "null",
                            "description": "If no files match glob pattern, exits without throwing an error."
                        },
                        "--report-needless-disables": {
                            "id": "args:--report-needless-disables",
                            "type": "null",
                            "description": "Report stylelint-disable comments that are not blocking a lint warning."
                        },
                        "": {
                            "id": "linterhub:path",
                            "type": "string",
                            "description": "Path for analysis"
                        }
                    }
                },
                "section": {
                    "type": "object",
                    "description": "The engine configuration section",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "The engine name",
                            "enum": [
                                "stylelint"
                            ]
                        },
                        "arguments": {
                            "type": "object",
                            "description": "The engine configuration",
                            "$ref": "#/definitions/arguments"
                        }
                    }
                }
            }
        },
        "deps": {
            "$schema": "https://repometric.github.io/linterhub/schema/deps.json",
            "name": "stylelint",
            "dependencies": [
                [
                    {
                        "manager": "platform",
                        "package": "npm"
                    },
                    {
                        "manager": "npm",
                        "package": "stylelint",
                        "version": "9.2.0",
                        "engine": true
                    }
                ]
            ]
        },
        "meta": {
            "$schema": "https://repometric.github.io/linterhub/schema/meta.json",
            "name": "stylelint",
            "description": "A mighty, modern CSS linter.",
            "url": "https://stylelint.io",
            "languages": [
                "CSS",
                "Less",
                "SCSS"
            ],
            "configs": [
                ".stylelintrc",
                "stylelint.config.js"
            ],
            "license": "MIT"
        }
    },
    "stylint": {
        "args": {
            "$schema": "https://repometric.github.io/linterhub/schema/args.json",
            "name": "stylint",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/arguments"
                }
            ],
            "definitions": {
                "arguments": {
                    "type": "object",
                    "properties": {
                        "--watch": {
                            "id": "args:--watch",
                            "type": "boolean",
                            "description": "Watch file or directory and run lint on change"
                        },
                        "--strict": {
                            "type": "boolean",
                            "description": "Run all tests, regardless of config"
                        },
                        "--reporter": {
                            "type": "string",
                            "description": "Custom reporter npm module name"
                        },
                        "--config": {
                            "id": "linterhub:config",
                            "type": "string",
                            "description": "Reads csslint options from specified file"
                        },
                        "--help": {
                            "type": "null",
                            "description": "Show help"
                        },
                        "--version": {
                            "id": "linterhub:version",
                            "type": "string",
                            "description": "Show version"
                        },
                        "": {
                            "id": "linterhub:path",
                            "type": "string",
                            "description": "Path for analysis"
                        }
                    }
                },
                "section": {
                    "type": "object",
                    "description": "The engine configuration section",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "The engine name",
                            "enum": [
                                "stylint"
                            ]
                        },
                        "arguments": {
                            "type": "object",
                            "description": "The engine configuration",
                            "$ref": "#/definitions/arguments"
                        }
                    }
                }
            }
        },
        "deps": {
            "$schema": "https://repometric.github.io/linterhub/schema/deps.json",
            "name": "stylint",
            "dependencies": [
                [
                    {
                        "manager": "platform",
                        "package": "npm"
                    },
                    {
                        "manager": "npm",
                        "package": "stylint",
                        "version": "1.5.9",
                        "engine": true
                    }
                ]
            ]
        },
        "meta": {
            "$schema": "https://repometric.github.io/linterhub/schema/meta.json",
            "name": "stylint",
            "description": "A linter for stylus",
            "url": "https://github.com/SimenB/stylint#readme",
            "languages": [
                "CSS"
            ],
            "configs": [
                ".stylintrc"
            ],
            "license": "AGPL-3.0"
        }
    },
    "tslint": {
        "args": {
            "$schema": "https://repometric.github.io/linterhub/schema/args.json",
            "id": "tslint",
            "name": "tslint",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/arguments"
                }
            ],
            "definitions": {
                "arguments": {
                    "type": "object",
                    "description": "The engine command line arguments",
                    "properties": {
                        "--config": {
                            "id": "linterhub:--config",
                            "type": "string",
                            "description": "The location of the configuration file that tslint will use to determine which rules are activated and what options to provide to the rules. If no option is specified, the config file named tslint.json is used, so long as it exists in the path. The format of the file is { rules: { /* rules list */ } }, where /* rules list */ is a key: value comma-separated list of rulename: rule-options pairs. Rule-options can be either a boolean true/false value denoting whether the rule is used or not, or a list [boolean, ...] where the boolean provides the same role as in the non-list case, and the rest of the list are options passed to the rule that will determine what it checks for (such as number of characters for the max-line-length rule, or what functions to ban for the ban rule)."
                        },
                        "--exclude": {
                            "id": "args:--exclude",
                            "type": "string",
                            "description": "A filename or glob which indicates files to exclude from linting. This option can be supplied multiple times if you need multiple globs to indicate which files to exclude."
                        },
                        "--fix": {
                            "id": "args:--fix",
                            "type": "null",
                            "description": "Fixes linting errors for select rules. This may overwrite linted files."
                        },
                        "--force": {
                            "id": "args:--force",
                            "type": "null",
                            "description": "Return status code 0 even if there are any lint errors. Useful while running as npm script."
                        },
                        "--init": {
                            "id": "args:--init",
                            "type": "null",
                            "description": "Generates a tslint.json config file in the current working directory."
                        },
                        "--out": {
                            "id": "args:--out",
                            "type": "string",
                            "description": "A filename to output the results to. By default, tslint outputs to stdout, which is usually the console where you're running it from."
                        },
                        "--outputAbsolutePaths": {
                            "id": "args:--outputAbsolutePaths",
                            "type": "null",
                            "description": "If true, all paths in the output will be absolute."
                        },
                        "--rules-dir": {
                            "id": "args:--rules-dir",
                            "type": "string",
                            "description": "An additional rules directory, for user-created rules. tslint will always check its default rules directory, in node_modules/tslint/lib/rules, before checking the user-provided rules directory, so rules in the user-provided rules directory with the same name as the base rules will not be loaded."
                        },
                        "--formatters-dir": {
                            "id": "args:--formatters-dir",
                            "type": "string",
                            "description": "An additional formatters directory, for user-created formatters. Formatters are files that will format the tslint output, before writing it to stdout or the file passed in --out. The default directory, node_modules/tslint/build/formatters, will always be checked first, so user-created formatters with the same names as the base formatters will not be loaded."
                        },
                        "--format": {
                            "id": "args:--format",
                            "type": "string",
                            "description": "The formatter to use to format the results of the linter before outputting it to stdout or the file passed in --out. The core formatters are prose (human readable), json (machine readable) and verbose. prose is the default if this option is not used. Other built-in options include pmd, msbuild, checkstyle, and vso. Additional formatters can be added and used if the --formatters-dir option is set."
                        },
                        "--test": {
                            "id": "args:--test",
                            "type": "null",
                            "description": "Runs tslint on matched directories and checks if tslint outputs match the expected output in .lint files. Automatically loads the tslint.json files in the directories as the configuration file for the tests. See the full tslint documentation for more details on how this can be used to test custom rules."
                        },
                        "--project": {
                            "id": "args:--project",
                            "type": "string",
                            "description": "The path or directory containing a tsconfig.json file that will be used to determine which files will be linted. This flag also enables rules that require the type checker."
                        },
                        "--type-check": {
                            "id": "args:--type-check",
                            "type": "null",
                            "description": "(deprecated) Checks for type errors before linting a project. --project must be specified in order to enable type checking."
                        },
                        "": {
                            "id": "linterhub:path",
                            "type": "string",
                            "description": "Path for analysis"
                        },
                        "--version": {
                            "id:": "linterhub:version",
                            "type": "null",
                            "description": "Output the version number"
                        },
                        "--help": {
                            "type": "null",
                            "description": "Output usage information"
                        }
                    }
                },
                "section": {
                    "type": "object",
                    "description": "The engine configuration section",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "The engine name",
                            "enum": [
                                "tslint"
                            ]
                        },
                        "arguments": {
                            "type": "object",
                            "description": "The engine configuration",
                            "$ref": "#/definitions/arguments"
                        }
                    }
                }
            }
        },
        "deps": {
            "$schema": "https://repometric.github.io/linterhub/schema/deps.json",
            "name": "tslint",
            "dependencies": [
                [
                    {
                        "manager": "platform",
                        "package": "npm"
                    },
                    {
                        "manager": "npm",
                        "package": "typescript"
                    },
                    {
                        "manager": "npm",
                        "package": "tslint",
                        "version": "5.10.0",
                        "engine": true
                    }
                ]
            ]
        },
        "meta": {
            "$schema": "https://repometric.github.io/linterhub/schema/meta.json",
            "name": "tslint",
            "description": "An extensible linter for the TypeScript language",
            "url": "https://palantir.github.io/tslint/",
            "languages": [
                "TypeScript"
            ],
            "license": "Apache-2.0"
        }
    },
    "uncrustify": {
        "args": {
            "$schema": "https://repometric.github.io/linterhub/schema/args.json",
            "name": "uncrustify",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/arguments"
                }
            ],
            "definitions": {
                "arguments": {
                    "type": "object",
                    "properties": {
                        "-c": {
                            "id": "linterhub:config",
                            "type": "string",
                            "description": "Use the config file CFG."
                        },
                        "-o": {
                            "id": "linterhub:filename",
                            "type": "string",
                            "description": "Redirect stdout to FILE."
                        },
                        "--suffix": {
                            "id": "args:--suffix",
                            "type": "string",
                            "description": "Append SFX to the output filename. The default is '.uncrustify'"
                        },
                        "--prefix": {
                            "id": "args:--prefix",
                            "type": "string",
                            "description": "Prepend PFX to the output filename path."
                        },
                        "--replace": {
                            "id": "args:--replace",
                            "type": "null",
                            "description": "Replace source files (creates a backup)."
                        },
                        "--no-backup": {
                            "id": "args:--no-backup",
                            "type": "null",
                            "description": "Replace files, no backup. Useful if files are under source control."
                        },
                        "-l": {
                            "id": "args:-l",
                            "type": "null",
                            "description": "Language override: C, CPP, D, CS, JAVA, PAWN, OC, OC+, VALA."
                        },
                        "-t": {
                            "id": "args:-t",
                            "type": "null",
                            "description": "Load a file with types (usually not needed)."
                        },
                        "-q": {
                            "id": "args:-q",
                            "type": "null",
                            "description": "Quiet mode - no output on stderr (-L will override)."
                        },
                        "--frag": {
                            "id": "args:--frag",
                            "type": "null",
                            "description": "Code fragment, assume the first line is indented correctly."
                        },
                        "--assume": {
                            "id": "args:--assume",
                            "type": "string",
                            "description": "Uses the filename FN for automatic language detection if reading from stdin unless -l is specified."
                        },
                        "--show-config": {
                            "id": "args:--show-config",
                            "type": "null",
                            "description": "Print out option documentation and exit."
                        },
                        "--update-config": {
                            "type": "null",
                            "description": "Output a new config file. Use with -o FILE."
                        },
                        "--update-config-with-doc": {
                            "type": "null",
                            "description": "Output a new config file. Use with -o FILE."
                        },
                        "--universalindent": {
                            "type": "null",
                            "description": "Output a config file for Universal Indent GUI."
                        },
                        "--detect": {
                            "id": "args:--detect",
                            "type": "null",
                            "description": "Detects the config from a source file. Use with '-f FILE'. Detection is fairly limited."
                        },
                        "--set": {
                            "id": "args:--set",
                            "type": "string",
                            "description": "Sets a new value to a config option."
                        },
                        "-p": {
                            "id": "args:-p",
                            "type": "null",
                            "description": "Dump debug info to a file."
                        },
                        "-L": {
                            "id": "args:-L",
                            "type": "string",
                            "description": "Set the log severity (see log_levels.h; note 'A' = 'all')"
                        },
                        "-s": {
                            "id": "args:-s",
                            "type": "null",
                            "description": "Show the log severity in the logs."
                        },
                        "--decode": {
                            "id": "args:--decode",
                            "type": "null",
                            "description": "Decode remaining args (chunk flags) and exit."
                        },
                        "--version": {
                            "id": "linterhub:version",
                            "type": "null",
                            "description": "output version"
                        },
                        "": {
                            "id": "linterhub:path",
                            "type": "string",
                            "description": "Provide a path to source code for analysis. "
                        },
                        "--help": {
                            "type": "null",
                            "description": "Show help"
                        }
                    }
                },
                "section": {
                    "type": "object",
                    "description": "The engine configuration section",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "The engine name",
                            "enum": [
                                "uncrustify"
                            ]
                        },
                        "arguments": {
                            "type": "object",
                            "description": "The engine configuration",
                            "$ref": "#/definitions/arguments"
                        }
                    }
                }
            }
        },
        "deps": {
            "$schema": "https://repometric.github.io/linterhub/schema/deps.json",
            "name": "uncrustify",
            "dependencies": [
                [
                    {
                        "manager": "os",
                        "package": "win"
                    },
                    {
                        "manager": "url",
                        "package": "https://sourceforge.net/projects/uncrustify/files/uncrustify/",
                        "version": "0.66.1",
                        "engine": true
                    }
                ]
            ]
        },
        "meta": {
            "$schema": "https://repometric.github.io/linterhub/schema/meta.json",
            "name": "uncrustify",
            "description": "Source code beautifier for C, C++, C#, ObjectiveC, D, Java, Pawn and VALA.",
            "url": "https://github.com/uncrustify/uncrustify",
            "languages": [
                "C",
                "C++",
                "C#",
                "Objective-C",
                "D",
                "Java",
                "PAWN",
                "Vala"
            ],
            "license": "MIT"
        }
    },
    "vnu": {
        "args": {
            "$schema": "https://repometric.github.io/linterhub/schema/args.json",
            "name": "vnu",
            "id": "vnu",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/arguments"
                }
            ],
            "definitions": {
                "arguments": {
                    "type": "object",
                    "properties": {
                        "--asciiquotes": {
                            "id": "args:--asciiquotes",
                            "type": "null",
                            "description": "Specifies whether ASCII quotation marks are substituted for Unicode smart quotation marks in messages.default: [unset; Unicode smart quotation marks are used in messages]"
                        },
                        "--Werror": {
                            "id": "args:--Werror",
                            "type": "null",
                            "description": "Makes the checker exit non-zero if any warnings are encountered (even if there are no errors).default: [unset; checker exits zero if only warnings are encountered]"
                        },
                        "--errors-only": {
                            "id": "args:--errors-only",
                            "type": "null",
                            "description": "Specifies that only error-level messages and non-document-error messages are reported (so that warnings and info messages are not reported).default: [unset; all message reported, including warnings & info message"
                        },
                        "--exit-zero-always": {
                            "id": "--exit-zero-always",
                            "type": "null",
                            "description": "Makes the checker exit zero even if errors are reported for any documents. default: [unset; checker exits 1 if errors are reported for any documents] Makes the checker exit zero even if errors are reported for any documents. default: [unset; checker exits 1 if errors are reported for any documents]"
                        },
                        "--filterfile": {
                            "id": "args:--filterfile",
                            "type": "string",
                            "description": "Specifies a filename. Each line of the file contains either a regular  expression or starts with '#' to indicate the line is a comment. Any error message or warning message that matches a regular expression in the file is filtered out (dropped/suppressed). default: [unset; checker does no message filtering]"
                        },
                        "--filterpattern": {
                            "id": "args:--filterpattern",
                            "type": "string",
                            "description": "Specifies a regular expression. Any error message or warning message that matches the regular expression is filtered out (dropped/suppressed). As with all other vnu.jar options, this option may only be specified once. So to filter multiple error messages or warning messages, you must provide a single regular expression that will match all the messages. The typical way to do that for regular expressions is to OR multiple patterns together using the '|' character.default: [unset; checker does no message filtering]"
                        },
                        "--format": {
                            "id": "--format",
                            "type": "string",
                            "description": "Specifies the output format for reporting the results.",
                            "default": "gnu",
                            "enum": [
                                "gnu",
                                "xml",
                                "json",
                                "text"
                            ]
                        },
                        "--skip-non-css": {
                            "id": "args:--skip-non-css",
                            "type": "null",
                            "description": "Check documents as CSS but skip documents that don’t have *.css extensions. default: [unset; all documents found are checked]"
                        },
                        "--css": {
                            "id": "args:--css",
                            "type": "null",
                            "description": "Force all documents to be checked as CSS, regardless of extension. default: [unset]"
                        },
                        "--skip-non-svg": {
                            "id": "args:--skip-non-svg",
                            "type": "null",
                            "description": "Check documents as SVG but skip documents that don’t have *.svg extensions. default: [unset; all documents found are checked]"
                        },
                        "--svg": {
                            "id": "args:--svg",
                            "type": "null",
                            "description": "Force all documents to be checked as SVG, regardless of extension. default: [unset]"
                        },
                        "--skip-non-html": {
                            "id": "args:--skip-non-html",
                            "type": "null",
                            "description": "Skip documents that don’t have *.html, *.htm, *.xhtml, or *.xht extensions. default: [unset; all documents found are checked, regardless of extension]"
                        },
                        "--html": {
                            "id": "args:--html",
                            "type": "null",
                            "description": "Forces any *.xhtml or *.xht documents to be parsed using the HTML parser. default: [unset; XML parser is used for *.xhtml and *.xht documents]"
                        },
                        "--also-check-css": {
                            "id": "args:--also-check-css",
                            "type": "null",
                            "description": "Check CSS documents (in addition to checking HTML documents).default: [unset; no documents are checked as CSS]"
                        },
                        "--also-check-svg": {
                            "id": "args:--also-check-svg",
                            "type": "null",
                            "description": "Check SVG documents (in addition to checking HTML documents). default: [unset; no documents are checked as SVG]"
                        },
                        "--user-agent": {
                            "id": "args:--user-agent",
                            "type": "string",
                            "description": "Specifies the value of the User-Agent request header to send when checking HTTPS/HTTP URLs.default: 'Validator.nu/LV'"
                        },
                        "--no-langdetect": {
                            "id": "args:--no-langdetect",
                            "type": "null",
                            "description": "Disables language detection, so that documents are not checked for missing or mislabeled html[lang] attributes. default: [unset; language detection & html[lang] checking are performed]"
                        },
                        "--no-stream": {
                            "id": "args:--no-stream",
                            "type": "null",
                            "description": "Forces all documents to be be parsed in buffered mode instead of streaming mode (causes some parse errors to be treated as non-fatal document errors instead of as fatal document errors). default: [unset; non-streamable parse errors cause fatal document errors]"
                        },
                        "--verbose": {
                            "id": "--verbose",
                            "type": "null",
                            "description": "Specifies 'verbose' output. (Currently this just means that the names of files being checked are written to stdout.)default: [unset; output is not verbose]"
                        },
                        "--version": {
                            "id": "linterhub:version",
                            "type": "null",
                            "description": "output version"
                        },
                        "": {
                            "id": "linterhub:path",
                            "type": "string",
                            "description": "Provide a path to source code for analysis. "
                        },
                        "--help": {
                            "type": "null",
                            "description": "Show help"
                        },
                        "--v": {
                            "id": "linterhub:version",
                            "type": "null",
                            "description": "Show version."
                        }
                    }
                },
                "section": {
                    "type": "object",
                    "description": "The engine configuration section",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "The engine name",
                            "enum": [
                                "vnu"
                            ]
                        },
                        "arguments": {
                            "type": "object",
                            "description": "The engine configuration",
                            "$ref": "#/definitions/arguments"
                        }
                    }
                }
            }
        },
        "deps": {
            "$schema": "https://repometric.github.io/linterhub/schema/deps.json",
            "name": "vnu",
            "dependencies": [
                [
                    {
                        "manager": "platform",
                        "package": "java"
                    },
                    {
                        "manager": "url",
                        "package": "https://github.com/validator/validator/releases/download/18.3.0/vnu.jar_18.3.0.zip",
                        "version": "18.3.0",
                        "engine": true
                    }
                ]
            ]
        },
        "meta": {
            "$schema": "https://repometric.github.io/linterhub/schema/meta.json",
            "name": "vnu",
            "description": "The Nu Html Checker (v.Nu) is the backend of checker.html5.org, html5.validator.nu, and validator.w3.org/nu",
            "url": "https://github.com/validator/validator",
            "languages": [
                "SVG",
                "HTML",
                "CSS"
            ],
            "license": "MIT"
        }
    },
    "xo": {
        "args": {
            "$schema": "https://repometric.github.io/linterhub/schema/args.json",
            "id": "xo",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/options"
                }
            ],
            "definitions": {
                "arguments": {
                    "type": "object",
                    "properties": {
                        "--init": {
                            "id": "args:--init",
                            "type": "string",
                            "description": "Add XO to your project"
                        },
                        "--fix": {
                            "id": "args:--fix",
                            "type": "null",
                            "description": "Automagically fix issues"
                        },
                        "--reporter": {
                            "type": "string",
                            "description": "Reporter to use"
                        },
                        "--env": {
                            "id": "args:--env",
                            "type": "array",
                            "description": "Environment preset"
                        },
                        "--global": {
                            "id": "args:--global",
                            "type": "array",
                            "description": "Global variable"
                        },
                        "--ignore": {
                            "id": "args:--ignore",
                            "type": "array",
                            "description": "Additional paths to ignore"
                        },
                        "--space": {
                            "id": "args:--space",
                            "type": "number",
                            "description": "Use space indent instead of tabs"
                        },
                        "--no-semicolon": {
                            "type": "string",
                            "description": "Prevent use of semicolons"
                        },
                        "--plugin": {
                            "id": "args:--plugin",
                            "type": "array",
                            "description": "Include third-party plugins"
                        },
                        "--extend": {
                            "id": "args:--extend",
                            "type": "array",
                            "description": "Extend defaults with a custom config"
                        },
                        "--open": {
                            "id": "args:--open",
                            "type": "string",
                            "description": "Open files with issues in your editor"
                        },
                        "--quiet": {
                            "id": "args:--quiet",
                            "type": "null",
                            "description": "Show only errors and no warnings"
                        },
                        "--extension": {
                            "id": "args:--extension",
                            "type": "array",
                            "description": "Additional extension to lint"
                        },
                        "--no-esnext": {
                            "id": "args:--no-esnext",
                            "type": "null",
                            "description": "Don't enforce ES2015+ rules"
                        },
                        "--cwd": {
                            "type": "string",
                            "description": "Working directory for files"
                        },
                        "--help": {
                            "type": "null",
                            "description": "Show help"
                        },
                        "--stdin-filename": {
                            "type": "string",
                            "description": "Specify a filename for the --stdin option"
                        },
                        "--stdin": {
                            "id": "linterhub:stdin",
                            "type": "null",
                            "description": "Lint code provided on stdin"
                        },
                        "": {
                            "id": "linterhub:path",
                            "type": "string",
                            "description": "Path for analysis"
                        }
                    }
                },
                "section": {
                    "type": "object",
                    "description": "The engine configuration section",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "The engine name",
                            "enum": [
                                "xo"
                            ]
                        },
                        "options": {
                            "type": "object",
                            "description": "The engine configuration",
                            "$ref": "#/definitions/options"
                        }
                    }
                }
            }
        },
        "deps": {
            "$schema": "https://repometric.github.io/linterhub/schema/deps.json",
            "id": "xo",
            "name": "xo",
            "dependencies": [
                [
                    {
                        "manager": "platform",
                        "package": "npm"
                    },
                    {
                        "manager": "npm",
                        "package": "xo",
                        "version": "0.20.3",
                        "engine": true
                    }
                ]
            ]
        },
        "meta": {
            "$schema": "https://repometric.github.io/linterhub/schema/meta.json",
            "name": "xo",
            "description": "JavaScript happiness style linter",
            "url": "https://github.com/sindresorhus/xo",
            "languages": [
                "JavaScript"
            ],
            "license": "MIT"
        }
    }
}
